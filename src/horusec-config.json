{
    "version": "v2.6.9",
    "id": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
    "repositoryID": "00000000-0000-0000-0000-000000000000",
    "repositoryName": "",
    "workspaceID": "00000000-0000-0000-0000-000000000000",
    "workspaceName": "",
    "status": "error",
    "errors": "Error It looks like your project doesn't have a gemfile.lock file, it would be a good idea to commit it so horusec can check for vulnerabilities; {HORUSEC_CLI} Error not found rails project syntax; {HORUSEC_CLI} Error Yarn returned an error: ERROR_RUNNING_YARN_AUDIT{\"type\":\"warning\",\"data\":\"../../package.json: No license field\"}\r\n; {HORUSEC_CLI} Error WARNING: Failed to load module: missing module with source 'git::https://github.com/tweag/terraform-nixos.git//google_image_nixos_custom?ref=40fedb1fae7df5bd7ad9defdd71eb06b7252810f' -  try to 'terraform init' first\r\nWARNING: Failed to load module: failed to load module chainsail_gcp: open /src/modules/chainsail-gcp: no such file or directory\r\nWARNING: Failed to load module: failed to load module chainsail_k8s: open /src/modules/chainsail-k8s: no such file or directory\r\nWARNING: Failed to load module: failed to load module chainsail-k8s: open /src/modules/chainsail-k8s: no such file or directory\r\n{\r\n\t\"results\": [\r\n\t\t{\r\n\t\t\t\"rule_id\": \"google-gke-enforce-pod-security-policy\",\r\n\t\t\t\"legacy_rule_id\": \"GCP009\",\r\n\t\t\t\"rule_description\": \"Pod security policy enforcement not defined.\",\r\n\t\t\t\"rule_provider\": \"google\",\r\n\t\t\t\"impact\": \"Pods could be operating with more permissions than required to be effective\",\r\n\t\t\t\"resolution\": \"Use security policies for pods to restrict permissions to those needed to be effective\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/google/gke/enforce-pod-security-policy#google/gke\",\r\n\t\t\t\t\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#pod_security_policy_config\",\r\n\t\t\t\t\"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#admission_controllers\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Resource 'google_container_cluster.chainsail' defines a cluster with no Pod Security Policy config defined. It is recommended to define a PSP for your pods and enable PSP enforcement.\",\r\n\t\t\t\"severity\": \"HIGH\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/chainsail/terraform/modules/chainsail-gcp/main.tf\",\r\n\t\t\t\t\"start_line\": 42,\r\n\t\t\t\t\"end_line\": 52\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"rule_id\": \"google-gke-node-shielding-enabled\",\r\n\t\t\t\"legacy_rule_id\": \"GCP010\",\r\n\t\t\t\"rule_description\": \"Shielded GKE nodes not enabled.\",\r\n\t\t\t\"rule_provider\": \"google\",\r\n\t\t\t\"impact\": \"Node identity and integrity can't be verified without shielded GKE nodes\",\r\n\t\t\t\"resolution\": \"Enable node shielding\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/google/gke/node-shielding-enabled#google/gke\",\r\n\t\t\t\t\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#enable_shielded_nodes\",\r\n\t\t\t\t\"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#shielded_nodes\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Resource 'google_container_cluster.chainsail' defines a cluster with shielded nodes disabled. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.\",\r\n\t\t\t\"severity\": \"HIGH\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/chainsail/terraform/modules/chainsail-gcp/main.tf\",\r\n\t\t\t\t\"start_line\": 42,\r\n\t\t\t\t\"end_line\": 52\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"rule_id\": \"google-storage-enable-ubla\",\r\n\t\t\t\"legacy_rule_id\": \"\",\r\n\t\t\t\"rule_description\": \"Ensure that Cloud Storage buckets have uniform bucket-level access enabled\",\r\n\t\t\t\"rule_provider\": \"google\",\r\n\t\t\t\"impact\": \"ACLs are difficult to manage and often lead to incorrect/unintended configurations.\",\r\n\t\t\t\"resolution\": \"Enable uniform bucket level access to provide a uniform permissioning system.\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/google/storage/enable-ubla#google/storage\",\r\n\t\t\t\t\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access\",\r\n\t\t\t\t\"https://cloud.google.com/storage/docs/uniform-bucket-level-access\",\r\n\t\t\t\t\"https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Resource 'google_storage_bucket.nix_cache_bucket' does not have uniform_bucket_level_access enabled.\",\r\n\t\t\t\"severity\": \"MEDIUM\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/blog-resources/buildkite-for-nix-ci/nix_cache.tf\",\r\n\t\t\t\t\"start_line\": 1,\r\n\t\t\t\t\"end_line\": 8\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"rule_id\": \"google-storage-no-public-access\",\r\n\t\t\t\"legacy_rule_id\": \"\",\r\n\t\t\t\"rule_description\": \"Ensure that Cloud Storage bucket is not anonymously or publicly accessible.\",\r\n\t\t\t\"rule_provider\": \"google\",\r\n\t\t\t\"impact\": \"Public exposure of sensitive data.\",\r\n\t\t\t\"resolution\": \"Restrict public access to the bucket.\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/google/storage/no-public-access#google/storage\",\r\n\t\t\t\t\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket_iam#member/members\",\r\n\t\t\t\t\"https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Resource 'google_storage_bucket_iam_member.buildkite_nix_cache_reader' allows public access via member attribute.\",\r\n\t\t\t\"severity\": \"HIGH\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/blog-resources/buildkite-for-nix-ci/nix_cache.tf\",\r\n\t\t\t\t\"start_line\": 19,\r\n\t\t\t\t\"end_line\": 19\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"rule_id\": \"general-secrets-sensitive-in-attribute\",\r\n\t\t\t\"legacy_rule_id\": \"GEN003\",\r\n\t\t\t\"rule_description\": \"Potentially sensitive data stored in block attribute.\",\r\n\t\t\t\"rule_provider\": \"general\",\r\n\t\t\t\"impact\": \"Block attribute could be leaking secrets\",\r\n\t\t\t\"resolution\": \"Don't include sensitive data in blocks\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/general/secrets/sensitive-in-attribute#general/secrets\",\r\n\t\t\t\t\"https://www.terraform.io/docs/state/sensitive-data.html\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Block 'module.chainsail_gcp' includes a potentially sensitive attribute which is defined within the project.\",\r\n\t\t\t\"severity\": \"CRITICAL\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/chainsail/terraform/base/dev/main.tf\",\r\n\t\t\t\t\"start_line\": 39,\r\n\t\t\t\t\"end_line\": 39\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"rule_id\": \"google-storage-enable-ubla\",\r\n\t\t\t\"legacy_rule_id\": \"\",\r\n\t\t\t\"rule_description\": \"Ensure that Cloud Storage buckets have uniform bucket-level access enabled\",\r\n\t\t\t\"rule_provider\": \"google\",\r\n\t\t\t\"impact\": \"ACLs are difficult to manage and often lead to incorrect/unintended configurations.\",\r\n\t\t\t\"resolution\": \"Enable uniform bucket level access to provide a uniform permissioning system.\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/google/storage/enable-ubla#google/storage\",\r\n\t\t\t\t\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access\",\r\n\t\t\t\t\"https://cloud.google.com/storage/docs/uniform-bucket-level-access\",\r\n\t\t\t\t\"https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Resource 'google_storage_bucket.results' does not have uniform_bucket_level_access enabled.\",\r\n\t\t\t\"severity\": \"MEDIUM\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/chainsail/terraform/modules/chainsail-gcp/main.tf\",\r\n\t\t\t\t\"start_line\": 12,\r\n\t\t\t\t\"end_line\": 23\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"rule_id\": \"google-gke-no-legacy-authentication\",\r\n\t\t\t\"legacy_rule_id\": \"GCP008\",\r\n\t\t\t\"rule_description\": \"Legacy client authentication methods utilized.\",\r\n\t\t\t\"rule_provider\": \"google\",\r\n\t\t\t\"impact\": \"Username and password authentication methods are less secure\",\r\n\t\t\t\"resolution\": \"Use service account or OAuth for authentication\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/google/gke/no-legacy-authentication#google/gke\",\r\n\t\t\t\t\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/container_cluster#master_auth\",\r\n\t\t\t\t\"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#restrict_authn_methods\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Resource 'google_container_cluster.chainsail' does not disable basic auth with static passwords for client authentication. Disable this with a master_auth block container empty strings for user and password.\",\r\n\t\t\t\"severity\": \"HIGH\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/chainsail/terraform/modules/chainsail-gcp/main.tf\",\r\n\t\t\t\t\"start_line\": 42,\r\n\t\t\t\t\"end_line\": 52\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"rule_id\": \"google-storage-enable-ubla\",\r\n\t\t\t\"legacy_rule_id\": \"\",\r\n\t\t\t\"rule_description\": \"Ensure that Cloud Storage buckets have uniform bucket-level access enabled\",\r\n\t\t\t\"rule_provider\": \"google\",\r\n\t\t\t\"impact\": \"ACLs are difficult to manage and often lead to incorrect/unintended configurations.\",\r\n\t\t\t\"resolution\": \"Enable uniform bucket level access to provide a uniform permissioning system.\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/google/storage/enable-ubla#google/storage\",\r\n\t\t\t\t\"https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/storage_bucket#uniform_bucket_level_access\",\r\n\t\t\t\t\"https://cloud.google.com/storage/docs/uniform-bucket-level-access\",\r\n\t\t\t\t\"https://jbrojbrojbro.medium.com/you-make-the-rules-with-authentication-controls-for-cloud-storage-53c32543747b\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Resource 'google_storage_bucket.nixos_image' does not have uniform_bucket_level_access enabled.\",\r\n\t\t\t\"severity\": \"MEDIUM\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/blog-resources/buildkite-for-nix-ci/nixos_image_custom.tf\",\r\n\t\t\t\t\"start_line\": 1,\r\n\t\t\t\t\"end_line\": 4\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"rule_id\": \"general-secrets-sensitive-in-attribute\",\r\n\t\t\t\"legacy_rule_id\": \"GEN003\",\r\n\t\t\t\"rule_description\": \"Potentially sensitive data stored in block attribute.\",\r\n\t\t\t\"rule_provider\": \"general\",\r\n\t\t\t\"impact\": \"Block attribute could be leaking secrets\",\r\n\t\t\t\"resolution\": \"Don't include sensitive data in blocks\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/general/secrets/sensitive-in-attribute#general/secrets\",\r\n\t\t\t\t\"https://www.terraform.io/docs/state/sensitive-data.html\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Block 'module.chainsail_gcp' includes a potentially sensitive attribute which is defined within the project.\",\r\n\t\t\t\"severity\": \"CRITICAL\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/chainsail/terraform/base/dev/main.tf\",\r\n\t\t\t\t\"start_line\": 38,\r\n\t\t\t\t\"end_line\": 38\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"rule_id\": \"general-secrets-sensitive-in-attribute\",\r\n\t\t\t\"legacy_rule_id\": \"GEN003\",\r\n\t\t\t\"rule_description\": \"Potentially sensitive data stored in block attribute.\",\r\n\t\t\t\"rule_provider\": \"general\",\r\n\t\t\t\"impact\": \"Block attribute could be leaking secrets\",\r\n\t\t\t\"resolution\": \"Don't include sensitive data in blocks\",\r\n\t\t\t\"links\": [\r\n\t\t\t\t\"https://tfsec.dev/docs/general/secrets/sensitive-in-attribute#general/secrets\",\r\n\t\t\t\t\"https://www.terraform.io/docs/state/sensitive-data.html\"\r\n\t\t\t],\r\n\t\t\t\"description\": \"Block 'module.chainsail-k8s' includes a potentially sensitive attribute which is defined within the project.\",\r\n\t\t\t\"severity\": \"CRITICAL\",\r\n\t\t\t\"status\": \"failed\",\r\n\t\t\t\"location\": {\r\n\t\t\t\t\"filename\": \"/src/chainsail/terraform/cluster/local/main.tf\",\r\n\t\t\t\t\"start_line\": 48,\r\n\t\t\t\t\"end_line\": 48\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}\r\n",
    "createdAt": "2022-07-25T20:16:53.160828-04:00",
    "finishedAt": "2022-07-25T20:19:19.088748-04:00",
    "analysisVulnerabilities": [
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088915-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "46c7d1fb-9b62-4701-ad0b-b790fb0017ba",
          "line": "",
          "column": "",
          "confidence": "LOW",
          "file": "bors-ng/apps/bors_frontend/package-lock.json",
          "code": "minimist",
          "details": "Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).",
          "securityTool": "NpmAudit",
          "language": "JavaScript",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "f32ff85b548591a7802ae5009644fe8170b7299ec9468c9c102481496a29ef43"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089115-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "86e4b184-3ea0-40f5-9f28-9d33ac2227d2",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "minimist",
          "details": "Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).\nInstalled Version: \"1.2.5\", Update to Version: \"1.2.6\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-44906.\nCwe Links: (https://cwe.mitre.org/data/definitions/1321.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "b96f27882a59499571839fb22425b82f45e2629b10dbe48e9eae94928f70496f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089152-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9284429e-fc22-4bd1-8f60-3e2dea98c6c6",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "shell-quote",
          "details": "The shell-quote package before 1.7.3 for Node.js allows command injection. An attacker can inject unescaped shell metacharacters through a regex designed to support Windows drive letters. If the output of this package is passed to a real shell as a quoted argument to a command with exec(), an attacker can inject arbitrary commands. This is because the Windows drive letter regex character class is {A-z] instead of the correct {A-Za-z]. Several shell metacharacters exist in the space between capital letter Z and lower case letter a, such as the backtick character.\nInstalled Version: \"1.7.2\", Update to Version: \"1.7.3\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-42740.\nCwe Links: (https://cwe.mitre.org/data/definitions/77.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "75e26d3bc3258fcd5b642e09908f6a15daccb6111608a4162894e4546c86f9c0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089184-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0f337f76-d7fd-4bc7-940e-197c3c03b559",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "json-ptr",
          "details": "This affects the package json-ptr before 3.0.0. A type confusion vulnerability can lead to a bypass of CVE-2020-7766 when the user-provided keys used in the pointer parameter are arrays.\nInstalled Version: \"2.2.0\", Update to Version: \"3.0.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23509.\nCwe Links: (https://cwe.mitre.org/data/definitions/843.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "1f37e67d7aeea1d9247fca5548f4d00a3dd4f6d5b0344f93e293524fb15584b8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089187-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4a608dd2-2307-4f0c-a0f2-6fbd3ec3d8e4",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "minimist",
          "details": "Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).\nInstalled Version: \"1.2.5\", Update to Version: \"1.2.6\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-44906.\nCwe Links: (https://cwe.mitre.org/data/definitions/1321.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "a98349a4aae2924c1673f3fbfdc1838a96f768fc2ef901eb67d7df8758370f2e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089198-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3b8f218a-9b2e-4d48-b69a-d0b18ca5c229",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "vm2",
          "details": "The package vm2 before 3.9.6 are vulnerable to Sandbox Bypass via direct access to host error objects generated by node internals during generation of a stacktraces, which can lead to execution of arbitrary code on the host machine.\nInstalled Version: \"3.9.5\", Update to Version: \"3.9.6\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23555.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "f41998e029bcb8f4fdf4ef948c718eda6443ef75dae42903d577ef5bc519f58d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089375-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a51590a5-b5a0-4804-85a8-d209bcf6b901",
          "line": "4",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "github.com/ghc/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/StableName.h",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "57aa3fdf9a46b8725c840168c41dc1aaa48495506d3fe795b04c71e95658d15d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089376-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "63206efd-d6b1-4312-b624-283dda0bd26e",
          "line": "5",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "// https://github.com/ghc/ghc/blob/43967c0c7d2d0110cfc5f9d64a7dab3a3dda8953/rts/StableName.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "53e9c3e06db16fd2f76b63fde087c35bf1e1956da54eba935f70a226bd277b78"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089377-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b5e54db3-e7d2-4436-98c2-dc1dbb2e5e4f",
          "line": "22",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "ub.com/ghc/ghc/blob/fe819dd637842fb564524a7cf80612a3673ce14c/includes/rts/storage/Closures.h#L197",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b2ee20b0f1f4344480790be59b7a01341d50b8fe6ddfac1aaabac972b596da8f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089378-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a9c8e334-0f97-4ef3-958e-431fccef66c1",
          "line": "26",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/flake.nix",
          "code": "url = \"github:tweag/plutus-libs/b0de13adecd7f37174500444dd4995ada17254f4\";",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4c3d253ce3ddb554aa839b3c3eb92671625b8f575b8163f15323c98e1110509d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089379-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "55c2295d-e018-4de7-b490-988c9a3d98ae",
          "line": "166",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c#L215",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fb2218c1f8920a3e6e7be1f141d72c5ecb7a64c2a5e0fe80c0c0aed37c1064b9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089381-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "94c7fccb-f25c-48a1-8d97-cfe106a57d1c",
          "line": "204",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b143c899ae75395b612db0743677a42ff5f2d21593e50644b27d57c017b0c4b2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089382-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0fed708f-b778-45be-949c-1931eff3f83f",
          "line": "586",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/Printer.c#L609",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7aff2a441076287ff49490beeb8af5dec84ea01028072425a035a047e626edf8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089383-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4c052cfa-5381-4533-b6cd-2c60c6c5c24b",
          "line": "587",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/sm/Scav.c#L1944",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2f33af915cd86a8239659f1631929482f57c9e6d4ef5e33e1520c0b3ab83979f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089384-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d12e912c-4cd8-460f-90ea-b88a640d330c",
          "line": "646",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/Constants.h#L186",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c047852de2766cb1b202e55bc6cb81cfe9932f2962ad61c9bec80b7a2043866e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089385-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9e0470ac-3128-485a-8aee-ba9174fb51b5",
          "line": "651",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/includes/rts/storage/InfoTables.h#L116",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9d3500114f56ca99a4dde9309745f399fd5d5442b5ae5db7dda238f24f4ffad0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089386-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5ed7c5fb-1f37-43ef-a5dc-fff6ee88a38c",
          "line": "68",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/src/Asterius/Foreign/DsForeign.hs",
          "code": "github.com/ghc/ghc/commit/ff04eb5973b69fcc60e7d0945a74becd068c1888#diff-c101aeb1e72786c2c6e5035cda85",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6052f386343f71892e5556805ed43a0aec6c9443dd3a234ce660125fb18b87bc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089388-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "27a13399-7db6-45c5-bd0a-4c8d87a8cca6",
          "line": "38",
          "column": "38",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/cardax-dex-browser-lib/Makefile",
          "code": "nix shell nixpkgs#postgresql -c psql postgresql://ctxlib:ctxlib@localhost:5432",
          "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ebfd9ad09c0b699383805b1a7b042bcefca9ded19c13c733ef5451cfdb0cd2b0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089389-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2cf68ef0-30dd-456a-85be-c80706626ea1",
          "line": "4",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "github.com/ghc/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/StableName.h",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "57aa3fdf9a46b8725c840168c41dc1aaa48495506d3fe795b04c71e95658d15d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08939-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d4db36df-688b-49e5-b369-e1eea314dbba",
          "line": "5",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "// https://github.com/ghc/ghc/blob/43967c0c7d2d0110cfc5f9d64a7dab3a3dda8953/rts/StableName.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "53e9c3e06db16fd2f76b63fde087c35bf1e1956da54eba935f70a226bd277b78"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089391-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e67c508b-9c45-4d6e-af55-4929a09325e0",
          "line": "22",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "ub.com/ghc/ghc/blob/fe819dd637842fb564524a7cf80612a3673ce14c/includes/rts/storage/Closures.h#L197",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b2ee20b0f1f4344480790be59b7a01341d50b8fe6ddfac1aaabac972b596da8f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089392-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8cb242db-6175-47b3-a3ce-3dbda33af7ff",
          "line": "166",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c#L215",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fb2218c1f8920a3e6e7be1f141d72c5ecb7a64c2a5e0fe80c0c0aed37c1064b9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089393-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ad68b06d-c5cc-461c-810c-28590aac73c4",
          "line": "204",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b143c899ae75395b612db0743677a42ff5f2d21593e50644b27d57c017b0c4b2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089394-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "52311600-1e4a-4036-8298-36e5a15a4c94",
          "line": "586",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/Printer.c#L609",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7aff2a441076287ff49490beeb8af5dec84ea01028072425a035a047e626edf8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089395-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "cf568b5b-436e-4fca-804d-4be27ecafccb",
          "line": "587",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/sm/Scav.c#L1944",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2f33af915cd86a8239659f1631929482f57c9e6d4ef5e33e1520c0b3ab83979f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089396-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "00c67c3b-c0a7-4498-89da-5be1c05088bb",
          "line": "646",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/Constants.h#L186",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c047852de2766cb1b202e55bc6cb81cfe9932f2962ad61c9bec80b7a2043866e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089397-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f8f15e53-f13c-4ee4-a64f-81a799e45b80",
          "line": "651",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/includes/rts/storage/InfoTables.h#L116",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9d3500114f56ca99a4dde9309745f399fd5d5442b5ae5db7dda238f24f4ffad0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089399-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "89446511-e910-4f28-a6e5-a3102db16cc6",
          "line": "68",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/src/Asterius/Foreign/DsForeign.hs",
          "code": "github.com/ghc/ghc/commit/ff04eb5973b69fcc60e7d0945a74becd068c1888#diff-c101aeb1e72786c2c6e5035cda85",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6052f386343f71892e5556805ed43a0aec6c9443dd3a234ce660125fb18b87bc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.0894-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "436746b1-96b8-4993-97aa-1ba82608df9f",
          "line": "38",
          "column": "38",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/cardax-dex-browser-lib/Makefile",
          "code": "nix shell nixpkgs#postgresql -c psql postgresql://ctxlib:ctxlib@localhost:5432",
          "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ebfd9ad09c0b699383805b1a7b042bcefca9ded19c13c733ef5451cfdb0cd2b0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089401-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4f91d43f-2e54-483d-9048-fcb6ce71a358",
          "line": "26",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/flake.nix",
          "code": "url = \"github:tweag/plutus-libs/b0de13adecd7f37174500444dd4995ada17254f4\";",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4c3d253ce3ddb554aa839b3c3eb92671625b8f575b8163f15323c98e1110509d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089402-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "38bd6ec4-2d22-41d1-958c-0ba3523e63b9",
          "line": "38",
          "column": "38",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/cardax-dex-browser-lib/Makefile",
          "code": "nix shell nixpkgs#postgresql -c psql postgresql://ctxlib:ctxlib@localhost:5432",
          "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ebfd9ad09c0b699383805b1a7b042bcefca9ded19c13c733ef5451cfdb0cd2b0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089403-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bf78c263-20a5-4f1f-b91d-15d333778dcc",
          "line": "4",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "github.com/ghc/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/StableName.h",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "57aa3fdf9a46b8725c840168c41dc1aaa48495506d3fe795b04c71e95658d15d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089405-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f9300139-38c5-4978-853c-44c4cdcc4f90",
          "line": "5",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "// https://github.com/ghc/ghc/blob/43967c0c7d2d0110cfc5f9d64a7dab3a3dda8953/rts/StableName.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "53e9c3e06db16fd2f76b63fde087c35bf1e1956da54eba935f70a226bd277b78"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089406-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ae7bc050-32d5-4e47-972a-35698212f3f6",
          "line": "22",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "ub.com/ghc/ghc/blob/fe819dd637842fb564524a7cf80612a3673ce14c/includes/rts/storage/Closures.h#L197",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b2ee20b0f1f4344480790be59b7a01341d50b8fe6ddfac1aaabac972b596da8f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089407-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a7b64280-ed06-4e69-87b0-3ac9fc332677",
          "line": "68",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/src/Asterius/Foreign/DsForeign.hs",
          "code": "github.com/ghc/ghc/commit/ff04eb5973b69fcc60e7d0945a74becd068c1888#diff-c101aeb1e72786c2c6e5035cda85",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6052f386343f71892e5556805ed43a0aec6c9443dd3a234ce660125fb18b87bc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089408-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0e5d2a13-6e27-4607-88be-08cba72c7865",
          "line": "166",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c#L215",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fb2218c1f8920a3e6e7be1f141d72c5ecb7a64c2a5e0fe80c0c0aed37c1064b9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089409-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "15c46ea1-51fe-4119-94a2-88454970c65a",
          "line": "204",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b143c899ae75395b612db0743677a42ff5f2d21593e50644b27d57c017b0c4b2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08941-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5cbcac0f-2a37-43cb-8159-b81064ee205d",
          "line": "586",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/Printer.c#L609",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7aff2a441076287ff49490beeb8af5dec84ea01028072425a035a047e626edf8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089411-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3d11db96-c613-4778-a845-3fdbbe5533f7",
          "line": "587",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/sm/Scav.c#L1944",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2f33af915cd86a8239659f1631929482f57c9e6d4ef5e33e1520c0b3ab83979f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089412-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "00e11ae7-e3d5-4efa-bdfe-a019a5a1b4ff",
          "line": "646",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/Constants.h#L186",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c047852de2766cb1b202e55bc6cb81cfe9932f2962ad61c9bec80b7a2043866e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089413-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e0668227-37ac-475c-b48d-5bc404c880dd",
          "line": "651",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/includes/rts/storage/InfoTables.h#L116",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9d3500114f56ca99a4dde9309745f399fd5d5442b5ae5db7dda238f24f4ffad0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089415-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f46e2d2e-89db-4700-8546-5a6294bdc1d4",
          "line": "26",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/flake.nix",
          "code": "url = \"github:tweag/plutus-libs/b0de13adecd7f37174500444dd4995ada17254f4\";",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4c3d253ce3ddb554aa839b3c3eb92671625b8f575b8163f15323c98e1110509d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089416-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f34fe90d-ca89-4353-8a9e-b936b9b6b907",
          "line": "68",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/src/Asterius/Foreign/DsForeign.hs",
          "code": "github.com/ghc/ghc/commit/ff04eb5973b69fcc60e7d0945a74becd068c1888#diff-c101aeb1e72786c2c6e5035cda85",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6052f386343f71892e5556805ed43a0aec6c9443dd3a234ce660125fb18b87bc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089417-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6b6cceac-026c-455b-8779-7f939e853aab",
          "line": "38",
          "column": "38",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/cardax-dex-browser-lib/Makefile",
          "code": "nix shell nixpkgs#postgresql -c psql postgresql://ctxlib:ctxlib@localhost:5432",
          "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ebfd9ad09c0b699383805b1a7b042bcefca9ded19c13c733ef5451cfdb0cd2b0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089418-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "312a26b5-f6f8-4c3a-a57f-d16aa3d610de",
          "line": "4",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "github.com/ghc/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/StableName.h",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "57aa3fdf9a46b8725c840168c41dc1aaa48495506d3fe795b04c71e95658d15d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089419-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0f1b02f2-7fe6-46bc-9acd-ebfae569eaf6",
          "line": "5",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "// https://github.com/ghc/ghc/blob/43967c0c7d2d0110cfc5f9d64a7dab3a3dda8953/rts/StableName.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "53e9c3e06db16fd2f76b63fde087c35bf1e1956da54eba935f70a226bd277b78"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08942-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "99fb299e-24dd-469f-930e-5032249f7e69",
          "line": "22",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "ub.com/ghc/ghc/blob/fe819dd637842fb564524a7cf80612a3673ce14c/includes/rts/storage/Closures.h#L197",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b2ee20b0f1f4344480790be59b7a01341d50b8fe6ddfac1aaabac972b596da8f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089422-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "82f4a7e4-aebc-422e-80f1-a31a4970648e",
          "line": "26",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/flake.nix",
          "code": "url = \"github:tweag/plutus-libs/b0de13adecd7f37174500444dd4995ada17254f4\";",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4c3d253ce3ddb554aa839b3c3eb92671625b8f575b8163f15323c98e1110509d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089423-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0b8c7f00-c4ce-4909-b8d3-f6caf40f0e71",
          "line": "166",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c#L215",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fb2218c1f8920a3e6e7be1f141d72c5ecb7a64c2a5e0fe80c0c0aed37c1064b9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089424-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b3ae385d-6548-4442-9b13-c40a83cffd29",
          "line": "204",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b143c899ae75395b612db0743677a42ff5f2d21593e50644b27d57c017b0c4b2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089425-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4da5d60e-8cdd-4166-8e4b-b79929b4aaa6",
          "line": "586",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/Printer.c#L609",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7aff2a441076287ff49490beeb8af5dec84ea01028072425a035a047e626edf8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089426-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "cd63ea38-f7a7-475d-b86f-c11c5b39e81f",
          "line": "587",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/sm/Scav.c#L1944",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2f33af915cd86a8239659f1631929482f57c9e6d4ef5e33e1520c0b3ab83979f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089427-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ef98f967-d004-472c-9cda-aa681e83118e",
          "line": "646",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/Constants.h#L186",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c047852de2766cb1b202e55bc6cb81cfe9932f2962ad61c9bec80b7a2043866e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089428-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2d851314-87d0-483d-8b0c-1a283a10ad39",
          "line": "651",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/includes/rts/storage/InfoTables.h#L116",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9d3500114f56ca99a4dde9309745f399fd5d5442b5ae5db7dda238f24f4ffad0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089429-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "dea623ed-8de6-452c-bb79-2872dc20a22b",
          "line": "38",
          "column": "38",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/cardax-dex-browser-lib/Makefile",
          "code": "nix shell nixpkgs#postgresql -c psql postgresql://ctxlib:ctxlib@localhost:5432",
          "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ebfd9ad09c0b699383805b1a7b042bcefca9ded19c13c733ef5451cfdb0cd2b0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08943-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6881078b-4894-4032-be79-ae79a364232c",
          "line": "433",
          "column": "46",
          "confidence": "MEDIUM",
          "file": "audit-2022-djed/config/testnet/testnet-byron-genesis.json",
          "code": ", \"KOp96-E17RXmCf0_vEOcecpTmY8W0wpbpBwFuPwFbKM=\": \"20000000000000\"",
          "details": "Facebook Client ID\nWhen use Facebook Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "82ce7021c5604afd084b66957fc13399207f1f0877887fd94da06b4234e0e43f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089432-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a783118f-a77c-4b52-a2d9-0597e6a4e37f",
          "line": "446",
          "column": "37",
          "confidence": "MEDIUM",
          "file": "audit-2022-djed/config/testnet/testnet-byron-genesis.json",
          "code": ", \"K4m8Vu1qtFRavgx0jrctVErZf6VbKDfBnigjQef6k-o=\": \"20000000000000\"",
          "details": "Facebook Client ID\nWhen use Facebook Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e346e4d2081d83429db5b3ee3e8c15cfdc45f77b87a46bb8433cb295bdabeb00"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089433-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f2958c98-01fa-49e9-9f65-06bcc5e80b2b",
          "line": "450",
          "column": "35",
          "confidence": "MEDIUM",
          "file": "audit-2022-djed/config/testnet/testnet-byron-genesis.json",
          "code": ", \"kMAvVvgk0sEf3kHXyfb8gQ6H4gWaFBDSUwms4IFs2jo=\": \"20000000000000\"",
          "details": "Facebook Client ID\nWhen use Facebook Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "cc9244a9c8ba3be24080a931ead9db7b7cf3456f3ac40339f1bc70ffaf5433f2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089434-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3ff35f85-12ad-4587-826a-3f52afdd8876",
          "line": "433",
          "column": "46",
          "confidence": "MEDIUM",
          "file": "audit-2022-05-geniusyield/testnet/configs/testnet-byron-genesis.json",
          "code": ", \"KOp96-E17RXmCf0_vEOcecpTmY8W0wpbpBwFuPwFbKM=\": \"20000000000000\"",
          "details": "Facebook Client ID\nWhen use Facebook Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c7550f55d4e15c05454c708afcdf74d9c7ee017d59425185fd5e31cacf6c6f8f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089435-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fa01351d-fe2c-41f3-85d5-b20c6545f50e",
          "line": "446",
          "column": "37",
          "confidence": "MEDIUM",
          "file": "audit-2022-05-geniusyield/testnet/configs/testnet-byron-genesis.json",
          "code": ", \"K4m8Vu1qtFRavgx0jrctVErZf6VbKDfBnigjQef6k-o=\": \"20000000000000\"",
          "details": "Facebook Client ID\nWhen use Facebook Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b04940aaeafd52dcb8e2f40e7e9d9142591be21c55c283c038f9601400d8d5ea"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089436-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "cd657c3f-c8ee-44a3-8b40-21dc7f8d2843",
          "line": "450",
          "column": "35",
          "confidence": "MEDIUM",
          "file": "audit-2022-05-geniusyield/testnet/configs/testnet-byron-genesis.json",
          "code": ", \"kMAvVvgk0sEf3kHXyfb8gQ6H4gWaFBDSUwms4IFs2jo=\": \"20000000000000\"",
          "details": "Facebook Client ID\nWhen use Facebook Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2abb54d277f84eaf99461f785e2e8bc718fd1ce5ca30127733b3ea61f02372ae"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089437-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5c20b14c-a22f-4fff-b7d9-b867485b394f",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "attoparsec/benchmarks/json-data/twitter100.json",
          "code": "",
          "details": "Facebook Client ID\nWhen use Facebook Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "39af4bf5e1eda1cc825860cb49ef2242c08c70c957f8cba8551e1977a6c1bce4"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089439-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e5bf6547-60f6-4fc3-a237-f0cb94a02859",
          "line": "26",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "audit-docs/client-reports/2022-06-Cardax/deliverables/flake.nix",
          "code": "url = \"github:tweag/plutus-libs/b0de13adecd7f37174500444dd4995ada17254f4\";",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "86ecdc99df38e1d78cc73c6e783a12353ebfef4e98679be85208fbb9f31ef2d1"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08944-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2a19c489-073b-416f-a1d0-779cc0351a18",
          "line": "26",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/flake.nix",
          "code": "url = \"github:tweag/plutus-libs/b0de13adecd7f37174500444dd4995ada17254f4\";",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4c3d253ce3ddb554aa839b3c3eb92671625b8f575b8163f15323c98e1110509d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089441-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "979adec7-8cd2-42e0-ad98-bcb1a1a656f2",
          "line": "7",
          "column": "28",
          "confidence": "MEDIUM",
          "file": "attoparsec/benchmarks/http-request.txt",
          "code": "twitter_sess=BAh7CSIKZmxhc2hJQz-e1e1; __utma=43838368.452555194.1399611824.1; __utmb=43838368; __utm",
          "details": "Twitter Client ID\nWhen use Twitter Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8ccc0e9a05a36cfdb0ea42ccdf12dabbd5c1526f8352de60fc540664860fed58"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089442-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "225ee334-c376-45ab-a7a0-a8dfc447c8e7",
          "line": "19",
          "column": "4",
          "confidence": "MEDIUM",
          "file": "bazel-website/search2.html",
          "code": "apiKey: '8e0152321e991cc72635d18bfd059bf1',",
          "details": "Potential Hard-coded credential\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ead3f34e3ca6cae755b23527e0c006a6f23b0021dd5fd320b3acba6a580a9e2d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089443-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0dee2ad7-b852-405c-a80c-4f1677c131f0",
          "line": "166",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c#L215",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fb2218c1f8920a3e6e7be1f141d72c5ecb7a64c2a5e0fe80c0c0aed37c1064b9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089444-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "dfcbdcf8-74ad-4260-a379-85d740b54391",
          "line": "204",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b143c899ae75395b612db0743677a42ff5f2d21593e50644b27d57c017b0c4b2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089445-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a0c59433-15a7-4cb5-b20c-399e2f397fc6",
          "line": "586",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/Printer.c#L609",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7aff2a441076287ff49490beeb8af5dec84ea01028072425a035a047e626edf8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089446-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "dbec33a9-2916-44f7-8f69-6f8e9247306e",
          "line": "587",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/sm/Scav.c#L1944",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2f33af915cd86a8239659f1631929482f57c9e6d4ef5e33e1520c0b3ab83979f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089447-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c05de5a6-fd31-4eeb-8737-e4ce304438c0",
          "line": "646",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/Constants.h#L186",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c047852de2766cb1b202e55bc6cb81cfe9932f2962ad61c9bec80b7a2043866e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089448-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "94ab15ff-8960-4182-9681-bd322c84b7d5",
          "line": "651",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/includes/rts/storage/InfoTables.h#L116",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9d3500114f56ca99a4dde9309745f399fd5d5442b5ae5db7dda238f24f4ffad0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08945-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2229b3d2-2b50-493a-9751-38ba19fe93ff",
          "line": "4",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "github.com/ghc/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/StableName.h",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "57aa3fdf9a46b8725c840168c41dc1aaa48495506d3fe795b04c71e95658d15d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089451-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "efe14193-9ac0-4aa2-9e15-47fe3b97b7da",
          "line": "5",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "// https://github.com/ghc/ghc/blob/43967c0c7d2d0110cfc5f9d64a7dab3a3dda8953/rts/StableName.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "53e9c3e06db16fd2f76b63fde087c35bf1e1956da54eba935f70a226bd277b78"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089452-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "29d4c72e-f52d-4ab3-b6ec-8fb2709f833b",
          "line": "22",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "ub.com/ghc/ghc/blob/fe819dd637842fb564524a7cf80612a3673ce14c/includes/rts/storage/Closures.h#L197",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b2ee20b0f1f4344480790be59b7a01341d50b8fe6ddfac1aaabac972b596da8f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089453-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8e9963d4-7cf9-4a32-890b-f3caa1f56490",
          "line": "68",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/src/Asterius/Foreign/DsForeign.hs",
          "code": "github.com/ghc/ghc/commit/ff04eb5973b69fcc60e7d0945a74becd068c1888#diff-c101aeb1e72786c2c6e5035cda85",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6052f386343f71892e5556805ed43a0aec6c9443dd3a234ce660125fb18b87bc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089454-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2a5ec44a-62de-4cc6-b434-7a65a138e350",
          "line": "2",
          "column": "119042",
          "confidence": "MEDIUM",
          "file": "bazel-website/third_party/javascript/instantsearch/js/instantsearch.js",
          "code": "apiKey: 'my_search_api_key',\\n  indexName: 'my_index_name'\\n});\")}},D=function(e){function t(e){a(th",
          "details": "Potential Hard-coded credential\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "60e161206f99ab5347d35338eb9ec66138a0a487479f8fe388e91ae37ceb4a11"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089456-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3e1bab33-2ecd-44f7-9b39-cc127722d1f3",
          "line": "2",
          "column": "243775",
          "confidence": "MEDIUM",
          "file": "bazel-website/third_party/javascript/instantsearch/js/instantsearch.js",
          "code": "ApiKey\u0026\u0026(a[\"x-algolia-api-key\"]=this.apiKey),this.userToken\u0026\u0026(a[\"x-algolia-usertoken\"]=this.userToke",
          "details": "Potential Hard-coded credential\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8a1ae692fb34a930f79f0695dcb4b391871305f8a52cdea65b09df2994587e17"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089457-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "344b3b89-12d7-4bb2-98ec-85b1ff4d2171",
          "line": "7",
          "column": "28",
          "confidence": "MEDIUM",
          "file": "attoparsec/benchmarks/http-request.txt",
          "code": "twitter_sess=BAh7CSIKZmxhc2hJQz-e1e1; __utma=43838368.452555194.1399611824.1; __utmb=43838368; __utm",
          "details": "Twitter Client ID\nWhen use Twitter Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8ccc0e9a05a36cfdb0ea42ccdf12dabbd5c1526f8352de60fc540664860fed58"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089458-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e54e7d0c-6f0b-4b9c-83e7-556b773b1bca",
          "line": "4",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "github.com/ghc/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/StableName.h",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "57aa3fdf9a46b8725c840168c41dc1aaa48495506d3fe795b04c71e95658d15d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089459-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "77b30d67-7bb0-4734-940c-42f393c4f0f8",
          "line": "5",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "// https://github.com/ghc/ghc/blob/43967c0c7d2d0110cfc5f9d64a7dab3a3dda8953/rts/StableName.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "53e9c3e06db16fd2f76b63fde087c35bf1e1956da54eba935f70a226bd277b78"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08946-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4cda1089-2e74-4890-add7-5da527d9da27",
          "line": "22",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "ub.com/ghc/ghc/blob/fe819dd637842fb564524a7cf80612a3673ce14c/includes/rts/storage/Closures.h#L197",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b2ee20b0f1f4344480790be59b7a01341d50b8fe6ddfac1aaabac972b596da8f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089461-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3900c16d-6c7b-400c-b458-8153c7a56cf7",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "attoparsec/benchmarks/json-data/twitter100.json",
          "code": "",
          "details": "Facebook Client ID\nWhen use Facebook Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "39af4bf5e1eda1cc825860cb49ef2242c08c70c957f8cba8551e1977a6c1bce4"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089462-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f5feda1d-8c01-4cbd-bd2a-55a8e5aaf0c1",
          "line": "166",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c#L215",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fb2218c1f8920a3e6e7be1f141d72c5ecb7a64c2a5e0fe80c0c0aed37c1064b9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089463-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "66f18f49-6152-4b12-b016-fafaba8f6962",
          "line": "204",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b143c899ae75395b612db0743677a42ff5f2d21593e50644b27d57c017b0c4b2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089464-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "db20714b-96ee-49ea-b5db-bdac43cac13e",
          "line": "586",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/Printer.c#L609",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7aff2a441076287ff49490beeb8af5dec84ea01028072425a035a047e626edf8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089465-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "679a6736-e098-466d-a752-ec201f504bb3",
          "line": "587",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/sm/Scav.c#L1944",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2f33af915cd86a8239659f1631929482f57c9e6d4ef5e33e1520c0b3ab83979f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089467-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "30a0d43d-1220-4b89-a26a-26eb9f366d1f",
          "line": "646",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/Constants.h#L186",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c047852de2766cb1b202e55bc6cb81cfe9932f2962ad61c9bec80b7a2043866e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089468-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c20b7c06-ff3f-47b0-8dac-8fec2023b584",
          "line": "651",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/includes/rts/storage/InfoTables.h#L116",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9d3500114f56ca99a4dde9309745f399fd5d5442b5ae5db7dda238f24f4ffad0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089469-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1ffc2846-3739-4f51-99aa-70f833cde99c",
          "line": "38",
          "column": "38",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/cardax-dex-browser-lib/Makefile",
          "code": "nix shell nixpkgs#postgresql -c psql postgresql://ctxlib:ctxlib@localhost:5432",
          "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ebfd9ad09c0b699383805b1a7b042bcefca9ded19c13c733ef5451cfdb0cd2b0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08947-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8ba6db88-d6ad-41c1-9c94-ecefbdfdd107",
          "line": "26",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/flake.nix",
          "code": "url = \"github:tweag/plutus-libs/b0de13adecd7f37174500444dd4995ada17254f4\";",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4c3d253ce3ddb554aa839b3c3eb92671625b8f575b8163f15323c98e1110509d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089471-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "00f655a4-50fa-41b7-85e7-996cd4e87345",
          "line": "68",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/src/Asterius/Foreign/DsForeign.hs",
          "code": "github.com/ghc/ghc/commit/ff04eb5973b69fcc60e7d0945a74becd068c1888#diff-c101aeb1e72786c2c6e5035cda85",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6052f386343f71892e5556805ed43a0aec6c9443dd3a234ce660125fb18b87bc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089473-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bfada87f-86e5-4145-aa80-1ba60966db1a",
          "line": "38",
          "column": "38",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/cardax-dex-browser-lib/Makefile",
          "code": "nix shell nixpkgs#postgresql -c psql postgresql://ctxlib:ctxlib@localhost:5432",
          "details": "Password found in a hardcoded URL\nA password was found in a hardcoded URL, this can lead to not only the leak of this password but also a failure point to some more sophisticated CSRF and SSRF attacks. Check CWE-352 (https://cwe.mitre.org/data/definitions/352.html) and CWE-918 (https://cwe.mitre.org/data/definitions/918.html) for more details.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ebfd9ad09c0b699383805b1a7b042bcefca9ded19c13c733ef5451cfdb0cd2b0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089474-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ce120881-09f7-42ef-ab1a-7eb682952c51",
          "line": "68",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/src/Asterius/Foreign/DsForeign.hs",
          "code": "github.com/ghc/ghc/commit/ff04eb5973b69fcc60e7d0945a74becd068c1888#diff-c101aeb1e72786c2c6e5035cda85",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6052f386343f71892e5556805ed43a0aec6c9443dd3a234ce660125fb18b87bc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089475-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "618ba919-0f08-4ea6-9480-378b7afaacc4",
          "line": "26",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/flake.nix",
          "code": "url = \"github:tweag/plutus-libs/b0de13adecd7f37174500444dd4995ada17254f4\";",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4c3d253ce3ddb554aa839b3c3eb92671625b8f575b8163f15323c98e1110509d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089476-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f27066a3-7bde-43c2-b61f-724c7e8c400f",
          "line": "166",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c#L215",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fb2218c1f8920a3e6e7be1f141d72c5ecb7a64c2a5e0fe80c0c0aed37c1064b9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089477-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0a35b0a9-fba4-4fba-b4e5-8358a61f8a39",
          "line": "204",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.float.mjs",
          "code": "// https://github.com/ghc/ghc/blob/610ec224a49e092c802a336570fd9613ea15ef3c/rts/StgPrimFloat.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b143c899ae75395b612db0743677a42ff5f2d21593e50644b27d57c017b0c4b2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089478-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5ae95bc8-1fca-4705-872e-1b536a7511e9",
          "line": "586",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/Printer.c#L609",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7aff2a441076287ff49490beeb8af5dec84ea01028072425a035a047e626edf8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089479-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d3ae04ce-7c38-4a2a-837a-06ef47ee2f50",
          "line": "587",
          "column": "19",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "// https://github.com/ghc/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/rts/sm/Scav.c#L1944",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2f33af915cd86a8239659f1631929482f57c9e6d4ef5e33e1520c0b3ab83979f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08948-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "840fc2ad-1fe0-4a9c-9dd2-ff02d1505a4f",
          "line": "646",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/Constants.h#L186",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c047852de2766cb1b202e55bc6cb81cfe9932f2962ad61c9bec80b7a2043866e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089481-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "dde55b50-8779-467b-8ae2-357d7948fcbd",
          "line": "651",
          "column": "25",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.gc.mjs",
          "code": "/ghc/blob/2ff77b9894eecf51fa619ed2266ca196e296cd1e/includes/rts/storage/InfoTables.h#L116",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9d3500114f56ca99a4dde9309745f399fd5d5442b5ae5db7dda238f24f4ffad0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089482-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f9d5a672-b206-45f8-bfd3-497f5874d462",
          "line": "4",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "github.com/ghc/ghc/blob/bf73419518ca550e85188616f860961c7e2a336b/includes/rts/StableName.h",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "57aa3fdf9a46b8725c840168c41dc1aaa48495506d3fe795b04c71e95658d15d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089483-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "dea7ffdd-61f3-4ffa-a283-211951e1cc64",
          "line": "5",
          "column": "11",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "// https://github.com/ghc/ghc/blob/43967c0c7d2d0110cfc5f9d64a7dab3a3dda8953/rts/StableName.c",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "53e9c3e06db16fd2f76b63fde087c35bf1e1956da54eba935f70a226bd277b78"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089485-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2321fa81-be8f-43d5-8e91-8ae888bc3c16",
          "line": "22",
          "column": "15",
          "confidence": "MEDIUM",
          "file": "asterius/asterius/rts/rts.stablename.mjs",
          "code": "ub.com/ghc/ghc/blob/fe819dd637842fb564524a7cf80612a3673ce14c/includes/rts/storage/Closures.h#L197",
          "details": "Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "Leaks",
          "severity": "CRITICAL",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b2ee20b0f1f4344480790be59b7a01341d50b8fe6ddfac1aaabac972b596da8f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088756-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5e701f01-5dfe-4d70-a6dd-e6be7e3742f2",
          "line": "2",
          "column": "238395",
          "confidence": "MEDIUM",
          "file": "bazel-website/third_party/javascript/instantsearch/js/instantsearch.js",
          "code": "Math.random()*r),r-=1,t=e[r],e[r]=e[n],e[n]=t;return e}function s(e){var t={};for(var n in e)if(Obje",
          "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6ff0eea442dfa9fe11c1e8295712aa18730f3bf571ccc3855889dcae1ca27f7d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088757-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3eeda2c1-e3e8-498c-8454-f801ee8e0593",
          "line": "2",
          "column": "264143",
          "confidence": "MEDIUM",
          "file": "bazel-website/third_party/javascript/instantsearch/js/instantsearch.js",
          "code": "Math.random().toString(36).substring(2),Y=void 0,X=1,Z=2,ee={error:null},te=0,ne=function(){function",
          "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "83e829976e131fe1fb82b4944b1d4211ee096e0eec7cd317c8ee3022312697a5"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088764-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1b465eb7-5bd3-4d7d-9a48-04e692ac9a81",
          "line": "84",
          "column": "13",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/pages/index.js",
          "code": "const id = Math.random(); //or some such identifier",
          "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b4a8393e24689c17d125c7dbef1c8208a0d3416d2a913b2a90f42a983244c5c2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088765-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "139bbe11-9eb5-4ca1-b176-0b6193af9b8d",
          "line": "12",
          "column": "31",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/components/AnimationMainPage.js",
          "code": "const n_hills = Math.floor(Math.random() * 3) + 1;",
          "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b92b885b02701dc4339e53944565cf60b6441c64d6bd9bf639afc31c193f390e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088766-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "23a50220-f5fb-4d60-8342-ffe82bcbe9fd",
          "line": "14",
          "column": "42",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/components/AnimationMainPage.js",
          "code": "const means = n_hills_range.map(() =\u003e Math.random() * (xmax / 2 - xmin / 2) + xmin / 2);",
          "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b1af94ec4c554c2ef54796bacecc1c0c7ebb22527e1ca2351f3a33d7e68a5134"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088767-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "19e22365-1de1-4f13-baf4-31caf4cd6c92",
          "line": "15",
          "column": "43",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/components/AnimationMainPage.js",
          "code": "const sigmas = n_hills_range.map(() =\u003e Math.random() * 0.2 + 0.5);",
          "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b73bbaad7641bf3de7972bda60d65bb38b642ad5f3efa930fd5d82c3705ddfa2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088769-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "742fba16-7fac-4dd5-9c52-31f0d4786af2",
          "line": "16",
          "column": "20",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/components/AnimationMainPage.js",
          "code": "const offset = (Math.random() + 0.2) / 1.2;",
          "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "68e51a4c28060c44f2475ddce2c34e85c6a2181e809c39c95186b0b24e95022b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08877-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3305cdd4-3d7a-4aed-b006-158fbdbe279a",
          "line": "6",
          "column": "27306",
          "confidence": "MEDIUM",
          "file": "bazel-website/third_party/javascript/bootstrap/js/bootstrap.min.js",
          "code": "Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip\u0026",
          "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9cacdd3a9b6bf9f594ce84ba5ad6fe80e026317cb2b557c595b11e4ae40a1834"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088771-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2c34a1f9-70df-455e-b718-80818edd4392",
          "line": "1668",
          "column": "20",
          "confidence": "MEDIUM",
          "file": "bazel-website/third_party/javascript/bootstrap/js/bootstrap.js",
          "code": "do prefix += ~~(Math.random() * 1000000)",
          "details": "No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "26a339b663c1f34fa344f4647fcdc7412362d2b144ec35c15259ea16981bae0d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088886-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1c6e7d01-cd3c-4b14-9185-aa4468003e19",
          "line": "45",
          "column": "3",
          "confidence": "HIGH",
          "file": "audit-2022-05-geniusyield/web/src/index.js",
          "code": "alert(msg);",
          "details": "Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8ea4fe2b478779d482a03083ca60c0971efaa14c7b06f368613aaf5e3c2b3af5"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088887-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4d55a278-ad00-443e-9dcf-a0186237047f",
          "line": "147",
          "column": "51",
          "confidence": "HIGH",
          "file": "bazel-website/third_party/javascript/bootstrap/js/bootstrap.js",
          "code": "if (!data) $this.data('bs.alert', (data = new Alert(this)))",
          "details": "Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ffe0f739b03045a67422c4a0f6798addfc8720fa8e0f4a0a734a1bb814549991"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088908-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9473a456-e94a-4fd4-8c4f-19c4ad3d32fe",
          "line": "18",
          "column": "9",
          "confidence": "MEDIUM",
          "file": "bors-ng/apps/bors_frontend/web/static/js/drop-down-menu.js",
          "code": "toggler.addEventListener('click', function(e) {",
          "details": "Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0027647768a06e7d90cb8d42aeee25a0bfaed84d9c41cc995edcf2fc8be1e44d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088909-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b9d796d5-b208-4107-897d-4119d3a742be",
          "line": "2",
          "column": "8512",
          "confidence": "MEDIUM",
          "file": "bazel-website/third_party/javascript/instantsearch/js/instantsearch.js",
          "code": ".addEventListener(t,h,o):e.removeEventListener(t,h,o),(e._listeners||(e._listeners={}))[t]=r}else if",
          "details": "Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "04c1189a6f012b0b4f4096874bb2455ca90dc582093609825b3f361da9c4dd88"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08891-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bb129047-3f33-4a69-a280-0fac4cfecd89",
          "line": "2",
          "column": "4098",
          "confidence": "MEDIUM",
          "file": "bazel-website/third_party/javascript/instantsearch/js/instantsearch.js",
          "code": "Query(\"\")),u}function v(e){var t=e.helper,n=e.whiteList,r=e.blackList,a=t.lastResults||{};return(n||",
          "details": "SQL Injection\nSQL queries often need to use a hardcoded SQL string with a dynamic parameter coming from a user request. Formatting a string to add those parameters to the request is a bad practice as it can result in an SQL injection. The safe way to add parameters to a SQL query is to use SQL binding mechanisms. For more information checkout the CWE-564 (https://cwe.mitre.org/data/definitions/564.html) and OWASP A1:2017 (https://owasp.org/www-project-top-ten/2017/A1_2017-Injection.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7f12e4623a802247b52143eb247fa2bfc27b2884b80d81f3608eeccb733abd64"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088912-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "86333fa5-e479-4532-9f31-73c29db00fe3",
          "line": "6",
          "column": "",
          "confidence": "HIGH",
          "file": "/Users/sean/github_central/tweag_git/tweag/bnpp-board/benjamin/goproxy/go.mod",
          "code": "github.com/gin-gonic/gin v1.6.2",
          "details": "[CVE-2020-28483] CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')\nThis affects all versions of package github.com/gin-gonic/gin. When gin is exposed directly to the internet, a client's IP can be spoofed by setting the X-Forwarded-For header. For more information, please checkout the following url (https://ossindex.sonatype.org/vulnerability/CVE-2020-28483?component-type=golang\u0026component-name=github.com%2Fgin-gonic%2Fgin\u0026utm_source=nancy-client\u0026utm_medium=integration\u0026utm_content=0.0.0-dev).",
          "securityTool": "Nancy",
          "language": "Go",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "da6f175577fdac2635cfde72e288d672daa9a87065261f1dd9274dd9d508b770"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088913-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d521a66e-df57-4540-994a-c2451594bdfa",
          "line": "",
          "column": "",
          "confidence": "HIGH",
          "file": "",
          "code": "",
          "details": "[CVE-2020-14040] CWE-835: Loop with Unreachable Exit Condition ('Infinite Loop')\nThe x/text package before 0.3.3 for Go has a vulnerability in encoding/unicode that could lead to the UTF-16 decoder entering an infinite loop, causing the program to crash or run out of memory. An attacker could provide a single byte to a UTF16 decoder instantiated with UseBOM or ExpectBOM to trigger an infinite loop if the String function on the Decoder is called, or the Decoder is passed to golang.org/x/text/transform.String. For more information, please checkout the following url (https://ossindex.sonatype.org/vulnerability/CVE-2020-14040?component-type=golang\u0026component-name=golang.org%2Fx%2Ftext\u0026utm_source=nancy-client\u0026utm_medium=integration\u0026utm_content=0.0.0-dev).",
          "securityTool": "Nancy",
          "language": "Go",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c48411fd36eae11bb15d7278eb70dc9e9e3c982a08a57d299cd32be1c56b4ef6"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088931-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4e162916-5b77-4f65-b144-79a6b02ccb1d",
          "line": "",
          "column": "",
          "confidence": "LOW",
          "file": "bors-ng/apps/bors_frontend/package-lock.json",
          "code": "node-forge",
          "details": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
          "securityTool": "NpmAudit",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "34aeff5d3624f1c4cfc9742854d5848c885af643687d1703612373960917aad6"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088932-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "138c380b-b073-478b-a1dd-28361fe217d7",
          "line": "",
          "column": "",
          "confidence": "LOW",
          "file": "bors-ng/apps/bors_frontend/package-lock.json",
          "code": "node-forge",
          "details": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### References\n\nFor more information, please see\n[\"Bleichenbacher's RSA signature forgery based on implementation error\"](https://mailarchive.ietf.org/arch/msg/openpgp/5rnE9ZRN1AokBVj3VqblGlP63QE/)\nby Hal Finney.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
          "securityTool": "NpmAudit",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "bedd46311f195f9addfbc7095c20f4c3c123daa6253a3b5edb7198ac726fd372"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088933-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "980f3fb3-75f4-4afd-85e4-1509e7fd4126",
          "line": "",
          "column": "",
          "confidence": "LOW",
          "file": "bors-ng/apps/bors_frontend/package-lock.json",
          "code": "async",
          "details": "A vulnerability exists in Async through 3.2.1 for 3.x and through 2.6.3 for 2.x (fixed in 3.2.2 and 2.6.4), which could let a malicious user obtain privileges via the `mapValues()` method.",
          "securityTool": "NpmAudit",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ada75fcf0d11ca447eba6ac94ba9b34e85161111efce983a5eafbac94f9c023d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088935-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9884b02a-b256-4213-a4ba-3feabd30890e",
          "line": "",
          "column": "",
          "confidence": "LOW",
          "file": "bors-ng/apps/bors_frontend/package-lock.json",
          "code": "terser",
          "details": "The package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.",
          "securityTool": "NpmAudit",
          "language": "JavaScript",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4f1c5faf1912390ad655f40d6a04cc96b970f6838c7bae64d0648ccc339a19fd"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088936-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b0a77a8b-85a0-46a4-85fb-f80fe99fdbcf",
          "line": "74",
          "column": "11",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "      if (swprintf (ns, 10, L\"%ls%ls\", win32_file_namespace, unc_prefix) \u003c= 0)",
          "details": "Potential format string problem (CWE-134) Make format string constant ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "911ace5223b16f279400351e8b7f2026ee5d10fc4f03f1171e581fd77b81235a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088937-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0ab33b4a-77f4-46c1-9c97-dcd993dc6bfd",
          "line": "79",
          "column": "12",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "  else if (swprintf (ns, 10, L\"%ls\", win32_file_namespace) \u003c= 0)",
          "details": "Potential format string problem (CWE-134) Make format string constant ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6979a0892a02f307d898baeb857d16ff0429b33ea1ebdf9f527486c068aae567"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088938-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7c1fd602-9483-4532-b7db-6cfdf43fb2a9",
          "line": "88",
          "column": "7",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "  if (swprintf (result, bLen, L\"%ls%ls\", ns, temp) \u003c= 0)",
          "details": "Potential format string problem (CWE-134) Make format string constant ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fc9e0587f8924a8ee742238dd3db796fbd0e1d791d55de6e3d34133c506081d9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088939-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9632d15c-728d-4042-a514-4bbb6c24dc90",
          "line": "108",
          "column": "2",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "\tfprintf(stderr, CANNOTWRITESTDOUT);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "46251e992cf2d9b945095683856a754b897547776d494f103877f364a7a1f098"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08894-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3f8ead03-3a3c-4853-a74c-fc67637d6c8f",
          "line": "110",
          "column": "2",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "\tfprintf(stderr, CANNOTWRITE, ofilename);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "20d6edf848fb9f56ac77e4ddfd693c4e32f4bf431d489d1b9113992af5cf17ef"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088941-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "49d66dad-f6f7-472e-baeb-ebb0ed062621",
          "line": "343",
          "column": "8",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "\t      strcpy(prefix_str, *argv);",
          "details": "Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120) Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused) ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "783ee0fb24c75bc4c5e9d2173f244f4ebda9dd0941b36bff047671bb49acda63"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088943-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f93a620a-5e8f-4217-8245-5ea8475d9809",
          "line": "351",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "        fprintf(stderr, USAGE);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b7da3bb542d8901ec8fca74ae3fa300f642091c88281e2278ddc17635eddaebe"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088944-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "463cf39b-3180-455c-adf3-60bf1c8543fc",
          "line": "356",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "        fprintf(stderr, DISTINCTNAMES);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "86e267f2a5a685758fbfbe5d19c6bcc0abde55319a3e06622237a29078131c98"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088945-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "03abe747-c077-4291-878c-e8e97e29410d",
          "line": "367",
          "column": "13",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "            fprintf(stderr, CANNOTOPEN, argv[0]);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "abb2654398a27d7d4047d049a1d3ed77f5eb0aa30f1b0caa79d04cae1dd34bf1"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088947-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0aa2fa29-f96a-4998-880d-3c9c95b2b9d8",
          "line": "376",
          "column": "13",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "            fprintf(stderr, CANNOTOPEN, argv[1]);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "172b7119ad7974591e0d38b2135ee01d502b90b5d73e7a84ea7976cb827bbe85"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088948-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6ef16233-acb1-47b4-afc5-f27ece2d067a",
          "line": "6",
          "column": "5",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T7037_main.c",
          "code": "    execv(\"./T7037\", args);",
          "details": "This causes a new program to execute and is difficult to use safely (CWE-78) try using a library call that implements the same functionality if available ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a3f6cd15bab1921331e369cc300a7dc8796bb1bdfc2692f010bc3cefb9056ed2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088949-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "95309288-459d-4f33-98c2-c25df205b2ba",
          "line": "59",
          "column": "5",
          "confidence": "LOW",
          "file": "cabal/Cabal-tests/tests/cbits/rpmvercmp.c",
          "code": "    strcpy(str1, a);",
          "details": "Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120) Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused) ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a0690c0cd2c8ce45671e496fa8e08879b078e5fd5c10aa101b9450506b077956"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08895-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "31f741ef-c049-4ec1-8386-9b151f043224",
          "line": "60",
          "column": "5",
          "confidence": "LOW",
          "file": "cabal/Cabal-tests/tests/cbits/rpmvercmp.c",
          "code": "    strcpy(str2, b);",
          "details": "Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120) Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused) ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "715a98445daddb7c9e66e0c9cad1135a0fc011ce2bac5ef5413e5ab3cedcbf6c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089034-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4c9c2b55-3bc6-432b-afef-02e150154f6e",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "Cardax-audit-2022-03/cardax-dex-browser-lib/package-lock.json",
          "code": "terser",
          "details": "The package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.\nInstalled Version: \"5.12.0\", Update to Version: \"5.14.2, 4.8.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-25858.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "0f03a186d49456d62840876932579e46c2e9ca69eed0febd8b3cc63ffc796a8d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089035-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "968053f4-40b3-4782-9ad1-653cfbffa17b",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/goproxy/go.sum",
          "code": "github.com/gin-gonic/gin",
          "details": "This affects all versions of package github.com/gin-gonic/gin. When gin is exposed directly to the internet, a client's IP can be spoofed by setting the X-Forwarded-For header.\nInstalled Version: \"1.6.2\", Update to Version: \"1.6.3-0.20210406033725-bfc8ca285eb4\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-28483.\nCwe Links: (https://cwe.mitre.org/data/definitions/444.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8fac33b4dd17d446dc4f7a950ca7b16789a809fe5fdad6ed1094b3b2a9ddc6e3"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089036-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "30f1026c-764f-4964-a147-1adaa16f910d",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/goproxy/go.sum",
          "code": "golang.org/x/text",
          "details": "The x/text package before 0.3.3 for Go has a vulnerability in encoding/unicode that could lead to the UTF-16 decoder entering an infinite loop, causing the program to crash or run out of memory. An attacker could provide a single byte to a UTF16 decoder instantiated with UseBOM or ExpectBOM to trigger an infinite loop if the String function on the Decoder is called, or the Decoder is passed to golang.org/x/text/transform.String.\nInstalled Version: \"0.3.2\", Update to Version: \"0.3.3\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-14040.\nCwe Links: (https://cwe.mitre.org/data/definitions/835.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "e894235a8c50e15ca3b33fcdf705b3d0dd1c308ca4ac15e60ac5db66cea317ca"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089037-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a6434865-cdff-4d9a-8482-16710eb01842",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/goproxy/go.sum",
          "code": "golang.org/x/text",
          "details": "A flaw was found in golang. The language package for go language can panic due to an out-of-bounds read when an incorrectly formatted language tag is being parsed. This flaw allows an attacker to cause applications using this package to parse untrusted input data to crash, leading to a denial of service of the affected component.\nInstalled Version: \"0.3.2\", Update to Version: \"0.3.7\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-38561.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "4a3fc62c6e3c96d09dbf150d811d800aef45323b3a356b83f200c364114f2205"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089038-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "622067b6-5641-4793-9089-1ced6aae9841",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/go.sum",
          "code": "github.com/apache/thrift",
          "details": "In Apache Thrift 0.9.3 to 0.13.0, malicious RPC clients could send short messages which would result in a large memory allocation, potentially leading to denial of service.\nInstalled Version: \"0.13.0\", Update to Version: \"v0.14.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-13949.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8be6b0438f1554dd50617ef8f849022a1ae2d986e0506bddb82ead347dad2fe9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089039-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e1f4dadb-d031-4c7f-9fc8-e6efe65c16cf",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/go.sum",
          "code": "github.com/gogo/protobuf",
          "details": "An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the \"skippy peanut butter\" issue.\nInstalled Version: \"1.2.0\", Update to Version: \"1.3.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-3121.\nCwe Links: (https://cwe.mitre.org/data/definitions/129.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "b5a38c52af98ab01893aca39581adc77f2cb479bf8678a4e3ee014ec76e7ba6e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08904-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "034b8517-9470-4303-a38b-411a1c77312f",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/go.sum",
          "code": "github.com/prometheus/client_golang",
          "details": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods.\nInstalled Version: \"1.5.0\", Update to Version: \"1.11.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-21698.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "5bd40ab157aadc92bd3bae94f6f7d593f360659f1077bc049fac1f80b3861788"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089042-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c4ab04aa-91e0-45de-a842-beb329dc25dc",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/go.sum",
          "code": "golang.org/x/text",
          "details": "The x/text package before 0.3.3 for Go has a vulnerability in encoding/unicode that could lead to the UTF-16 decoder entering an infinite loop, causing the program to crash or run out of memory. An attacker could provide a single byte to a UTF16 decoder instantiated with UseBOM or ExpectBOM to trigger an infinite loop if the String function on the Decoder is called, or the Decoder is passed to golang.org/x/text/transform.String.\nInstalled Version: \"0.3.2\", Update to Version: \"0.3.3\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-14040.\nCwe Links: (https://cwe.mitre.org/data/definitions/835.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "9846976f156e349a3427faf4bf424826f7fe75414ec2bdaec6ab80c580be2d70"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089043-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "41865767-f94f-41f7-be4b-1e0b4de7ce9c",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/go.sum",
          "code": "golang.org/x/text",
          "details": "A flaw was found in golang. The language package for go language can panic due to an out-of-bounds read when an incorrectly formatted language tag is being parsed. This flaw allows an attacker to cause applications using this package to parse untrusted input data to crash, leading to a denial of service of the affected component.\nInstalled Version: \"0.3.2\", Update to Version: \"0.3.7\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-38561.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "3d1edf37075fd96ada1f19161391ffb91d61d3dbed910d707c3c053fdf0e3819"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089062-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "31679d00-7deb-49b7-a551-30810da92c16",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/mainsrv/go.sum",
          "code": "github.com/apache/thrift",
          "details": "In Apache Thrift 0.9.3 to 0.13.0, malicious RPC clients could send short messages which would result in a large memory allocation, potentially leading to denial of service.\nInstalled Version: \"0.13.0\", Update to Version: \"v0.14.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-13949.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "c93676f19e4fddcdc06efcdbdbe5279a8d54743e81c11cbb01df8624816fd65d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089063-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d4138caf-259b-4bf9-a04f-d8c3146ba990",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/mainsrv/go.sum",
          "code": "github.com/gogo/protobuf",
          "details": "An issue was discovered in GoGo Protobuf before 1.3.2. plugin/unmarshal/unmarshal.go lacks certain index validation, aka the \"skippy peanut butter\" issue.\nInstalled Version: \"1.2.0\", Update to Version: \"1.3.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-3121.\nCwe Links: (https://cwe.mitre.org/data/definitions/129.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "66b1264984d67fb37b41a6252f8772964953abe41fe81e9f83fe2a8caecc8d61"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089064-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d97cb9f4-00cd-4b12-9871-b7bc925a8f3c",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/mainsrv/go.sum",
          "code": "github.com/prometheus/client_golang",
          "details": "client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients. In client_golang prior to version 1.11.1, HTTP server is susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods. In order to be affected, an instrumented software must use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`; not filter any specific methods (e.g GET) before middleware; pass metric with `method` label name to our middleware; and not have any firewall/LB/proxy that filters away requests with unknown `method`. client_golang version 1.11.1 contains a patch for this issue. Several workarounds are available, including removing the `method` label name from counter/gauge used in the InstrumentHandler; turning off affected promhttp handlers; adding custom middleware before promhttp handler that will sanitize the request method given by Go http.Request; and using a reverse proxy or web application firewall, configured to only allow a limited set of methods.\nInstalled Version: \"1.5.0\", Update to Version: \"1.11.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-21698.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "d54ce2c7eb5abd2be41d2f1d4abdc13cbad479e994dc48ef9f11ad5268985208"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089065-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "31d3a1e0-46f6-4f4b-a368-789a07123d0c",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/mainsrv/go.sum",
          "code": "golang.org/x/text",
          "details": "The x/text package before 0.3.3 for Go has a vulnerability in encoding/unicode that could lead to the UTF-16 decoder entering an infinite loop, causing the program to crash or run out of memory. An attacker could provide a single byte to a UTF16 decoder instantiated with UseBOM or ExpectBOM to trigger an infinite loop if the String function on the Decoder is called, or the Decoder is passed to golang.org/x/text/transform.String.\nInstalled Version: \"0.3.2\", Update to Version: \"0.3.3\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-14040.\nCwe Links: (https://cwe.mitre.org/data/definitions/835.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "78a4dd5bd75d15433a6db694633ef2f2bfa7703e9f88b1d12ebf97ac80ea3a1b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089066-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a5967e0e-c098-42c0-ba56-d2c0fef08b21",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/mainsrv/go.sum",
          "code": "golang.org/x/text",
          "details": "A flaw was found in golang. The language package for go language can panic due to an out-of-bounds read when an incorrectly formatted language tag is being parsed. This flaw allows an attacker to cause applications using this package to parse untrusted input data to crash, leading to a denial of service of the affected component.\nInstalled Version: \"0.3.2\", Update to Version: \"0.3.7\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-38561.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "44feaa37b703643f6089d583fa51baa6862b36fae09c6d56449fec3dba87127f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089099-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0b017eb5-2589-4490-b883-0c2b3331d9b8",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "ansi-regex",
          "details": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity\nInstalled Version: \"3.0.0\", Update to Version: \"3.0.1, 4.1.1, 5.0.1, 6.0.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-3807.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "37dcf1fb3f3d8a0ef047ef30cdce5166b616fd44925c64d9f63b90d8adb02701"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089101-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0620a181-e717-4f34-a7c7-4b5a86cada33",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "ansi-regex",
          "details": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity\nInstalled Version: \"5.0.0\", Update to Version: \"3.0.1, 4.1.1, 5.0.1, 6.0.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-3807.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "190764983e18ca9a3406de6ee33d12b4463191c3f267b5774f55cb19c1920f38"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089107-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6d17f10f-d6cd-4436-8a94-6e955d4831d8",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "dicer",
          "details": "This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. An attacker could sent the payload again and again so that the service continuously crashes.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24434.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "5c47cc66d55dc344e3fe966c3b4e4e11d977a07ccb3a8ee114d3e93c147bc592"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089109-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "918cc4a3-fe1f-4db3-bbd1-172fd401fe4d",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "glob-parent",
          "details": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.\nInstalled Version: \"3.1.0\", Update to Version: \"5.1.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-28469.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "a0ff3b35d3db0884dfc9c4e8d02d931ff3bf690dc161f6d8802522145c91ed40"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089111-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2a42fe8c-e9ea-46eb-a54d-b122b7585e44",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "glob-parent",
          "details": "This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.\nInstalled Version: \"5.1.1\", Update to Version: \"5.1.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-28469.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "070e7d35c40f43eef11e68d7af830cdd206fab1e89b8e3584b00395b6adcd67b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089113-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e230b16d-4059-498d-9107-e83bab9d2839",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "lodash",
          "details": "Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.\nInstalled Version: \"4.17.20\", Update to Version: \"4.17.21\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23337.\nCwe Links: (https://cwe.mitre.org/data/definitions/77.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "2b88333da2f29d9a2b1b8aae56ed82d8e357f54676b1e2956c5255bea23620b2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089117-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f0026bf4-f28b-4346-a29a-edafaf3f3b9a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "moment",
          "details": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.\nInstalled Version: \"2.29.1\", Update to Version: \"2.29.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24785.\nCwe Links: (https://cwe.mitre.org/data/definitions/22.html),(https://cwe.mitre.org/data/definitions/27.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "ad8c37f39f42f91b799899cd61e1749ba1efa8f7a3d233ac371a1251231a9388"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089118-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0fd644bd-cc27-40ba-9261-c428e560baa2",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "moment",
          "details": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input.\nInstalled Version: \"2.29.1\", Update to Version: \"2.29.4\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-31129.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "17bab82849fe836352273204b1fc70b701bbeedee0342384623682636e140e93"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08912-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8086cbb5-a2a9-46c6-8e3a-ccad87254c12",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "next",
          "details": "Next.js is a React framework. In versions of Next.js prior to 12.0.5 or 11.1.3, invalid or malformed URLs could lead to a server crash. In order to be affected by this issue, the deployment must use Next.js versions above 11.1.0 and below 12.0.5, Node.js above 15.0.0, and next start or a custom server. Deployments on Vercel are not affected, along with similar environments where invalid requests are filtered before reaching Next.js. Versions 12.0.5 and 11.1.3 contain patches for this issue.\nInstalled Version: \"10.0.5\", Update to Version: \"11.1.3, 12.0.5\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-43803.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "eb347628b32415b1ac5e36ec49f56bffb9fad81f88ac4aa3273d1e1f030831d9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089121-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "53df7c8e-f759-47f4-a1a4-3318c963df11",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "next",
          "details": "Next.js is a React framework. Starting with version 10.0.0 and prior to version 12.1.0, Next.js is vulnerable to User Interface (UI) Misrepresentation of Critical Information. In order to be affected, the `next.config.js` file must have an `images.domains` array assigned and the image host assigned in `images.domains` must allow user-provided SVG. If the `next.config.js` file has `images.loader` assigned to something other than default, the instance is not affected. Version 12.1.0 contains a patch for this issue. As a workaround, change `next.config.js` to use a different `loader configuration` other than the default.\nInstalled Version: \"10.0.5\", Update to Version: \"12.1.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-23646.\nCwe Links: (https://cwe.mitre.org/data/definitions/451.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "7fa382ca92eca5129bba534530e3272fefa2cfb6cd0cdc92015fd658ec803151"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089126-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1eeef4a9-00e8-466d-8fa3-85d9c849b8df",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "node-forge",
          "details": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.\nInstalled Version: \"0.10.0\", Update to Version: \"1.3.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24771.\nCwe Links: (https://cwe.mitre.org/data/definitions/347.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "4e2d03140df8c530442c2e9f42ef447a3e15cffc79f0f6f30c2da238c5a5387b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089127-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "61dc4640-caca-4634-a0cc-eacd405e78be",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "node-forge",
          "details": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.\nInstalled Version: \"0.10.0\", Update to Version: \"1.3.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24772.\nCwe Links: (https://cwe.mitre.org/data/definitions/347.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "02bf015ea8b5272c3f2107470fdee7027cecd7a27cd7f51eedb38aac9b2c9052"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089133-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "efdc7e3f-012b-4ca0-8095-130fd5ba7c89",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "path-parse",
          "details": "All versions of package path-parse are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.\nInstalled Version: \"1.0.6\", Update to Version: \"1.0.7\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23343.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "7516ec5c229bd834fda33a352249a5ff927ae0562f5b395a9762d7b872d2505f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08915-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5bcee59e-1791-429a-a937-9f1b54ec1e41",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "protobufjs",
          "details": "The package protobufjs before 6.11.3 are vulnerable to Prototype Pollution which can allow an attacker to add/modify properties of the Object.prototype. This vulnerability can occur in multiple ways: 1. by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions 2. by parsing/loading .proto files\nInstalled Version: \"6.10.2\", Update to Version: \"6.10.3, 6.11.3\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-25878.\nCwe Links: (https://cwe.mitre.org/data/definitions/1321.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "96febdf55bd7781df96a9a0826c18b38667777bfa1f1fd1675a6f91a3c6e1f4a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089153-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "36fc163f-1da4-478a-9897-7c5dc9c6e06a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "simple-get",
          "details": "Exposure of Sensitive Information to an Unauthorized Actor in NPM simple-get prior to 4.0.1.\nInstalled Version: \"3.1.0\", Update to Version: \"2.8.2, 3.1.1, 4.0.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-0355.\nCwe Links: (https://cwe.mitre.org/data/definitions/200.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "9ab250ce81b7ec4f91154fc0d9da7838c77191319d6df5cd437f696a5fd426a7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089154-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "be5187ff-bce1-4e79-9904-ef73af7228c5",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "simple-get",
          "details": "Exposure of Sensitive Information to an Unauthorized Actor in NPM simple-get prior to 4.0.1.\nInstalled Version: \"4.0.0\", Update to Version: \"2.8.2, 3.1.1, 4.0.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-0355.\nCwe Links: (https://cwe.mitre.org/data/definitions/200.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "05ed7f1f212201c5762be165d6bc5477560584fd4b618c36f8eb9a9968d93dbd"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089155-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "08135969-71ac-481b-abd1-586794e04859",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "ssri",
          "details": "ssri 5.2.2-8.0.0, fixed in 8.0.1, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.\nInstalled Version: \"6.0.1\", Update to Version: \"8.0.1, 7.1.1, 6.0.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-27290.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "6d81d6f633e1c2f69ef268be7d6f955692724819212817be1b2189ea52618435"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089156-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a1a3827e-72f9-4251-9486-dd891cb0acf6",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "terser",
          "details": "The package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.\nInstalled Version: \"4.8.0\", Update to Version: \"5.14.2, 4.8.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-25858.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "b849262755eedc7c8f8c0db16aa543c4e8fa28dfbb3a7c5651413190d7ba2fb6"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089157-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "715a3c96-0d8a-4331-9637-6efdf089c1ef",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "terser",
          "details": "The package terser before 4.8.1, from 5.0.0 and before 5.14.2 are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.\nInstalled Version: \"5.5.1\", Update to Version: \"5.14.2, 4.8.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-25858.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "ededea57b1a9e5d3c20da9c90efa8f9c1904bc0cf6ab360b6aea8689b1d39364"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08916-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3943e2c1-b5ef-40e5-a731-205ccfc1bb99",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/controller/poetry.lock",
          "code": "numpy",
          "details": "** DISPUTED ** Null Pointer Dereference vulnerability exists in numpy.sort in NumPy \u0026lt and 1.19 in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.\nInstalled Version: \"1.21.1\", Update to Version: \"1.22.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-41495.\nCwe Links: (https://cwe.mitre.org/data/definitions/476.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "dc4227d0a5f7a27249513c4820ffdfabbae3ec74795bc5e7c39422bd8b25c53d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089164-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "01a0ce12-85d0-4891-8236-c63de2603fe9",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/mcmc_stats_server/poetry.lock",
          "code": "numpy",
          "details": "** DISPUTED ** Null Pointer Dereference vulnerability exists in numpy.sort in NumPy \u0026lt and 1.19 in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.\nInstalled Version: \"1.21.1\", Update to Version: \"1.22.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-41495.\nCwe Links: (https://cwe.mitre.org/data/definitions/476.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "71fc0917d6707b8e60340d01538aeb5e122393547832276ccf4e3973d15a0eb0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089169-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "20a45dc1-2c1a-4250-9cb7-05bc2599a8a2",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/poetry.lock",
          "code": "celery",
          "details": "This affects the package celery before 5.2.2. It by default trusts the messages and metadata stored in backends (result stores). When reading task metadata from the backend, the data is deserialized. Given that an attacker can gain access to, or somehow manipulate the metadata within a celery backend, they could trigger a stored command injection vulnerability and potentially gain further access to the system.\nInstalled Version: \"5.1.2\", Update to Version: \"5.2.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23727.\nCwe Links: (https://cwe.mitre.org/data/definitions/77.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "66a215db1f91e235135985ebdecef881958ce215557276ba26847bc76a490c5a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089172-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3835be9b-b896-412b-9287-ea4f7a73613a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/poetry.lock",
          "code": "kubernetes",
          "details": "Go before 1.17 does not properly consider extraneous zero characters at the beginning of an IP address octet, which (in some situations) allows attackers to bypass access control that is based on IP addresses, because of unexpected octal interpretation. This affects net.ParseIP and net.ParseCIDR.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-29923.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "cb9d1e27bf8bd889f4193c2921f68be80b66cad689d62bd89f4f8bac42495b4d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089174-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "56bae2a5-a09d-4407-a58e-5188583b2a91",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/user_code_server/poetry.lock",
          "code": "numpy",
          "details": "** DISPUTED ** Null Pointer Dereference vulnerability exists in numpy.sort in NumPy \u0026lt and 1.19 in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.\nInstalled Version: \"1.21.1\", Update to Version: \"1.22.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-41495.\nCwe Links: (https://cwe.mitre.org/data/definitions/476.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "f8c345828775020ed561f809db726d7ea928f3a8b60305777f2ad6078f5ad2d5"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089179-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6763dceb-653c-44be-9eee-afb23f2c2b19",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "ansi-regex",
          "details": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity\nInstalled Version: \"3.0.0\", Update to Version: \"3.0.1, 4.1.1, 5.0.1, 6.0.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-3807.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "084160d09c3ba90935379b1a4c60a79ed0006adc90ba7942fbe32f675e7e6cdf"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089181-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "76c6fe5e-3e9d-46f2-9c1a-ff047904ef9f",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "ansi-regex",
          "details": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity\nInstalled Version: \"4.1.0\", Update to Version: \"3.0.1, 4.1.1, 5.0.1, 6.0.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-3807.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "9e8a6d64cb56fcd6c87f3f66abeb806829e578ba8d10d7b4ff725feb4e6b4f05"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089182-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "259ab93b-d10c-4fc5-85a1-04c8020fd94a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "async",
          "details": "In Async before 2.6.4 and 3.x before 3.2.2, a malicious user can obtain privileges via the mapValues() method, aka lib/internal/iterator.js createObjectIterator prototype pollution.\nInstalled Version: \"2.6.3\", Update to Version: \"2.6.4, 3.2.2\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-43138.\nCwe Links: (https://cwe.mitre.org/data/definitions/1321.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "f3931920b7d2da891cc5dce7a239baa6da86798b0bd438591081177e8691330e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089185-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "68ca2e08-8055-4f8a-95e5-116b15cf5763",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "marked",
          "details": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.\nInstalled Version: \"0.7.0\", Update to Version: \"4.0.10\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-21680.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "c25af1e4546ef17bfd774ab0e438aaf2e669a116d2b442f7304739912d26f4fb"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089186-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3f627902-bc43-40ce-b70f-66fcc0f76d57",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "marked",
          "details": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. This issue is patched in version 4.0.10. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.\nInstalled Version: \"0.7.0\", Update to Version: \"4.0.10\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-21681.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "1b2be6a9c04330723ed03764c4aa1e890ff067ff31244b2564c77b9100b68420"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089189-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3222cb30-1e1a-48b2-8b92-50a69da01a0b",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "node-forge",
          "details": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code is lenient in checking the digest algorithm structure. This can allow a crafted structure that steals padding bytes and uses unchecked portion of the PKCS#1 encoded message to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.\nInstalled Version: \"0.10.0\", Update to Version: \"1.3.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24771.\nCwe Links: (https://cwe.mitre.org/data/definitions/347.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "d55c58479a5725e9c3fa11d698bdc6ab864d21e1874a3939bb38f4e606c4ad37"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089191-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ba0b223b-86fe-4d33-84a2-af10b966930d",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "node-forge",
          "details": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not check for tailing garbage bytes after decoding a `DigestInfo` ASN.1 structure. This can allow padding bytes to be removed and garbage data added to forge a signature when a low public exponent is being used. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.\nInstalled Version: \"0.10.0\", Update to Version: \"1.3.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24772.\nCwe Links: (https://cwe.mitre.org/data/definitions/347.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "248c84cb5bc14a1a8e46feb66522bd03560c7c7eb9d452caf536b1bd7aeaaa94"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089196-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a40f8b95-fb46-4209-b489-9a46c19e008d",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "protobufjs",
          "details": "The package protobufjs before 6.11.3 are vulnerable to Prototype Pollution which can allow an attacker to add/modify properties of the Object.prototype. This vulnerability can occur in multiple ways: 1. by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions 2. by parsing/loading .proto files\nInstalled Version: \"6.11.2\", Update to Version: \"6.10.3, 6.11.3\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-25878.\nCwe Links: (https://cwe.mitre.org/data/definitions/1321.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "93bced9bbcbdaa9cd415e304cf7edd1cdc8b7b4a62a101b62a5a1b505a4798f8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089251-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6f2900f4-5a87-4b03-a028-8ed555545bb8",
          "line": "99",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder/biofinder/viz/demo.py",
          "code": "98 if __name__ == '__main__':\n99 \tapp.run(port=5000, debug=True)\n",
          "details": "A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "73656b787610c99353286689854f8f45335191a01a8bb156a1c84728a2cf728d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08931-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9e619789-64e5-4c7e-bbfa-d3838d0725b9",
          "line": "257",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/chainsail/scheduler/app.py",
          "code": "256     db.create_all()\n257     app.run(\"0.0.0.0\", debug=True)\n",
          "details": "A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "HIGH",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "f5325b885547a1eff3834b652df4559e323a72826c2d2509986a974cec9c3fbb"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088763-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "48118c03-8afb-434e-aec5-328ceedf5ad3",
          "line": "42",
          "column": "17",
          "confidence": "HIGH",
          "file": "bors-ng/apps/bors_frontend/web/static/js/socket.js",
          "code": "let socket = new Socket(\"/socket\", {params: {token: token}});",
          "details": "No use socket manually\nSockets are vulnerable in multiple ways: They enable a software to interact with the outside world. As this world is full of attackers it is necessary to check that they cannot receive sensitive information or inject dangerous input.The number of sockets is limited and can be exhausted. Which makes the application unresponsive to users who need additional sockets. In many cases there is no need to open a socket yourself. Use instead libraries and existing protocols For more information checkout the CWE-20 (https://cwe.mitre.org/data/definitions/20.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "d1f9e6f080234965a1aa5b72301d996e0be54989a824ae3194c77089ed7ed3b9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088892-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b21805d2-b30b-402e-88a0-a78eab08e885",
          "line": "2",
          "column": "9",
          "confidence": "MEDIUM",
          "file": "bazel-website/third_party/javascript/instantsearch/js/instantsearch.js",
          "code": "(e,t){\"object\"===typeof exports\u0026\u0026\"object\"===typeof module?module.exports=t():\"function\"===typeof def",
          "details": "Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
          "securityTool": "HorusecEngine",
          "language": "JavaScript",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "12fd4338619a65f21ac3d5f77b69905f196ed39b04480cbda7b4f5e0f52e3469"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088916-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "95f4a8c4-adef-4f05-a4d1-107ffc3951e5",
          "line": "",
          "column": "",
          "confidence": "LOW",
          "file": "bors-ng/apps/bors_frontend/package-lock.json",
          "code": "node-forge",
          "details": "### Impact\n\nRSA PKCS#1 v1.5 signature verification code is not properly checking `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)",
          "securityTool": "NpmAudit",
          "language": "JavaScript",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "30375fc3a7d4c35a48892814631c66b03227ba578165986838cf8decbe355e34"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088951-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "05a1ba01-9565-4f3c-bbc8-98015470c5c7",
          "line": "22",
          "column": "5",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/testblockalloc.c",
          "code": "    srand(SEED);",
          "details": "This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327) Use a more secure technique for acquiring random values ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "3f4b0ed825e55c1687bf3519cf8e122a9474100cd8a9bc28261abc9d91df979e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088952-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8d6d4c99-c456-4047-9b7e-76f5209542b1",
          "line": "32",
          "column": "5",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/testheapalloced.c",
          "code": "    srand(SEED);",
          "details": "This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327) Use a more secure technique for acquiring random values ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "dd0b18162fbac088188578678d26b76b0e30924776a4a8f1eabdb4b9fc941c06"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088953-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "611b1c66-3577-4b6a-81b1-943fc4bc343b",
          "line": "21",
          "column": "5",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/testmblockalloc.c",
          "code": "    srand(SEED);",
          "details": "This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327) Use a more secure technique for acquiring random values ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ad8b81243e51c3cbaefda33e52266f43ff15b206c5848f782bc7181657829066"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088955-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5074a536-4c54-4512-825b-803bae0d0816",
          "line": "44",
          "column": "3",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "  wchar_t ns[10] = {0};",
          "details": "Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120) Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "cffeba29effae186050944336f50e3bdac1d76abdb33d6ccf30b3b64cab7fc60"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088956-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "db58f9ea-3987-4b54-8475-3511fc502602",
          "line": "269",
          "column": "10",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "FILE *FS(fopen) (const char* filename, const char* mode)",
          "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "41b0c45de563604d78eb5f32c4ad421245d628fb59bcba0a0e867ac18f7e9d9d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088957-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fba82e2d-16d2-43e3-9547-d1f89a13ba1e",
          "line": "287",
          "column": "10",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "FILE *FS(fopen) (const char* filename, const char* mode)",
          "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "f32c94f04111f3b70245eb51241b7b7df43002499ee7ef51a457a6bed90d1b59"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088958-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3f239a1c-7675-45e3-8028-561e6b6bb52d",
          "line": "289",
          "column": "10",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "  return fopen (filename, mode);",
          "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7d652d09da83397175322aa128f7b6e4668432008978288ac6abbc9c4ade33f9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088959-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "754d5d5c-c71a-4198-92b0-d553d17c4b85",
          "line": "32",
          "column": "10",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.h",
          "code": "FILE *FS(fopen) (const char* filename, const char* mode);",
          "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ed71959d3236365cf15a0ba2755965fce5decba36b29dbd7003d81798c0d51ef"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08896-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ecc5f10c-c5c8-486f-883d-02b50d0719f0",
          "line": "35",
          "column": "10",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.h",
          "code": "FILE *FS(fopen) (const char* filename, const char* mode);",
          "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "eced44a9f414a7b79c2347d51b6ccd19adb6c0bc42a8fce4e276a818f9afff64"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088961-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "46ac789e-93f1-4318-8f48-45ff29dcd8f1",
          "line": "176",
          "column": "5",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "    char buf[100];",
          "details": "Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120) Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c74b27ad9e95da71bc06ac18cbb6b754a9e4f215c9ef2bec3d82486195c7b753"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088963-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c99b81c6-a669-4908-9697-5f68884469b3",
          "line": "269",
          "column": "6",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "\t    char lineb[1000];",
          "details": "Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120) Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c4c8168ac20c8d5207f24560cd2f3d4b24f8ed7a75c7cf817b79cc74425d8570"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088964-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f32becd5-9326-4c04-9507-a8f3ae67bcd4",
          "line": "286",
          "column": "6",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "\t    char lineb[1000];",
          "details": "Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120) Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e0e8d5913b28eb4c9f400718c38a2979f6a3eb3b3c831d58a33876048e524a38"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088965-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7598195e-7f65-4d2d-b8d8-f3a867cca952",
          "line": "5",
          "column": "5",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T7037_main.c",
          "code": "    char * T7037_CONST args[2] = {\"T7037\", NULL};",
          "details": "Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120) Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "3f742c9db89bd951635cff553fac0130d58dd94ed6f488ea4c6cb9016926852d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088967-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "99fcacf9-7a0f-4225-a8a6-f8152904564e",
          "line": "34",
          "column": "5",
          "confidence": "LOW",
          "file": "attoparsec/examples/rfc2616.c",
          "code": "    char value[0];",
          "details": "Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120) Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "67249a75f0c8fba6dbc4ef8171fd8d5376d66837bbe857c37bb0dd9b00fe429a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088968-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5fa1ca98-b94f-4d44-9ef8-90977462b588",
          "line": "69",
          "column": "5",
          "confidence": "LOW",
          "file": "attoparsec/examples/rfc2616.c",
          "code": "    memcpy(dst-\u003evalue, src, len);",
          "details": "Does not check for buffer overflows when copying to destination (CWE-120) Make sure destination can always hold the source data ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "aae9ece5005e2869b2b88db67e773c5791125d3d99bb2e7c43bd77edfbd1776a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088969-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0a396787-d7d8-4e3a-b464-3147c461d238",
          "line": "84",
          "column": "5",
          "confidence": "LOW",
          "file": "attoparsec/examples/rfc2616.c",
          "code": "    memcpy(p-\u003evalue + (*dst)-\u003elen, src, len);",
          "details": "Does not check for buffer overflows when copying to destination (CWE-120) Make sure destination can always hold the source data ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "417519912b0414af457ac5cf9a5f4032bcbea1c017f06b573970ca7dc29a2917"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08897-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "21d6e3e9-49ce-437c-87c7-ac95c73e550c",
          "line": "206",
          "column": "2",
          "confidence": "LOW",
          "file": "attoparsec/examples/rfc2616.c",
          "code": "\tchar buf[HTTP_MAX_HEADER_SIZE];",
          "details": "Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120) Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "f9e259c13d56878566a120d2e6b8cf1643fb887f231e410da99bda68517620fc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088971-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "adaf3e5b-3ab3-4923-a9d1-ce384c55bc2a",
          "line": "228",
          "column": "7",
          "confidence": "LOW",
          "file": "attoparsec/examples/rfc2616.c",
          "code": "\tfd = open(argv[i], O_RDONLY);",
          "details": "Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2df528eece82fd1c03e438bf58be0689d7e379d2454d32b1bf0f2c703b266041"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088986-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a9954920-b875-4fda-afe6-e1d80129217e",
          "line": "89",
          "column": "12",
          "confidence": "LOW",
          "file": "bytestring/cbits/fpstring.c",
          "code": "    return memcpy(dst + dst_off, src + src_off, n);",
          "details": "Does not check for buffer overflows when copying to destination (CWE-120) Make sure destination can always hold the source data ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "f3cf2ee9a64b31e93ed815c27f2d825561088d5927d519f50c5110ee3fc2cde4"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088987-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6eb4719e-5c76-45f1-8046-c44800a22dfd",
          "line": "40",
          "column": "5",
          "confidence": "LOW",
          "file": "cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/costMatrix.cpp",
          "code": "    memcpy(tcm, inTcm, space);",
          "details": "Does not check for buffer overflows when copying to destination (CWE-120) Make sure destination can always hold the source data ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "48a162ea73e73aa55d108337d371004ac8b70f2595dffbe57b99b6f382e29ff7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089044-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "50c5ca5c-9761-4e7b-bda4-2ac318dfc9c1",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/go.sum",
          "code": "gopkg.in/yaml.v2",
          "details": "The Kubernetes API Server component in versions 1.1-1.14, and versions prior to 1.15.10, 1.16.7 and 1.17.3 allows an authorized user who sends malicious YAML payloads to cause the kube-apiserver to consume excessive CPU cycles while parsing YAML.\nInstalled Version: \"2.2.7\", Update to Version: \"2.2.8\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2019-11254.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "09287f0777e069ebf0b4af7957695d04c21b799814f52ff179d60da516f34b34"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089068-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b2c19c19-ac23-46a4-b43f-72f94947725b",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/mainsrv/go.sum",
          "code": "gopkg.in/yaml.v2",
          "details": "The Kubernetes API Server component in versions 1.1-1.14, and versions prior to 1.15.10, 1.16.7 and 1.17.3 allows an authorized user who sends malicious YAML payloads to cause the kube-apiserver to consume excessive CPU cycles while parsing YAML.\nInstalled Version: \"2.2.7\", Update to Version: \"2.2.8\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2019-11254.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "9a587c70d5ce24d39f4279d4cbdafe621a1fad199b6bd48db99b9032f0f94832"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089102-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9992fdbf-0f14-4ef5-bf48-e101cbf3521c",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "browserslist",
          "details": "The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.\nInstalled Version: \"4.14.6\", Update to Version: \"4.16.5\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23364.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "815ccf9673c20b740a289a889f9b987e8790a680bacb32c40884b6cf26693fbb"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089103-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8f36c981-8689-4b15-a3cd-3f4362c37244",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "browserslist",
          "details": "The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.\nInstalled Version: \"4.16.1\", Update to Version: \"4.16.5\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23364.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "20f43683b07229cded739aeab2b937079dc5c1615a71545295ea8c7dea9a6508"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089104-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "229f805f-596a-4338-8cb6-4b9c3b91110b",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "color-string",
          "details": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in Color-String version 1.5.5 and below which occurs when the application is provided and checks a crafted invalid HWB string.\nInstalled Version: \"1.5.4\", Update to Version: \"1.5.5\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-29060.\nCwe Links: (https://cwe.mitre.org/data/definitions/770.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "618adbb83ff4028bea765df654793dac3b1c9b09775f3abcb62a0041dd1989ef"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089105-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "37c61853-9cde-499f-b9a8-baa2559bcb5b",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "cross-fetch",
          "details": "Exposure of Private Personal Information to an Unauthorized Actor in GitHub repository lquixada/cross-fetch prior to 3.1.5.\nInstalled Version: \"3.0.6\", Update to Version: \"2.2.6, 3.1.5\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-1365.\nCwe Links: (https://cwe.mitre.org/data/definitions/863.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8e1839a64e714350ed5e35a495a3bd713593052e16d8f5aa36ae42874686e17d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089108-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "528136bf-68e0-437e-9f7f-3f21a4712dfd",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "elliptic",
          "details": "The package elliptic before 6.5.4 are vulnerable to Cryptographic Issues via the secp256k1 implementation in elliptic/ec/key.js. There is no check to confirm that the public key point passed into the derive function actually exists on the secp256k1 curve. This results in the potential for the private key used in this implementation to be revealed after a number of ECDH operations are performed.\nInstalled Version: \"6.5.3\", Update to Version: \"6.5.4\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-28498.\nCwe Links: (https://cwe.mitre.org/data/definitions/327.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "bc3ec474f4b21897bce2b7cc2fc962c9a67057250da3c8b2b17466067a0df7ad"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08911-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4875f433-c90c-45f8-8115-1c30faa1d6f6",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "glob-parent",
          "details": "glob-parent before 6.0.1 and 5.1.2 is vulnerable to Regular Expression Denial of Service (ReDoS). This issue is fixed in version 6.0.1 and 5.1.2.\nInstalled Version: \"3.1.0\", Update to Version: \"5.1.2, 6.0.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-35065.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "a7fe68c1d5ddbecd1b681d4aa7079e19f238814eef89e71fd28e94a0a076308b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089112-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7528737b-51a6-4d73-a0b4-19f560b6193f",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "glob-parent",
          "details": "glob-parent before 6.0.1 and 5.1.2 is vulnerable to Regular Expression Denial of Service (ReDoS). This issue is fixed in version 6.0.1 and 5.1.2.\nInstalled Version: \"5.1.1\", Update to Version: \"5.1.2, 6.0.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-35065.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "83b36d6132da57056b3685fdc99bda9a7a85bda76622c408f6d379c0bae6f232"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089114-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9fb5fbf8-440c-4685-b9a1-f985ce5fd567",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "lodash",
          "details": "Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.\nInstalled Version: \"4.17.20\", Update to Version: \"4.17.21\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-28500.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "fb38925f189fc0fab564bdbbd4e39c5ff39dadbde882f8b46ac31d938cb4ebba"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089119-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3856eb02-62c7-4be8-b663-b4446681ee68",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "nanoid",
          "details": "The package nanoid from 3.0.0 and before 3.1.31 are vulnerable to Information Exposure via the valueOf() function which allows to reproduce the last id generated.\nInstalled Version: \"3.1.20\", Update to Version: \"3.1.31\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23566.\nCwe Links: (https://cwe.mitre.org/data/definitions/704.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "df6c945fc7a589b05504cf397a81f4dc736339dc8beda537885f1ab7e249b546"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089122-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a263ecad-1d77-4717-b647-1dc9456cbc42",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "next",
          "details": "Next.js is an open source website development framework to be used with the React library. In affected versions specially encoded paths could be used when pages/_error.js was statically generated allowing an open redirect to occur to an external site. In general, this redirect does not directly harm users although can allow for phishing attacks by redirecting to an attacker's domain from a trusted domain. We recommend everyone to upgrade regardless of whether you can reproduce the issue or not. The issue has been patched in release 11.1.0.\nInstalled Version: \"10.0.5\", Update to Version: \"11.1.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-37699.\nCwe Links: (https://cwe.mitre.org/data/definitions/601.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "95662fe46dedab20039ed7f6c8dc373a3f9ef83308f7fecbe8b479556c629bac"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089123-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5d9fc2ad-b2a9-4324-a05f-e47d5c8934ed",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "next",
          "details": "Next.js is a React framework. Versions of Next.js between 10.0.0 and 11.0.0 contain a cross-site scripting vulnerability. In order for an instance to be affected by the vulnerability, the `next.config.js` file must have `images.domains` array assigned and the image host assigned in `images.domains` must allow user-provided SVG. If the `next.config.js` file has `images.loader` assigned to something other than default or the instance is deployed on Vercel, the instance is not affected by the vulnerability. The vulnerability is patched in Next.js version 11.1.1.\nInstalled Version: \"10.0.5\", Update to Version: \"11.1.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-39178.\nCwe Links: (https://cwe.mitre.org/data/definitions/79.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "2c4a476461e4963ebd1bedc7eb384ce98aaee90c816e1bbc324aeb93b1b2228c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089125-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5064ca96-1c2b-4187-9e3e-12ab7ec98375",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "node-fetch",
          "details": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor\nInstalled Version: \"2.6.1\", Update to Version: \"2.6.7, 3.1.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-0235.\nCwe Links: (https://cwe.mitre.org/data/definitions/601.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "0c6adcf7612414c9e5d340ccdf32a892e122a5ee2d5f43f21d176a864a652681"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089128-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b49c4c9b-6e9d-443c-ba63-f844745672d9",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "node-forge",
          "details": "forge is vulnerable to URL Redirection to Untrusted Site\nInstalled Version: \"0.10.0\", Update to Version: \"1.0.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-0122.\nCwe Links: (https://cwe.mitre.org/data/definitions/601.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "e12b925046112380c509ea6e11bce0871d5ace90d2384233b06832bb2a45a826"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089129-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5f29e529-35f4-45e8-b71f-5ca7e7274163",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "node-forge",
          "details": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not properly check `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.\nInstalled Version: \"0.10.0\", Update to Version: \"1.3.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24773.\nCwe Links: (https://cwe.mitre.org/data/definitions/347.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "de65ad86cef46971ec442fb23a157026c94fef70ef2feccc4269197d04d42291"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089134-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6b99caa2-1933-48e5-b757-bc01e75dffe6",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss before 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\/\\*\\s* sourceMappingURL=(.*).\nInstalled Version: \"6.0.23\", Update to Version: \"7.0.36, 8.2.13\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23382.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "3c49f419aa12299e506f1d899f7610fc7786c8eb39d4fdcf25a447300b844881"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089135-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5593aea8-20b1-4c3a-8ae9-4690366dca4b",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss from 7.0.0 and before 8.2.10 are vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.\nInstalled Version: \"7.0.21\", Update to Version: \"8.2.10, 7.0.36\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23368.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "b7c1d2a714c63a0a81d29ab75b53df293fcc58d241e1ed60af60b5ee7c35f34a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089136-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "56d7ef2a-c34b-440f-bf46-ce1b2ed2aa75",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss before 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\/\\*\\s* sourceMappingURL=(.*).\nInstalled Version: \"7.0.21\", Update to Version: \"7.0.36, 8.2.13\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23382.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "3a5ed55a058d2e5a683cde15e63b4cb9d8ed40bb9abc70af9c304e06013827ad"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089137-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "08720cdf-ea53-4bce-ac86-8f0c35793c68",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss from 7.0.0 and before 8.2.10 are vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.\nInstalled Version: \"7.0.32\", Update to Version: \"8.2.10, 7.0.36\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23368.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "994734ba3dc4f2eaeba07f490f6d1f6eb5f021f2474c9e197916c74ffb3c111d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089138-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f59316d5-8668-4679-a389-78e34cc0773d",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss before 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\/\\*\\s* sourceMappingURL=(.*).\nInstalled Version: \"7.0.32\", Update to Version: \"7.0.36, 8.2.13\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23382.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "80b7d5dbcc1127694962e110ceddbc50533aae8f28d74c04abb134c2a95276a4"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089139-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0ae2c295-39cb-4c6e-96d5-0b8d8e52a8aa",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss from 7.0.0 and before 8.2.10 are vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.\nInstalled Version: \"7.0.35\", Update to Version: \"8.2.10, 7.0.36\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23368.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "56bf57e762770ebe3a0f7e131645d65f5d64fc44e8157be74291e7b5d8bd0cf9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08914-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ac2cea59-18a4-4d49-b400-e3eecea17673",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss before 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\/\\*\\s* sourceMappingURL=(.*).\nInstalled Version: \"7.0.35\", Update to Version: \"7.0.36, 8.2.13\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23382.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "e85c07943aea1e6a433ded2199ff464258770b9a2d5ee685f886afb62a0d18a6"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089141-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "13b16009-9e3a-4a92-80c7-285aa9506c62",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss from 7.0.0 and before 8.2.10 are vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.\nInstalled Version: \"8.1.7\", Update to Version: \"8.2.10, 7.0.36\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23368.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "d6ea1537298289325750dae7dd523b2dfb970b067c583f9a1f9f540620f004cd"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089143-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "63f57b45-85ee-4645-998b-567df49b2467",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss before 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\/\\*\\s* sourceMappingURL=(.*).\nInstalled Version: \"8.1.7\", Update to Version: \"7.0.36, 8.2.13\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23382.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "897b3f253ec18e8a32880618205ead34fff158523de788552951343f69d40db4"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089144-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "aea72334-b85d-4d65-9f2f-8c0e9a4810ec",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss from 7.0.0 and before 8.2.10 are vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.\nInstalled Version: \"8.2.3\", Update to Version: \"8.2.10, 7.0.36\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23368.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "e69d82570eaeb0eb8c3c7c5fae20af074e7fca3ec991b7bef892bd9898df6af6"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089145-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6070a250-e76b-4f19-84b4-2825ea5362c8",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "postcss",
          "details": "The package postcss before 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\/\\*\\s* sourceMappingURL=(.*).\nInstalled Version: \"8.2.3\", Update to Version: \"7.0.36, 8.2.13\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23382.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "39eab28fb7084d34c01ac00cb685c4c3f4ba9aaf38fdf27d7db0172a25204a70"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089146-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0543b895-b3e3-43be-9a8e-afaa72d7437c",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "prismjs",
          "details": "Prism is a syntax highlighting library. Some languages before 1.24.0 are vulnerable to Regular Expression Denial of Service (ReDoS). When Prism is used to highlight untrusted (user-given) text, an attacker can craft a string that will take a very very long time to highlight. This problem has been fixed in Prism v1.24. As a workaround, do not use ASCIIDoc or ERB to highlight untrusted text. Other languages are not affected and can be used to highlight untrusted text.\nInstalled Version: \"1.23.0\", Update to Version: \"1.24.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-32723.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8ef850575e9497c4fd9b1f401f5beb408f7ae19633145c34c3e82687edef6a2a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089147-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ad527bae-110f-467c-be9c-da19483b65dc",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "prismjs",
          "details": "prism is vulnerable to Inefficient Regular Expression Complexity\nInstalled Version: \"1.23.0\", Update to Version: \"1.25.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-3801.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "a3ccb17dd8e66c531ca2d38d58f19133b3b94ff1e0e6ec9d1bdfa88b8510c658"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089149-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "248bad34-ea70-48a2-8e36-7e2341b1e702",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "prismjs",
          "details": "Prism is a syntax highlighting library. Starting with version 1.14.0 and prior to version 1.27.0, Prism's command line plugin can be used by attackers to achieve a cross-site scripting attack. The command line plugin did not properly escape its output, leading to the input text being inserted into the DOM as HTML code. Server-side usage of Prism is not impacted. Websites that do not use the Command Line plugin are also not impacted. This bug has been fixed in v1.27.0. As a workaround, do not use the command line plugin on untrusted inputs, or sanitize all code blocks (remove all HTML code text) from all code blocks that use the command line plugin.\nInstalled Version: \"1.23.0\", Update to Version: \"1.27.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-23647.\nCwe Links: (https://cwe.mitre.org/data/definitions/79.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "90ac13dfcd48eff69ea7151c87e448a829788a264778c59bf2f32a0afcafe27b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089151-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "280fdced-ec45-42bc-8a40-9f48a6d6d685",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "sharp",
          "details": "sharp is an application for Node.js image processing. Prior to version 0.30.5, there is a possible vulnerability in logic that is run only at `npm install` time when installing versions of `sharp` prior to the latest v0.30.5. If an attacker has the ability to set the value of the `PKG_CONFIG_PATH` environment variable in a build environment then they might be able to use this to inject an arbitrary command at `npm install` time. This is not part of any runtime code, does not affect Windows users at all, and is unlikely to affect anyone that already cares about the security of their build environment. This problem is fixed in version 0.30.5.\nInstalled Version: \"0.26.3\", Update to Version: \"0.30.5\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-29256.\nCwe Links: (https://cwe.mitre.org/data/definitions/77.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "f419d40e022453b3f2496019df381a6639cf87ebb08e6cbfb7dbc788a6179e9a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089161-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f4b5c3a9-17a2-4491-9ac2-da6dfdb7c42f",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/controller/poetry.lock",
          "code": "numpy",
          "details": "An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. NOTE: the vendor states that this reported code behavior is \"completely harmless.\"\nInstalled Version: \"1.21.1\", Update to Version: \"1.22\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-34141.\nCwe Links: (https://cwe.mitre.org/data/definitions/697.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "94889d928993e149cd058609df9a25888b123e2e97aaee9e8d15bbd1b02ec244"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089162-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e3e5f725-198d-44bc-8691-a71a104092ea",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/controller/poetry.lock",
          "code": "numpy",
          "details": "** DISPUTED ** Buffer overflow in the array_from_pyobj function of fortranobject.c in NumPy \u003c 1.19, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).\nInstalled Version: \"1.21.1\", Update to Version: \"1.22.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-41496.\nCwe Links: (https://cwe.mitre.org/data/definitions/120.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "2ea660267311595098db28349a21061d5e630e64e7fe9c4b02f7bd1ed5a41a94"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089166-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "982cdd97-3d64-4d8e-af15-1f0b4fdac09a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/mcmc_stats_server/poetry.lock",
          "code": "numpy",
          "details": "An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. NOTE: the vendor states that this reported code behavior is \"completely harmless.\"\nInstalled Version: \"1.21.1\", Update to Version: \"1.22\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-34141.\nCwe Links: (https://cwe.mitre.org/data/definitions/697.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "a40fce7e294db77834f0d21356ab039f6b1ead138852bd33895aa8096462841c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089167-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fe68ee32-3a0e-4392-895f-4db0f64faf52",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/mcmc_stats_server/poetry.lock",
          "code": "numpy",
          "details": "** DISPUTED ** Buffer overflow in the array_from_pyobj function of fortranobject.c in NumPy \u003c 1.19, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).\nInstalled Version: \"1.21.1\", Update to Version: \"1.22.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-41496.\nCwe Links: (https://cwe.mitre.org/data/definitions/120.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "a0be8017e11e0bc210c79b78e495dfea1b662fcd5e0fe468687a6f2ebc54f2d5"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089176-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ee4a5a85-4550-4d6e-a391-8d1477ab7919",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/user_code_server/poetry.lock",
          "code": "numpy",
          "details": "An incomplete string comparison in the numpy.core component in NumPy before 1.22.0 allows attackers to trigger slightly incorrect copying by constructing specific string objects. NOTE: the vendor states that this reported code behavior is \"completely harmless.\"\nInstalled Version: \"1.21.1\", Update to Version: \"1.22\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-34141.\nCwe Links: (https://cwe.mitre.org/data/definitions/697.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "3ee62762f6f2ba4e3cc38fafd7c553a5d9c69cb22485b762f4f450b575a367d5"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089177-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bedfe2ed-7e99-417c-9bae-050ea775144c",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/user_code_server/poetry.lock",
          "code": "numpy",
          "details": "** DISPUTED ** Buffer overflow in the array_from_pyobj function of fortranobject.c in NumPy \u003c 1.19, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).\nInstalled Version: \"1.21.1\", Update to Version: \"1.22.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-41496.\nCwe Links: (https://cwe.mitre.org/data/definitions/120.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "367935fa9935d31e8c8359d8a57e6d9eec429b8b90701fde2bb6d28a44a0d6bc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089183-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "939bcfd0-4770-45f3-957f-ae2291cf253c",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "got",
          "details": "The got package before 12.1.0 (also fixed in 11.8.5) for Node.js allows a redirect to a UNIX socket.\nInstalled Version: \"9.6.0\", Update to Version: \"11.8.5, 12.1.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-33987.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "7769de53aae507010f8866284d7c2c1071f9de0ec6c51c44c5b9fe86dc34ca62"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089188-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a51d12e1-46c4-4b15-89ff-b162622a8d1b",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "node-fetch",
          "details": "node-fetch is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor\nInstalled Version: \"2.6.6\", Update to Version: \"2.6.7, 3.1.1\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-0235.\nCwe Links: (https://cwe.mitre.org/data/definitions/601.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "00a93254b64d197dbf0fe446afa56288b5dfe9eae143abb1174a15c5674eb085"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089192-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "be97ee73-e4f1-45ad-b527-188bfc5b7c61",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "node-forge",
          "details": "forge is vulnerable to URL Redirection to Untrusted Site\nInstalled Version: \"0.10.0\", Update to Version: \"1.0.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-0122.\nCwe Links: (https://cwe.mitre.org/data/definitions/601.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "7628c1c203117d3dae5fbb7e4cfa1621596c566157bbbbeea946881bad92d6ed"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089193-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c26fa5a1-2bc3-4538-a4d0-e7ccf11b3497",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "node-forge",
          "details": "Forge (also called `node-forge`) is a native implementation of Transport Layer Security in JavaScript. Prior to version 1.3.0, RSA PKCS#1 v1.5 signature verification code does not properly check `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest. The issue has been addressed in `node-forge` version 1.3.0. There are currently no known workarounds.\nInstalled Version: \"0.10.0\", Update to Version: \"1.3.0\" for fix this issue.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24773.\nCwe Links: (https://cwe.mitre.org/data/definitions/347.html)",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8e8a1d8cda3fa9c4247bb294f0647a06704bc9fc417289180423ec3498f8339a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089199-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6697e4c5-cad5-45c9-bf85-1d2d493299b0",
          "line": "191",
          "column": "16",
          "confidence": "HIGH",
          "file": "bnpp-board/benjamin/goproxy/ops.go",
          "code": "190: \n191: \t\tfile, err := os.Open(path)\n192: \t\tif err != nil {\n",
          "details": "Potential file inclusion via variable",
          "securityTool": "GoSec",
          "language": "Go",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c0ad3fdb2f111f28385bc8859af1c1adcb02dbabd13748f8305d8476a5383200"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.0892-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3707c45a-5742-42d8-8078-4e99a8c2f2cc",
          "line": "86",
          "column": "32",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/schema.go",
          "code": "{\n86: \t\tif err := InsertFortune(ctx, \u0026f); err != nil {\n87: \t\t\treturn err\n",
          "details": "Implicit memory aliasing in for loop.",
          "securityTool": "GoSec",
          "language": "Go",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "20002d388479e5444b6318e59dcb6cb381974d15711a3e0e106341254f72fa1d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089203-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "000a4c65-c28f-4c0f-ad9f-30575a74c9b1",
          "line": "63",
          "column": "2",
          "confidence": "HIGH",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/schema.go",
          "code": "62: \t}\n63: \tdefer file.Close()\n64: \n",
          "details": "Deferring unsafe method \"Close\" on type \"*os.File\"",
          "securityTool": "GoSec",
          "language": "Go",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0aa72d111b9b501299532621b23bd11e7f02627f5d7f8c3d535f3ded038fb452"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089204-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4cb5807d-4ee0-490c-99ef-1ca022a3e451",
          "line": "195",
          "column": "3",
          "confidence": "HIGH",
          "file": "bnpp-board/benjamin/goproxy/ops.go",
          "code": "194: \t\t}\n195: \t\tdefer file.Close()\n196: \t\t_, err = io.Copy(writer, file)\n",
          "details": "Deferring unsafe method \"Close\" on type \"*os.File\"",
          "securityTool": "GoSec",
          "language": "Go",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8a2ab5dc788b0abbd31b2741a9410a45ff28dc33426a5a272222458df624cdac"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089253-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "25baadfd-3715-4ebd-a001-f7cb8e1c1668",
          "line": "159",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/impute/impute.py",
          "code": "158     parser = argparse.ArgumentParser()\n159     parser.add_argument(\"--input_dir\", default=\"/tmp/",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "20a62e0e93238a833f8b9b57110f2d2f9b8857ebdc5052308603f298cdce7eac"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089254-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6e805d61-335c-44b5-af3f-c1dd2f5a625f",
          "line": "160",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/impute/impute.py",
          "code": "159     parser.add_argument(\"--input_dir\", default=\"/tmp/input\")\n160     parser.add_argument(\"--outp",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a8e4164621988b2b5dfe714fd2a845d7fd31cef1dbea351a36866fe4460ea402"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089255-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bf56e3db-6b07-4704-8826-b1ac722d50ef",
          "line": "72",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/scale_counts/scale_counts.py",
          "code": "71     parser = argparse.ArgumentParser()\n72     parser.add_argument(\"--input_dir\", default=\"/tmp/in",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "153e1baab22a15e39066f8e259d9da748c1b980289e2ef74fa0d6ee753267dd8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089256-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "919d8b9f-2c29-496d-9254-f242e7b90025",
          "line": "73",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/scale_counts/scale_counts.py",
          "code": "72     parser.add_argument(\"--input_dir\", default=\"/tmp/input\", type=str)\n73     parser.add_argument",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "d1674a2945fd93fcb825550166da7b040f7b0e751a40a926f4372507e49a1070"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089259-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "72e6c5c6-6c98-4f14-acf6-28070e1e7748",
          "line": "42",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/trainPCA/trainPCA.py",
          "code": "41     parser.add_argument(\"--chunksize\", default=1000)\n42     parser.add_argument(\"--input_dir\", de",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b6958ba6ad86b16aa3029b8751e584cc44ed0448ae10772f40c578ff26ff762b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08926-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "48ed2f5a-70a9-4f54-a39a-9838554f1e9d",
          "line": "43",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/trainPCA/trainPCA.py",
          "code": "42     parser.add_argument(\"--input_dir\", default=\"/tmp/input\")\n43     parser.add_argument(\"--output",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "de0dc915d91db4c62d6b210fe3ca5edda8741f57242742b9c16168b1fc13e0cc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089261-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6484375d-021f-4f8f-a716-19a49e0b7855",
          "line": "122",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/trainVAE/VAE_recount2.py",
          "code": "121 \n122 fnames = glob.glob('/tmp/recount2_dataset/SRP000*_counts.csv')\n123 dfs = multiprocessing.Po",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "00001fd61c1fc51ee53d90a4ae6c12ac4aea1376b0098020cdce6799aac3a146"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089262-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7516eac9-283e-47e0-a985-f70161269717",
          "line": "147",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/trainVAE/VAE_recount2.py",
          "code": "146 chunksize_ = 100\n147 fnames = glob.glob('/tmp/recount2_dataset/*_counts.csv')\n148 shuffle(fnames",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e23ed2ee02961a067f3fd44473b289c024b41a6e41f1ff8d9a72ae1026b4a263"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089263-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2f74de8e-2edd-4350-b4b8-b95b218fb612",
          "line": "99",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/trainVAE/test.py",
          "code": "98 chunksize_ = 100\n99 fnames = glob.glob('/tmp/recount2/input2/*_counts.csv')\n100 shuffle(fnames)\n",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "759f492a05f69a5622a67ce5b6c4f95ed25cc154b7b7d5202e5ca9730634b063"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089264-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "54139618-dbdb-45e2-99e5-d6b6ae62cb7f",
          "line": "54",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/trainVAE/trainVAE.py",
          "code": "53     parser.add_argument(\"--intermediate_dim\", default=2048)\n54     parser.add_argument(\"--input_d",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "94b4302879784dcc9ca207f18629f925845773bd6538c3cf8383509dc4b2fcc7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089265-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0bfe8920-d769-45fb-acef-234e34064195",
          "line": "55",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/trainVAE/trainVAE.py",
          "code": "54     parser.add_argument(\"--input_dir\", default=\"/tmp/input\")\n55     parser.add_argument(\"--output",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4c490c82dc6b8e345caa143fa7690d6908552bec45a8f90d8c1838b6078aeb0a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089267-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9e546ffc-9024-43de-ba0f-961f88ad6cc2",
          "line": "14",
          "column": "0",
          "confidence": "HIGH",
          "file": "biofinder_ml/components/transformPCA/transformPCA.py",
          "code": "13     with open(os.path.join(modeldir,'incrPCA.model'),'rb') as in_file:\n14         model = pickle.",
          "details": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6f68c3157892f233b76c5bd4a5bec38d2de72242f504c6256c4cec7f33c1cfcb"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089269-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "30258eef-74c3-4bf4-a1ed-dcfec1514bf4",
          "line": "52",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/transformPCA/transformPCA.py",
          "code": "51     parser.add_argument(\"--chunksize\", default=1000)\n52     parser.add_argument(\"--model_dir\", de",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "417c15630feec770f6e01ceaa006bf5f8b762558635d9d093d89a82f061dfcde"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08927-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9d05b08b-93b7-4f8e-b4ed-a0553d140459",
          "line": "53",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/transformPCA/transformPCA.py",
          "code": "52     parser.add_argument(\"--model_dir\", default=\"/tmp/model\")\n53     parser.add_argument(\"--input_",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "892a979de544d819568bb009d35e3bfb8066a08788e546e7c5d69f6a1bcc608c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089271-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c8d12974-5a6f-44fb-a7e4-605a61beae85",
          "line": "54",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/transformPCA/transformPCA.py",
          "code": "53     parser.add_argument(\"--input_dir\", default=\"/tmp/input\")\n54     parser.add_argument(\"--output",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "1bd9ba09975e8fa5ec7c1b3c57acb1cf0963deb2c1d0bc7c84e10efe19947eaa"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089273-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6237f841-7d70-42bf-a7e8-25e50c1afe66",
          "line": "54",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/transformVAE/transformVAE.py",
          "code": "53     parser.add_argument(\"--chunksize\", default=1000)\n54     parser.add_argument(\"--model_dir\", de",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9e4cd0cd42c19da0f4d8c8f4d54f5b13a8b28256ed95ef63fed0052a047ff09f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089275-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ebed6739-23c0-4905-a597-ff67586d1f69",
          "line": "55",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/transformVAE/transformVAE.py",
          "code": "54     parser.add_argument(\"--model_dir\", default=\"/tmp/model\")\n55     parser.add_argument(\"--input_",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "d6f02017d772f4abe7644c0fc12ebf51d33530ede1272721861274604c6f5f3d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089276-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "62a3cd79-223b-40bd-9075-bb27aa2e3e0c",
          "line": "56",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/transformVAE/transformVAE.py",
          "code": "55     parser.add_argument(\"--input_dir\", default=\"/tmp/input\")\n56     parser.add_argument(\"--output",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "03027ac1e380783e49f02ad311c970f780a704281726ae1b0f5e6909d4f28e34"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089277-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "27836765-c42d-4c03-880a-da30325bad0c",
          "line": "47",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/viz/viz.py",
          "code": "46     parser = argparse.ArgumentParser()\n47     parser.add_argument(\"--input_dir\", default=\"/tmp/in",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2a1900eb8cba2558745cbb0fe80818156e314c86128ddeba9d0cdbedfbc35e31"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089278-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e045c5af-2910-4549-ae19-35a9137e324b",
          "line": "48",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/components/viz/viz.py",
          "code": "47     parser.add_argument(\"--input_dir\", default=\"/tmp/input\")\n48     parser.add_argument(\"--output",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fd69cbaf57d3f2366f705a845973a16d41a95e539de3e3328ba67c3baac9aafb"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089279-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d63014a7-e2f9-4f92-bb1b-98c9855fae32",
          "line": "9",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/lib/database/datalake_extract.py",
          "code": "8                     datefmt='%m-%d %H:%M',\n9                     filename='/tmp/recount2_extract.l",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fece63fbf796aefe3817131396d4e44cd5f55832934397937ad5ab1e65c45107"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08928-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ea1e0170-7d12-4f2b-94be-d2ad97604ee7",
          "line": "20",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/lib/database/datalake_extract.py",
          "code": "19 parser.add_argument(\"--datalake_query\", help=\"query for pydatalake query\", default=\"tags='recount",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "936201ad94058d6077169d92cffeec753bd333533f2c8aa8c81d67d9954e763c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089285-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a1581e79-9279-488b-810e-d58235eae57c",
          "line": "101",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/lib/database/download_recount_dataset.py",
          "code": "100     #Clean up /tmp/ directory\n101     if os.path.exists('/tmp/{0}'.format(experiment_name)):\n102",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "91b606fc4caedecbf4aeb335cb81b965f4cb323f9bdcb2297a973e1f67b7c6bd"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089286-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bf89d9a7-be64-4015-a3b9-2f000e86c5fa",
          "line": "103",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/lib/database/download_recount_dataset.py",
          "code": "102         try:\n103             shutil.rmtree('/tmp/{0}'.format(experiment_name))\n104         excep",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ecd30bd2c9edfa3eefdc490f80093cd7fec2e4746afcf54a1f64f7fbba3b9aa6"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089287-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c4ddcfe2-0171-4aa2-a992-9cb0414a84ab",
          "line": "122",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/lib/database/download_recount_dataset.py",
          "code": "121             gene_counts, experiment_metadata = download(dataset)\n122             gene_counts.to_",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "5564c8575faeb50c0f60de1cc0aff9d00774a9aec83999596021631ee54d93ff"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089288-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "77fcadda-fda7-4109-ab38-1871348963b1",
          "line": "126",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/lib/database/download_recount_dataset.py",
          "code": "125             logger.warning(\"Download {0} failed\".format(dataset))\n126     X.to_csv('/tmp/recount",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c9338bf1fd1b503bda6d8290d4b909de60ed671b2315bd8e1aa643853ad7cd50"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089291-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c4954b32-f700-4fea-8a2d-1bd08a9a8278",
          "line": "135",
          "column": "0",
          "confidence": "HIGH",
          "file": "cabal/bootstrap/bootstrap.py",
          "code": "134         url = package_url(package, version)\n135         with urllib.request.urlopen(url) as resp",
          "details": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "68540b8c11fea1ba9960ba6689abe4ab69b898cf4cd9116db65b2461dd57c81d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089293-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ab236682-a091-4fef-84b3-c8446d104a89",
          "line": "145",
          "column": "0",
          "confidence": "HIGH",
          "file": "cabal/bootstrap/bootstrap.py",
          "code": "144         url = package_cabal_url(package, version, revision)\n145         with urllib.request.urlo",
          "details": "Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c5bf23cdd78557e6d4130ee47640c14ca19a099840d130d751bb65df2d585c7e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089303-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5230c77d-450f-4541-80ef-18d60c450f1f",
          "line": "19",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "cealogs/src/outlierdetection/stream2batch.py",
          "code": "18 parser.add_argument(\"--processing_time\", default=\"1 hour\", help=\"Cut-off time after which the bat",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "1a18dfd503170eca6a871f90ea0c3509164175f8dd05aa3c27dfad267ec2afd5"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089304-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fbb81d4c-edb7-46f3-893b-156c960085b5",
          "line": "60",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "cealogs/src/outlierdetection/trainModelBatch.py",
          "code": "59     parser.add_option('', '--input_data_path', action='store', dest='input_data_path', help='path",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "d7656ed47ca8be2eb2b3b37ac7998a38b850742ddd6b12e5c687e6d9da77b76d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089307-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "89255431-32cd-40d5-bcea-6d301f7deb6f",
          "line": "79",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/controller/chainsail/controller/test/test_job_controller.py",
          "code": "78             initial_schedule,\n79             basename=\"/tmp\",\n80         )\n",
          "details": "Probable insecure usage of temp file/directory.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8b1e107b778d57f54cd568586dcf2d9dfc737469509668ae677e75e2abf48078"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089309-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "baab48f3-cbbb-4509-8462-7d2956063a7a",
          "line": "12",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/mcmc_stats_server/chainsail/mcmc_stats_server/wsgi.py",
          "code": "11     ####################\n12     app.run(host=\"0.0.0.0\", debug=True)\n",
          "details": "Possible binding to all interfaces.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "62e570bfdee2d8c2e8293c8267ccbc35d20e5cc4293abfa7d9481c485e763059"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089311-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d90de61a-28d4-41a2-bdbc-e280c311e5b4",
          "line": "257",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/chainsail/scheduler/app.py",
          "code": "256     db.create_all()\n257     app.run(\"0.0.0.0\", debug=True)\n",
          "details": "Possible binding to all interfaces.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c5bc0c013bef0fd088d4e7a60bd53232219fa81ae3bfd7b7fb510dfb77644196"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089312-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f95d0c12-b17f-4c4d-b3d0-ae4d77655a51",
          "line": "256",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/config.py",
          "code": "255     with open(config_file) as f:\n256         raw_config = yaml.load(f, Loader=yaml.FullLoader)\n2",
          "details": "Use of unsafe yaml load. Allows instantiation of arbitrary objects. Consider yaml.safe_load().",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a8faeb94c75ab27f58c4373333436986a1cae9061502d689f0aaef0dfbc980cf"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089355-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "aa63c86d-e610-4d5e-87dc-ba3f3752bf0f",
          "line": "15",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/chainsail/scheduler/wsgi.py",
          "code": "14     ####################\n15     app.run(host=\"0.0.0.0\", debug=True)\n",
          "details": "Possible binding to all interfaces.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4a03e03e1096cda0d2defefe7f3c719095a41edbbaafdbffb8dca5134823f15c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089357-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f893c09e-c5b8-4418-a2cb-25b86d265f30",
          "line": "205",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/storage.py",
          "code": "204             with open(file_name, \"rb\") as f:\n205                 return load(f)\n206         elif",
          "details": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "746e96035e7a594e15875c956cb0a42eadd14ae36c7a39e7ab29a24d6d8d6d77"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089358-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "98e44da3-39fe-41ce-8bb3-33e0a874c017",
          "line": "272",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/storage.py",
          "code": "271         if data_type == \"pickle\":\n272             return load(bytes_iterator_to_bytesio(stream))",
          "details": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4f89477e9d06e2ed020f1a5c45a29219b2f04afab06c97e2d7438bb3df5e9289"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089369-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f258ae9b-9f5b-4145-84ed-2712114e3ae3",
          "line": "60",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_storage.py",
          "code": "59     def testPickleToStream(self):\n60         res = load(pickle_to_stream(obj))\n61         expecte",
          "details": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "14efb3255a49e2cb220907564d5d8cc8963913714c24cc71cda4062571399f8a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089371-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3adc6701-f912-4d8d-bb22-d8a1e0e6b5ef",
          "line": "181",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_storage.py",
          "code": "180         with open(full_path, \"rb\") as f:\n181             self.assertEqual(o, load(f))\n182 \n",
          "details": "Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "MEDIUM",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "de4f3af2f0532af1920bd3aa5e4781427ab1d02fa4a4432fd5641ae5a5f1555c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088988-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "888f7b37-446b-423b-b1e1-56f7d08e3e75",
          "line": "54",
          "column": "26",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "  for (size_t i = 0; i \u003c wcslen (result); i++)",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "27c8fd71c39f5685f6ac2c8b7f45a7033bd5fcafa1676e3ce072484f8fe12b55"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088989-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "37003ecc-bffd-4617-9a71-c6572cf42357",
          "line": "85",
          "column": "14",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "  int bLen = wcslen (result) + wcslen (ns) + 1;",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a2586ba57c11061627a24927f05561d79f2eff028c99f00b01bc739f10e48c2e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08899-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4ac30d99-315e-4404-a93f-1889a872a479",
          "line": "85",
          "column": "32",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "  int bLen = wcslen (result) + wcslen (ns) + 1;",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a2586ba57c11061627a24927f05561d79f2eff028c99f00b01bc739f10e48c2e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088991-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2f1e38d0-a38d-44f5-a3f1-0f293c3006a3",
          "line": "204",
          "column": "13",
          "confidence": "LOW",
          "file": "asterius/asterius/app/fs.c",
          "code": "  int len = wcslen (mode);",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e1e29c1b7d764ec3bb4b9405558b3aec88a2b4482d03d2de41e6f906c5c6b811"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088992-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5bc380a6-d977-4237-9c09-54d1e1da4d21",
          "line": "136",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "    c = getc(istream);",
          "details": "Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "d831c7a75ecbb374ca3a971f623998d72f0bc9ca1d62deaba6f976b8281374bc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088994-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9436d026-3cae-4269-ad1d-5b8f27ce9200",
          "line": "341",
          "column": "49",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "\t    prefix_str = (char*)malloc(sizeof(char)*(1+strlen(*argv)));",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2238e825dd768497cbe4eb087a7e63f22f88cbc5e61ddcd2c8a3ddbadd3d5e8f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088995-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d649b995-1c29-478f-83e7-4fceaa3022d3",
          "line": "209",
          "column": "10",
          "confidence": "LOW",
          "file": "attoparsec/examples/rfc2616.c",
          "code": "\tnread = read(fd, buf, sizeof(buf));",
          "details": "Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "94ffaff879cbd4b913cb9302e167d8bd33d2274ce7c14b752ba659dd62fbee61"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088996-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ad65b4cc-7400-49fd-8ccb-06d6cd1f5627",
          "line": "40",
          "column": "25",
          "confidence": "LOW",
          "file": "cabal/Cabal-tests/tests/cbits/rpmvercmp.c",
          "code": "    char *buf1 = malloc(strlen(a) + 1);",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0049ac07a58b174d038b149a70418ce03e4b7f2c2afa9df7aaf6ee0229919d2a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088997-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4f7327c8-a6b7-49a0-b1b8-4b5a2374b8a3",
          "line": "41",
          "column": "25",
          "confidence": "LOW",
          "file": "cabal/Cabal-tests/tests/cbits/rpmvercmp.c",
          "code": "    char *buf2 = malloc(strlen(b) + 1);",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a2e5a5a0df00548f530b6c4d7f0004bccdc0414a22dd27368b40d431dfc59cb4"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.088999-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "606d98d4-9906-450c-b124-6b4a50414083",
          "line": "116",
          "column": "10",
          "confidence": "LOW",
          "file": "cabal/Cabal-tests/tests/cbits/rpmvercmp.c",
          "code": "\t    if (strlen(one) \u003e strlen(two)) return 1;",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "456bd300d0e85e0160057e8adb15f5296447ba8c42cf618319e6c89f182bdb90"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ee817114-7983-493f-85b4-d0175b5332bd",
          "line": "116",
          "column": "24",
          "confidence": "LOW",
          "file": "cabal/Cabal-tests/tests/cbits/rpmvercmp.c",
          "code": "\t    if (strlen(one) \u003e strlen(two)) return 1;",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "456bd300d0e85e0160057e8adb15f5296447ba8c42cf618319e6c89f182bdb90"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089001-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c1544159-fdeb-4bd1-b3a8-92257ef52cbb",
          "line": "117",
          "column": "10",
          "confidence": "LOW",
          "file": "cabal/Cabal-tests/tests/cbits/rpmvercmp.c",
          "code": "\t    if (strlen(two) \u003e strlen(one)) return -1;",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fce94f6360d40684dbfd79f59fd869643b7fc66699e3aa97170547b49a3c18bf"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089002-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bcde3960-caa2-48d5-bab1-62cd6f1e62dd",
          "line": "117",
          "column": "24",
          "confidence": "LOW",
          "file": "cabal/Cabal-tests/tests/cbits/rpmvercmp.c",
          "code": "\t    if (strlen(two) \u003e strlen(one)) return -1;",
          "details": "Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)  ",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fce94f6360d40684dbfd79f59fd869643b7fc66699e3aa97170547b49a3c18bf"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089003-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "241aa7bf-6566-43b1-978a-b2d4732d3058",
          "line": "99",
          "column": "13",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "            fprintf(stderr, \"%s \", file);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b1fc32108a1784a4022edcaeae42ce84c1ef326d4ac3c1daf5ee461b904436e6"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089004-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4a907169-210b-43ab-a8be-126da6605dfc",
          "line": "100",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "        fprintf(stderr,\"line %d: %s\\n\",lin,what);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "186c450c56deca3fe479b3fb1f82c2652088e60e9295a007851502f7e0a2e740"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089005-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e7476b37-d9b7-4ffb-9eaa-6b32cd6dfb75",
          "line": "389",
          "column": "7",
          "confidence": "LOW",
          "file": "asterius/asterius/app/unlit.c",
          "code": "      fprintf(ostream, \"#line 1 \\\"%s\\\"\\n\", prefix_str);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "21acdb9aea4a7b6f464769940662f20a1159c5c050905e18f2856df4c4710af3"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089006-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7a6c39d3-e1c0-4c54-b870-41d94325f344",
          "line": "57",
          "column": "5",
          "confidence": "LOW",
          "file": "asterius/asterius/ghc-bin-asterius/hschooks.c",
          "code": "    fprintf(stderr,",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4e81a58ab065909d2822398aaaab4fe46d58a5ea64cd08d5af6cc8ddc014d193"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089007-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ce2babc9-8eb8-4ab9-a243-00bd1bf3937c",
          "line": "22",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T10904lib.c",
          "code": "        fprintf(stderr, \"finalize_value: %ld calls\\n\", counter);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a4c32363d5942211e8956c036a2888dc00e9a537f6889b18c817dc72bcf27491"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089008-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b6bb6664-837c-48df-b56e-9efa69d4c733",
          "line": "26",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T10904lib.c",
          "code": "        fprintf(stderr, \"finalize_value: %x != %x after %ld calls\\n\",",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "092f85304f4ebc91dcd38b9d14b8dfcd5093f2e8d00e94fbeaf06569b6d37c12"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089009-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "69072c62-2a69-42b8-acf2-294d9fa18c80",
          "line": "7",
          "column": "35",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T5435_asm.c",
          "code": "static void initArray1(void)    { printf(\"initArray1\\n\");   fflush(stdout); }",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "d873cc9b168c5e2f34aa72e429d394f4fa510b98f787d413ec977bcffdd24b98"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089011-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0600cc9d-f103-41f8-894c-98da403dea17",
          "line": "8",
          "column": "35",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T5435_asm.c",
          "code": "static void initArray2(void)    { printf(\"initArray2\\n\");   fflush(stdout); }",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "017bd62b38565ae84d07f8b5398211c159192ec269275619703c4e9363d40482"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089012-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "962ba0bd-1e20-4b7a-8943-708cf62ea136",
          "line": "9",
          "column": "35",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T5435_asm.c",
          "code": "static void ctors1(void)        { printf(\"ctors1\\n\");       fflush(stdout); }",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6dea11865209fa746f69463e4731dcfd1c381cc980e646ebb52f807f26cfab90"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089013-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7ab77997-de72-43d6-8f00-eb585e46dfd7",
          "line": "10",
          "column": "35",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T5435_asm.c",
          "code": "static void ctors2(void)        { printf(\"ctors2\\n\");       fflush(stdout); }",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "be855c0e13141887bfe3c373e3fc2006bc310adf8aa5efaf49274022a72ed398"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089014-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "76572929-0cb5-42d0-b5d7-c5849fcbf995",
          "line": "11",
          "column": "35",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T5435_asm.c",
          "code": "static void modInitFunc1(void)  { printf(\"modInitFunc1\\n\"); fflush(stdout); }",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "3366cacb116173c5fcb408decbd1e00b81994743977b2d6043332c820bc8b56d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089016-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7863f172-40e3-471e-a616-078be19085fc",
          "line": "12",
          "column": "35",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T5435_asm.c",
          "code": "static void modInitFunc2(void)  { printf(\"modInitFunc2\\n\"); fflush(stdout); }",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0a1740b5ca262284748d23fbcc2bba28861a370e2614ebe68942a7780eb6d384"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089017-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2d730f79-a422-43b6-9ef5-afa879369484",
          "line": "6",
          "column": "5",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T5435_gcc.c",
          "code": "    printf(\"initializer run\\n\");",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0e1c06921538cbb21dae4d382925fb4ad594d6d11e7603528a917fd3eb19bf58"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089018-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bf4724a2-6723-46d3-a557-546ca841d511",
          "line": "7",
          "column": "3",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T7040_c.c",
          "code": "  printf(\"x: %d\\n\", x);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "160f360f86daac077a64b9f2e1c347bd85e882e73e9d1e2e0792236ae2eb612e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089019-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "347f9502-f397-4767-95ed-5132d367a7b6",
          "line": "9",
          "column": "3",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T7040_c.c",
          "code": "  printf(\"x: %d\\n\", x);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2109c3336740438a2d55a45ba323ae83b4d99c5ebffee20d0019fee4f0b0fe4b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08902-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c030533a-b74b-42ae-b96e-252027d4e18d",
          "line": "7",
          "column": "3",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T7040_ghci_c.c",
          "code": "  printf(\"x: %d\\n\", x);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "06287c2fb6b35d5c426e7ccf765631e9918105f31a801c0c98eff5a30b684aa0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089021-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0a058aad-506c-43b9-9578-e4a6d28031d1",
          "line": "9",
          "column": "3",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/T7040_ghci_c.c",
          "code": "  printf(\"x: %d\\n\", x);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c7b77470c950b8493d595f8f127a859e9d933ee4b1579f9234f2fbe5f3a646b8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089022-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ce34f0e6-b6ba-43f8-92c7-2b3ee5473a56",
          "line": "59",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/linker_unload.c",
          "code": "        printf(\"%d \", i);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "bbbc3da1ae1b6ca4816628546a2dc88a693d13a6894c8a0333aa91b53b8abf16"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089023-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "77a4b1f2-7042-4f2f-9cc4-a1046ad3cf46",
          "line": "93",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/linker_unload.c",
          "code": "        printf(\"%d \", i);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "447186816f1fed237e5b86f26814c8ab7299913b14bbfb0391cdf3c70191358b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089024-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "31a178a1-41f4-4af1-b766-96920cf81177",
          "line": "54",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/testheapalloced.c",
          "code": "        printf(\"%d\\n\", i);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7a8ec6932a53bbcad7003e61e387ce759ee56a07e9014d945bd37379c4b7566a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089025-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3aad7d6f-36fe-47f6-9107-086305e12356",
          "line": "85",
          "column": "9",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/testheapalloced.c",
          "code": "        printf(\"%d\\n\", j);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b3a251379270efe3d1a91875e9e8302dac34bca615a9b26d323f9a1a14e355f7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089027-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ebf77377-8b4d-4dcf-b6e8-8d8f7351dc47",
          "line": "88",
          "column": "5",
          "confidence": "LOW",
          "file": "asterius/asterius/test/ghc-testsuite/rts/testheapalloced.c",
          "code": "    printf(\"misses: %ld, %ld%%\\n\", mpc_misses, mpc_misses / (LOOPS*20));",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "195b46be84c89635aea466f4e6e3519835422b20a29d208192b4e7fc89bf8109"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089028-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8c72c79a-a802-40dd-8570-8e5e1ab21dd6",
          "line": "213",
          "column": "6",
          "confidence": "LOW",
          "file": "attoparsec/examples/rfc2616.c",
          "code": "\t    fprintf(stderr, \"%s: parse failed\\n\", path);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b3c63e62802b686375fcfbe396bede8ce3e8acd9208d419a7b07851fd52cf203"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089029-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9d11189e-4401-48e0-8e90-91c7d76f2930",
          "line": "218",
          "column": "5",
          "confidence": "LOW",
          "file": "attoparsec/examples/rfc2616.c",
          "code": "    printf(\"%ld\\n\", (unsigned long) data.count);",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4e26ad9c81acb06319f080ff9e69b1f0a067218dbd9285938996a784ac0338f1"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08903-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2f504b8f-530a-4860-bb85-a4747c00d1a3",
          "line": "11",
          "column": "5",
          "confidence": "LOW",
          "file": "cabal/cabal-testsuite/PackageTests/CMain/foo.c",
          "code": "    printf(\"Hello world!\");",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6f697cd10ced7f03cb7a406236523593b12ab45d4f36e9f30ab5d73895545e2f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089031-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4d87e35b-ac00-49a9-b407-865ff6191267",
          "line": "4",
          "column": "5",
          "confidence": "LOW",
          "file": "cabal/cabal-testsuite/PackageTests/COnlyMain/foo.c",
          "code": "    printf(\"Hello world!\");",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a0d26182a9a16366bdcdd4c2a551a9d545eb074131a9c7541037bc0b30ac0b6d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089032-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a4901ff2-71f0-413f-9fad-b7547d08c94e",
          "line": "17",
          "column": "9",
          "confidence": "LOW",
          "file": "cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/dynamicCharacterOperations.c",
          "code": "        printf(\"Out of memory.\\n\");",
          "details": "If format strings can be influenced by an attacker, they can be exploited (CWE-134) Use a constant for the format specification Constant format string, so not considered risky.",
          "securityTool": "Flawfinder",
          "language": "C",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7f0b0b860b26e0b2f23201904d1adf6206ec4ce44717c6b85f31bce595e17a4f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08913-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1ef0b307-d21f-4927-a043-680626f1613c",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "node-forge",
          "details": "### Impact\nThe `forge.debug` API had a potential prototype pollution issue if called with untrusted input. The API was only used for internal debug purposes in a safe way and never documented or advertised.  It is suspected that uses of this API, if any exist, would likely not have used untrusted inputs in a vulnerable way.\n\n### Patches\nThe `forge.debug` API and related functions were removed in 1.0.0.\n\n### Workarounds\nDon't use the `forge.debug` API directly or indirectly with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/1-npm-node-forge/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge).\n* Email us at support@digitalbazaar.com.\nInstalled Version: \"0.10.0\", Update to Version: \"1.0.0\" for fix this issue.\nPrimaryURL: https://github.com/advisories/GHSA-5rrq-pxf6-6jx5.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "caa8bd0f26adf8bd9308961b6ae39727367de49d0aa61e29cde53d1555dcde7e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089131-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ea106236-52e4-4da2-8f6a-1e6c3865a722",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/client/yarn.lock",
          "code": "node-forge",
          "details": "### Impact\nThe regex used for the `forge.util.parseUrl` API would not properly parse certain inputs resulting in a parsed data structure that could lead to undesired behavior.\n\n### Patches\n`forge.util.parseUrl` and other very old related URL APIs were removed in 1.0.0 in favor of letting applications use the more modern WHATWG URL Standard API.\n\n### Workarounds\nEnsure code does not directly or indirectly call `forge.util.parseUrl` with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at support@digitalbazaar.com\n\nInstalled Version: \"0.10.0\", Update to Version: \"1.0.0\" for fix this issue.\nPrimaryURL: https://github.com/advisories/GHSA-gf8q-jrpm-jvxq.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "388813fc9aef8f904c5fbdcd9b2f0abbee4993e28a44e23ddaa1368dbda9faea"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089194-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9968df83-8cf7-4a1a-8391-ea72b8cc19bd",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "node-forge",
          "details": "### Impact\nThe `forge.debug` API had a potential prototype pollution issue if called with untrusted input. The API was only used for internal debug purposes in a safe way and never documented or advertised.  It is suspected that uses of this API, if any exist, would likely not have used untrusted inputs in a vulnerable way.\n\n### Patches\nThe `forge.debug` API and related functions were removed in 1.0.0.\n\n### Workarounds\nDon't use the `forge.debug` API directly or indirectly with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/1-npm-node-forge/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge).\n* Email us at support@digitalbazaar.com.\nInstalled Version: \"0.10.0\", Update to Version: \"1.0.0\" for fix this issue.\nPrimaryURL: https://github.com/advisories/GHSA-5rrq-pxf6-6jx5.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "ce3acaf94418d32e8a013936f1504e39d7f2feded453f9f82aee7d33c0385792"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089195-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6b0c8458-f942-4805-bc16-ad241d33b19a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/package-lock.json",
          "code": "node-forge",
          "details": "### Impact\nThe regex used for the `forge.util.parseUrl` API would not properly parse certain inputs resulting in a parsed data structure that could lead to undesired behavior.\n\n### Patches\n`forge.util.parseUrl` and other very old related URL APIs were removed in 1.0.0 in favor of letting applications use the more modern WHATWG URL Standard API.\n\n### Workarounds\nEnsure code does not directly or indirectly call `forge.util.parseUrl` with untrusted input.\n\n### References\n- https://www.huntr.dev/bounties/41852c50-3c6d-4703-8c55-4db27164a4ae/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https://github.com/digitalbazaar/forge)\n* Email us at support@digitalbazaar.com\n\nInstalled Version: \"0.10.0\", Update to Version: \"1.0.0\" for fix this issue.\nPrimaryURL: https://github.com/advisories/GHSA-gf8q-jrpm-jvxq.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "b3207e84b98cc503b0a8e54532657648a4ef485004acbc1cb3bba42274ec0273"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089206-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d045e744-c66b-4788-ad91-79ef9a5e991c",
          "line": "96",
          "column": "2",
          "confidence": "HIGH",
          "file": "bnpp-board/benjamin/monitoring-stack/mainsrv/handler.go",
          "code": "95: \n96: \tw.Write(body)\n97: \n",
          "details": "Errors unhandled.",
          "securityTool": "GoSec",
          "language": "Go",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "53185cc71e27ac184f88fa443fd9d525232bf7c0fdfc55b26eb3890560265e64"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089207-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9bb01f41-054b-4079-9ad8-096f21d7f903",
          "line": "51",
          "column": "4",
          "confidence": "HIGH",
          "file": "bnpp-board/benjamin/monitoring-stack/mainsrv/handler.go",
          "code": "50: \t\t} else if len(cacheFortune) \u003e 0 {\n51: \t\t\tw.Write(cacheFortune)\n52: \t\t\treturn\n",
          "details": "Errors unhandled.",
          "securityTool": "GoSec",
          "language": "Go",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ba675d72be71a5f30dbd20ba99fe6b240d5ae585d8e67fdf5265bb0750b60fc1"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089208-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "882bec61-7647-4079-bc31-531b1beb6aac",
          "line": "80",
          "column": "2",
          "confidence": "HIGH",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/handler.go",
          "code": "79: \tbtes, _ := json.Marshal(quote)\n80: \tw.Write(btes)\n81: \n",
          "details": "Errors unhandled.",
          "securityTool": "GoSec",
          "language": "Go",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fec1f04051b5c633e5b243f2123b0683fd0aeec0039b35b24640ea9271123c98"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089209-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0d2c0c62-f12b-4607-9d92-04a5a883edf3",
          "line": "65",
          "column": "4",
          "confidence": "HIGH",
          "file": "bnpp-board/benjamin/monitoring-stack/fortunesrv/handler.go",
          "code": "64: \t\t} else {\n65: \t\t\tresp.Body.Close()\n66: \t\t}\n",
          "details": "Errors unhandled.",
          "securityTool": "GoSec",
          "language": "Go",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c33794d1adc515880154ab5b3994134baf7e1d255403da33ef542e311a6d08cb"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08921-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d9318b0b-f35e-4bf8-b054-810394277cf8",
          "line": "162-198",
          "column": "2",
          "confidence": "HIGH",
          "file": "bnpp-board/benjamin/goproxy/ops.go",
          "code": "1: \n162: \tfilepath.Walk(source, func(path string, info os.FileInfo, err error) error {\n163: \t\tif err",
          "details": "Errors unhandled.",
          "securityTool": "GoSec",
          "language": "Go",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8fbfd53329f33326bf7da54762de774a45e5b3e26715037774c2606dfc969398"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089252-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fc958b68-6698-4e90-bf08-1596588ca9c7",
          "line": "4",
          "column": "0",
          "confidence": "HIGH",
          "file": "biofinder/tests/test_sample.py",
          "code": "3 def test_pass():\n4     assert True, \"dummy sample test\"\n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6b05a1294ef01f0cf96bf917c12f34b74422720685fb81b0033bbcb3a24e356e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089258-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c55a2ff2-7c43-4429-9836-922c06c84937",
          "line": "1",
          "column": "0",
          "confidence": "HIGH",
          "file": "biofinder_ml/components/trainPCA/trainPCA.py",
          "code": "1 import pickle\n2 from sklearn.decomposition import IncrementalPCA\n3 import pandas as pd\n",
          "details": "Consider possible security implications associated with pickle module.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c609efba591ffc4b012fd905c037bef05347e9ac224300caed8715a1b480e2dc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089266-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a1ff6651-5ce0-4e12-9ac2-7b24164a70ad",
          "line": "9",
          "column": "0",
          "confidence": "HIGH",
          "file": "biofinder_ml/components/transformPCA/transformPCA.py",
          "code": "8 import argparse\n9 import pickle\n10 \n11 def transformPCA(modeldir, inputdir, outputdir, chunksize_)",
          "details": "Consider possible security implications associated with pickle module.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "1f3bf39b9c3c44e9ba574a0f8222b7fea21bcf0fdd161b8cb02c32263b75b081"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089272-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ae5323e8-e211-4f8b-94cc-4bc066a3b736",
          "line": "9",
          "column": "0",
          "confidence": "HIGH",
          "file": "biofinder_ml/components/transformVAE/transformVAE.py",
          "code": "8 import argparse\n9 import pickle\n10 \n11 \n12 def transformVAE(modeldir, inputdir, outputdir, chunksi",
          "details": "Consider possible security implications associated with pickle module.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fd817f130fca72268d349bcdcb4e801fd76df7bc5fe6da64e745123437754b08"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089281-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c472ba88-d0e9-43cf-9bcd-e80159956e59",
          "line": "23",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/lib/database/datalake_extract.py",
          "code": "22 \n23 cfg = DatalakeConfig.load(PASSWORD=\"mypass\", yaml_file=\"conf.yaml\")\n24 dlake = Datalake(cfg)\n",
          "details": "Possible hardcoded password: 'mypass'",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "24a54ceb26f19b750c440ea9a88fbbfc5a2383571ba4bf45fb403cea31f91d25"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089282-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0751e889-1c22-4eba-a619-c5aa89925258",
          "line": "9",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/lib/database/datalake_ingest_recount2.py",
          "code": "8 \n9 cfg = DatalakeConfig.load(PASSWORD=\"mypass\", yaml_file=\"conf.yaml\")\n10 dlake = Datalake(cfg)\n",
          "details": "Possible hardcoded password: 'mypass'",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fb46e3b97adc89e335f92443c7b123b3ed7c3f1cc21d3a2babe37ee344b1f710"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089283-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "80f80af4-f691-40bc-a29d-5908703fe5a5",
          "line": "2",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "biofinder_ml/lib/database/datalake_query.py",
          "code": "1 from PyDatalake import *\n2 cfg = DatalakeConfig.load(PASSWORD=\"mypass\", yaml_file=\"conf.yaml\")\n3 d",
          "details": "Possible hardcoded password: 'mypass'",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "eb04f20c14413294f22b4fe556f21da427529d56f5fc3a7ca7db5e16eef996b8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089289-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "11984eba-18d5-4fe7-bd7f-9dba1092437f",
          "line": "23",
          "column": "0",
          "confidence": "HIGH",
          "file": "cabal/bootstrap/bootstrap.py",
          "code": "22 import shutil\n23 import subprocess\n24 from textwrap import dedent\n",
          "details": "Consider possible security implications associated with subprocess module.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8132fc02c57edb558e745ff0cbbdf25b4301df3bcb36ad37bac252f2d768fdd7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089292-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e516cbe0-b62f-4f5d-b245-f9f7fba87ac5",
          "line": "143",
          "column": "0",
          "confidence": "HIGH",
          "file": "cabal/bootstrap/bootstrap.py",
          "code": "142     if revision is not None and not cabal_file.exists():\n143         assert cabal_sha256 is not ",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e31730b4f95197070ec40ed31efff56feb21f4b56ae901e98e85c23e273721ee"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089294-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "234687b1-2c30-47f3-bf1b-affd782bb4f5",
          "line": "176",
          "column": "0",
          "confidence": "HIGH",
          "file": "cabal/bootstrap/bootstrap.py",
          "code": "175     if dep.source == PackageSource.HACKAGE:\n176         assert dep.src_sha256 is not None\n177   ",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b9a26a4372b20e9cb7a1f1a4e6b01531520500967b5130033de30bc5b17b9608"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089295-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8843ec76-a941-48cb-9579-e16e85d1a916",
          "line": "301",
          "column": "0",
          "confidence": "HIGH",
          "file": "cabal/bootstrap/bootstrap.py",
          "code": "300                     return f'alpine-{alpinever}'\n301             except:\n302                 pas",
          "details": "Try, Except, Pass detected.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "884211fe52f5ad4484258215247c75554b3d8c01f8df533990993fcb6390220b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089296-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3361f8c7-a4ac-4e94-b159-a834462ec517",
          "line": "396",
          "column": "0",
          "confidence": "HIGH",
          "file": "cabal/bootstrap/bootstrap.py",
          "code": "395 \n396     return subprocess.run(args, **kwargs)\n397 \n",
          "details": "subprocess call - check for execution of untrusted input.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e8cbc4762c377693f18c9bb1fbf910a71617056c4a3176ce04270fe056f2a206"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089297-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e6589c88-4b6d-4ac5-94d2-d5f92ee2747a",
          "line": "679",
          "column": "0",
          "confidence": "HIGH",
          "file": "cabal/doc/cabaldomain.py",
          "code": "678 \n679                 assert len(entries) != 0\n680                 docname = entries[0].doc\n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8e2203d001348e4dcfe18f874c955a23f0522891a6d3808a9eb1bf7295ace8bf"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089298-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "33b34293-3902-424c-89bc-fc2d17b05bb6",
          "line": "50",
          "column": "0",
          "confidence": "HIGH",
          "file": "cealogs/notebooks/Auto-encoders+for+anomaly+detection.py",
          "code": "49 def random_generator(size=25, chars=string.ascii_lowercase + string.digits + ' '):\n50     return ",
          "details": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "429f6d8ed1763047cfddcd3f233b37a5bf1f18f81bc5f0e105ed5bb5aa191916"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089299-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1ff61996-7166-4db5-a57d-3ac8f0213a13",
          "line": "65",
          "column": "0",
          "confidence": "HIGH",
          "file": "cealogs/notebooks/Auto-encoders+for+anomaly+detection.py",
          "code": "64     for i in range(n_outliers):\n65         start_pattern = random.choice(patterns)\n66         wor",
          "details": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "868ab4b429ed721344582c0e6e233b330fd388765c37f43814f507ec82bff560"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.0893-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "be5cbdab-691d-47a8-8f2d-f5edcac4e9c7",
          "line": "68",
          "column": "0",
          "confidence": "HIGH",
          "file": "cealogs/notebooks/Auto-encoders+for+anomaly+detection.py",
          "code": "67         for i in range(3):\n68             start_pattern = start_pattern.replace(random.choice(wor",
          "details": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "343d2c9629aee866c9b8efcb032170402d0b079c5597371080a6fbe2b2523369"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089301-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8f5e35f3-34b6-496b-87b0-8f0329ad7722",
          "line": "68",
          "column": "0",
          "confidence": "HIGH",
          "file": "cealogs/notebooks/Auto-encoders+for+anomaly+detection.py",
          "code": "67         for i in range(3):\n68             start_pattern = start_pattern.replace(random.choice(wor",
          "details": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "343d2c9629aee866c9b8efcb032170402d0b079c5597371080a6fbe2b2523369"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089305-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fc6b8681-12e6-48ee-a1e3-658ecd0efed9",
          "line": "4",
          "column": "0",
          "confidence": "HIGH",
          "file": "cealogs/tests/test_sample.py",
          "code": "3 def test_pass():\n4     assert True, \"dummy sample test\"\n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2b289e4d24ec6b153fbc2940353d52e5c756649162830138208327183fb8cdc0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089306-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7415096d-405e-4498-8f11-0adcf7dca5ea",
          "line": "12",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/controller/chainsail/controller/test/test_initial_schedules.py",
          "code": "11     expected = {\"beta\": 0.1 ** np.arange(n_temps)}\n12     assert np.allclose(result[\"beta\"], expe",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "461bee8d750a1b7e6f4d31ccc24185690629a0bc1619dfb0c2a1493805f693a7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089313-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "94b28dd9-e585-4a70-9109-85b547398ae8",
          "line": "28",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_k8s.py",
          "code": "27     )\n28     scheduler_config = SchedulerConfig(\n29         controller=config,\n30         worker=",
          "details": "Possible hardcoded password: 'secret'",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "3a92e47a3108fa9b6b7f2817f5704122704dfc8dd798d26a629984781f161f6f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089314-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a8983510-31f4-495e-92b2-248d676fc408",
          "line": "65",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_k8s.py",
          "code": "64     # This method should bind node_rep to the new node\n65     assert node.representation\n66 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e298045bf2adf7716e4a44f99ea81e7cc01a16f0e199ea41d8a8dfd43688ef5f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089315-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1cd133b4-3b35-4889-9108-fba8dca1e481",
          "line": "76",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_k8s.py",
          "code": "75     node = K8sNode.from_config(\"dummy-1\", mock_scheduler_config, job_spec, job_rep=TblJobs(id=1))",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e8d82e390424f59fe03d7f7e6e77cd26da3af7404ce896694f4e45f5269672b3"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089316-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "610c2ed8-123a-4fe0-8d41-24b9653e09ae",
          "line": "77",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_k8s.py",
          "code": "76     assert node.representation\n77     assert node.representation.job.id == 1\n78 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0ff4f0975bd3c2876c6205f80b856105607986f9d8e6899b38f640c3027ded88"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089317-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fcc8cfa5-21bd-4f1d-919b-1e545e59865c",
          "line": "110",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_k8s.py",
          "code": "109     mock_monitor_deployment.assert_called_once()\n110     assert is_created\n111     assert node.s",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "14f0facaf177cf5468e67d088e2b6b0f5ad1b100e7b24c4e7770135987439d85"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089318-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b72d5536-8035-4736-aa92-08acf91cdc3b",
          "line": "111",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_k8s.py",
          "code": "110     assert is_created\n111     assert node.status == NodeStatus.RUNNING\n112 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9efe2bf1c4ca4f594c75560b3c0f694f41e2cf6b3a6e7e6ff2930608275e5d68"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08932-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "cabbde7c-d954-4d2b-bce8-4db9870c81f0",
          "line": "149",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_k8s.py",
          "code": "148     # Check that all operations succeeded\n149     assert all([is_created, is_restarted, is_delet",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "5dc970a61f4a1423a0f2215b64df4417edf0800968a8744fdd851a88f2c83e5e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089321-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "af8ca656-6b32-4e76-9957-da54b7aec44d",
          "line": "151",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_k8s.py",
          "code": "150     # If so, the following statuses should have been observed:\n151     assert statuses == [\n152 ",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "92ae5505d233616b6aa7dd67654bc972251bc549ffb93b7a1ae31f8d4bf4ad50"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089322-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "37d3a8c8-4778-4697-8426-62b17bb57bb0",
          "line": "32",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_vm.py",
          "code": "31     )\n32     scheduler_config = SchedulerConfig(\n33         controller=config,\n34         worker=",
          "details": "Possible hardcoded password: 'secret'",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "d4429ffe7266a1beab437e93d0873651e80d039e805329845db1df3d65d09a0a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089323-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "145af8f4-242e-4ae9-97f4-064c37680e4e",
          "line": "69",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_vm.py",
          "code": "68     # This method should bind node_rep to the new node\n69     assert node.representation\n70 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "94248c15e38cb45e6d008a4f6f17b033451de2dfa984337123614fd542d62ab5"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089324-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fba453f4-e519-4e6c-9932-00b37a4d041f",
          "line": "80",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_vm.py",
          "code": "79     node = VMNode.from_config(\"dummy-1\", mock_scheduler_config, job_spec, job_rep=TblJobs(id=1))\n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "3faa5c62ef59d9c2b46d1a704516c1bb628bbf057dc6dd82a18a6ab664a043e7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089325-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f5a80ead-7507-45b5-a79f-a26a783d6dd9",
          "line": "81",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_vm.py",
          "code": "80     assert node.representation\n81     assert node.representation.job.id == 1\n82 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2f3e3f2ec648b902337474d15ccfeb273c444480f54c4064596b5c6cb03aea9b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089327-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "de8e5035-cec1-40a1-9afd-859c113bd745",
          "line": "136",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_vm.py",
          "code": "135     mock_prepare_deployment.assert_called_once()\n136     assert is_created\n137     assert node.s",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "eaf9101e5fd4366af92c2cb8bb8e7daa3caa42a27f3cc0372a9f7e50dfb4ce93"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089328-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1ed5497e-b10b-45c4-b038-65cec24d39ff",
          "line": "137",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_vm.py",
          "code": "136     assert is_created\n137     assert node.status == NodeStatus.RUNNING\n138 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ad7bb5a6478f3d09bbbba2a76303f658b7ba992bcd78d1b4f28ea87554942848"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089329-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6d0dbda2-9835-4df8-bf32-a53071f0045b",
          "line": "167",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_vm.py",
          "code": "166     # Check that all operations succeeded\n167     assert all([is_created, is_restarted, is_delet",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ac2d1ec1bfcf1bf55ea62496ed3b1cae3fc79dbfcc0bcd9c51d2d4fed8e2f2f1"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08933-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c6611be8-5c97-4bf8-b776-c8d98c022e3f",
          "line": "169",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/nodes/test/test_vm.py",
          "code": "168     # If so, the following statuses should have been observed:\n169     assert statuses == [\n170 ",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8475966ca674a90b7a009193f02c46615f7aa6b446c727f213992c4857770a43"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089331-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d7a7267f-c797-42f8-9673-3ae4ea9a4107",
          "line": "104",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "103 def mock_config():\n104     config = SchedulerConfig(\n105         controller=GeneralNodeConfig(\n1",
          "details": "Possible hardcoded password: 'secret'",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "872264a127bb5f02c7b46f1010728625514fe150ac619addd72532a3c140383e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089332-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9972adc5-a0d7-4c13-933e-d387cfc7ca30",
          "line": "161",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "160     )\n161     assert job.status == JobStatus.INITIALIZED\n162     assert not job.nodes\n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "78893f6c4a81a09e0942f20781e591ed1370a813fe457389432c22548af876c1"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089333-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "35a86526-4293-4597-a16f-8dbae3a9a0b9",
          "line": "162",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "161     assert job.status == JobStatus.INITIALIZED\n162     assert not job.nodes\n163 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "48639f5b731c90ff549a152eddfa6071761be022b481a72583ef4fc3a6a8cf4e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089334-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2174564e-e6b4-4c09-a786-a346d0e4fe3e",
          "line": "175",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "174     job.start()\n175     assert job.status == JobStatus.RUNNING\n176     assert all([n.status == N",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "083a344d05321e572ca6526fcb743fbf7144887ea3788f20fe7e6852cb115a7a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089335-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "97067431-2716-49bf-ac96-50c9ef2f21a1",
          "line": "176",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "175     assert job.status == JobStatus.RUNNING\n176     assert all([n.status == NodeStatus.RUNNING fo",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "3e26c8083de280c243e90bac9e7f38c22fa905e4f98cb6c3499b4517fc485061"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089337-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ee8389b1-75b2-41ca-8725-b5d7fa382db5",
          "line": "192",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "191 \n192     assert job.status == JobStatus.STOPPED\n193     assert not job.nodes\n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a060e92cfd8e543a979efd91d4b85842bb0fcd8103a86c6dd06d38c7740cd535"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089338-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "facf6fb1-8f67-41e0-ae5a-34407001a1ca",
          "line": "193",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "192     assert job.status == JobStatus.STOPPED\n193     assert not job.nodes\n194 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "374a817471686206ccfbb7780bda109abaf0d0f5c93bca252ec8ffaca57d10cc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089339-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8312c08c-7322-4bfa-890e-e032a98ba0b0",
          "line": "209",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "208 \n209     assert job.status == JobStatus.RUNNING\n210     assert all([n.status == NodeStatus.RUNNI",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "5eda45db28d9176f1ede16e7c3664cec8dcf140ff5c6ce5fde26f879c14349d4"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08934-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c6f972cc-30b3-45b7-bd5d-1e5fa39b3ef9",
          "line": "210",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "209     assert job.status == JobStatus.RUNNING\n210     assert all([n.status == NodeStatus.RUNNING fo",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "bc3ea0995672392acaf6768f5bd15385b61bf3fa4f51e3a1a885c1fdb84118e6"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089341-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5ca70b42-70d8-4d6f-9a6b-05e1e8836e5c",
          "line": "227",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "226 \n227     assert job.status == JobStatus.RUNNING\n228     assert all([n.status == NodeStatus.RUNNI",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "c7c7c79d1f84c41b34ed1524f0ef2d7449802102bb829c56e91c23b37a897c53"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089342-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5a0af034-6674-493a-9539-7536497f0085",
          "line": "228",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "227     assert job.status == JobStatus.RUNNING\n228     assert all([n.status == NodeStatus.RUNNING fo",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "1b09bde05dcbba6f25e48f39f646c9fe896c894f29bec52afeca290a9755c914"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089343-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bb5e3282-caf1-4081-bf7f-8d943138bb9f",
          "line": "243",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "242 \n243     assert job.status == JobStatus.RUNNING\n244     assert len(job.nodes) == 8\n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "61161cd2e72be393aa4d8f4cfb54b8d6d7952a1244a0b17003e3aa0db9fa66cc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089345-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f8b063bd-31b5-43bf-b07d-47b6445231b8",
          "line": "244",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "243     assert job.status == JobStatus.RUNNING\n244     assert len(job.nodes) == 8\n245     assert all",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "48d37eb13151fcc41249f0c453cfded6f01c806fded323643251975f21c82cdf"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089346-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "08198ddf-6e42-4c5d-94f1-ae1ca125acd8",
          "line": "245",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "244     assert len(job.nodes) == 8\n245     assert all([n.status == NodeStatus.RUNNING for n in job.n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "39f1549b7d77312c85c66ff30f7d64c9f71443420b2a3638837e4d6c477cc7c1"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089347-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5def2ec1-931b-49d4-8e74-8eb226f55635",
          "line": "261",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "260 \n261     assert job.status == JobStatus.RUNNING\n262     # One extra node for the control process",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "129dacde05e94b7d55c4a3d78da566e76f7dbb25c7b95811999bbe063fb3b778"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089348-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4c403237-3170-4c75-97b4-030618b95845",
          "line": "263",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "262     # One extra node for the control process\n263     assert len(job.nodes) == 1\n264     assert a",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "5bdf4dc6c78017a31c66b6df2d11520d9c28ca82a12129ce8c020092abcc9ec7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089349-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "de8ef4c4-0482-4c34-9598-fac907287798",
          "line": "264",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "263     assert len(job.nodes) == 1\n264     assert all([n.status == NodeStatus.RUNNING for n in job.n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "58b5c829e1ae3751270eef9cbb1aa466d7e53d26206aaa5766459eb33e96d0d0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08935-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9ee38bcc-8811-495b-b71b-4498d62a2c57",
          "line": "305",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "304     job = Job.from_representation(job_rep, mock_config)\n305     assert job.representation\n306   ",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "2a24a1ff90f97f3481edbd44eb37150fc597cdfa1feca00dae4429c51e9c24a7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089351-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0039c283-1b83-42d9-8ee4-a29b6df91339",
          "line": "306",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "305     assert job.representation\n306     assert all([node.representation is not None for node in jo",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9e36db917ffd9be34d64151b1ac8cf924bf3547fe4c71cb8f67d6d71f7040d2c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089352-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0eedf01e-8c49-45d9-895c-cfbb5e84c424",
          "line": "307",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "306     assert all([node.representation is not None for node in job.nodes])\n307     assert job.contr",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0512fd9d93234543fdfdf0c26525d3865ddfcf0373874fc2b8ce2d7ef2111ba2"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089354-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "24f6ca1b-52d3-425c-9085-d8138ac81bed",
          "line": "334",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/app/scheduler/chainsail/scheduler/test/test_jobs.py",
          "code": "333 \n334     assert job.status == JobStatus.STOPPED\n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "05c45a615fd61f4a37c08ecd38eb2af301c0f42fad3f80204d93e11fd194a725"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089356-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1584a126-a5b2-4f99-957e-90ff30b543be",
          "line": "10",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/storage.py",
          "code": "9 from io import BytesIO, StringIO\n10 from pickle import dump, load\n11 \n12 import numpy as np\n",
          "details": "Consider possible security implications associated with dump module.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "8ea15b45e00f9bbc69530c71735b899054c579bf726460e9a5d76bd3a38685e9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089359-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "661a519a-4b68-4a69-b8fa-a0c350aa987f",
          "line": "37",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_hmc.py",
          "code": "36     expected_q = p0 * np.sin(t_final) + q0 * np.cos(t_final)\n37     assert np.isclose(result_q[0]",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b1bdb5630f423920b20237dbb557277acae7c2764a3df6dd4a76dddd071fa9e1"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08936-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c93074eb-7d1c-4a81-8589-cc71d922dc8c",
          "line": "39",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_hmc.py",
          "code": "38     expected_p = p0 * np.cos(t_final) - q0 * np.sin(t_final)\n39     assert np.isclose(result_p[0]",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "18dd60b91001e211947b2248e47cd99bdf27d3dc3c838969e8b052568a787a74"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089361-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5c50d05e-8f63-43b2-84dc-3832ccd29acf",
          "line": "11",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_spec.py",
          "code": "10 \n11     assert dep_1 == dep_2\n12 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "156be97b28bb18bc30048dc999759260a45f03658dab6024b74b32ac373bdfd8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089363-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "714a7608-d9ba-4d14-84b4-78fef759c987",
          "line": "20",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_spec.py",
          "code": "19 \n20     assert not (dep_1 == dep_2)\n21 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a091376be867bb2285a3d655336363dece489ed26c32ad18e21461cb142141e6"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089364-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3f800eca-6fe3-4559-b8dd-6be8ea2bd8f7",
          "line": "29",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_spec.py",
          "code": "28 \n29     assert spec_1 == spec_2\n30 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "5b67aa41d7f037b7a92a9a60e3e2fd6d6a7ddda25bde2d7bda13c2bda2034a61"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089365-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "81592241-847e-4483-b3e4-5a7106a17bbe",
          "line": "38",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_spec.py",
          "code": "37 \n38     assert not (spec_1 == spec_2)\n39 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "85f2f656672f0b2be1a7b3643241b3e1d6b406b58467eb06dedd7b018455677f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089366-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "28bab5c4-31e7-4ca9-8a8e-62cd5dbb878b",
          "line": "92",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_spec.py",
          "code": "91     spec = schema.loads(data)\n92     assert spec.dependencies == []\n93 \n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "898425ce67a13a0cff56924444601939626ccac23a155534bdf0b914436b864d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089367-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5584fd70-77ab-4f7e-9758-3029620dfc04",
          "line": "132",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_spec.py",
          "code": "131     spec_2 = schema.loads(schema.dumps(spec_1))\n132     assert spec_1 == spec_2\n",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e6296320ccabf59cd05399ce81ea069e0d1a51385eee18bece6958ba785054a3"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089368-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f797e4ef-0dfa-48a2-8c1a-e8bf2bb3e588",
          "line": "3",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/common/chainsail/common/test/test_storage.py",
          "code": "2 import unittest\n3 from pickle import dump, load\n4 from tempfile import TemporaryDirectory\n",
          "details": "Consider possible security implications associated with dump module.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "7c990bea7c776f412fe4ccf8b127555e0ed7fd423d65f1e53a8f5f22d30f4c99"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089372-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "aac7dfb5-5f7f-48ca-9451-30d16e6d0907",
          "line": "5",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/runners/rexfw/chainsail/runners/rexfw/__init__.py",
          "code": "4 import logging\n5 import subprocess\n6 import time\n",
          "details": "Consider possible security implications associated with subprocess module.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "50f7264bd300de84ae5487adb44f34119c009764dccfbbbd0b9acc6ca180042e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089373-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c7bfae2f-ed31-4654-8e70-06c0afd62921",
          "line": "79",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/runners/rexfw/chainsail/runners/rexfw/__init__.py",
          "code": "78         # redirect them to the parent's process stdout\n79         process = subprocess.Popen(cmd,",
          "details": "subprocess call - check for execution of untrusted input.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "1aff1875a1ca7a850e19ede733b930d571c6ef18305df072ff6b3c73fc777278"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089374-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7b103b49-fe59-473c-93e7-5fb6e7849251",
          "line": "42",
          "column": "0",
          "confidence": "HIGH",
          "file": "chainsail/lib/schedule_estimation/chainsail/schedule_estimation/test/test_dos_estimators.py",
          "code": "41         cutoff = 20\n42         assert np.allclose(expected_log_dos[:cutoff], rebinned_log_dos[:cu",
          "details": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
          "securityTool": "Bandit",
          "language": "Python",
          "severity": "LOW",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "839df91b317a1ff2dea2b13c8051c483cc12e703aa844f67945e5c32bb219ff9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089045-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bf2bd290-557c-4c2b-856b-06574e110e95",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "chrono",
          "details": "Unix-like operating systems may segfault due to dereferencing a dangling pointer in specific circumstances. This requires an environment variable to be set in a different thread than the affected functions. This may occur without the user's knowledge, notably in a third-party library.\n\n\nNo workarounds are known.\n\n\n- [time-rs/time#293](https://github.com/time-rs/time/issues/293)\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0159.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8498d5a9ab1bba45401edc4fc5fa89278906b4f704817c9c64a21e131b46a60d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089046-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "02e40c26-0315-45c2-90f8-85b10f73c97f",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "crossbeam-channel",
          "details": "Affected versions of this crate called `mem::zeroed()` to create values of a user-supplied type `T`.\nThis is unsound e.g. if `T` is a reference type (which must be non-null).\n \nThe flaw was corrected by avoiding the use of `mem::zeroed()`, using `MaybeUninit` instead.\nInstalled Version: \"0.4.2\", Update to Version: \"\u003e= 0.4.3\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2022-0019.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "f0206014382c7140075292b1b92c4f6b56e62d9ec1aa080508e99c93d67870c8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089047-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "080c63dc-9bd2-40f6-8e46-671925627dd1",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "crossbeam-deque",
          "details": "In the affected version of this crate, the result of the race condition is that one or more tasks in the worker queue can be popped twice instead of other tasks that are forgotten and never popped. If tasks are allocated on the heap, this can cause double free and a memory leak. If not, this still can cause a logical bug.\n\nCrates using `Stealer::steal`, `Stealer::steal_batch`, or `Stealer::steal_batch_and_pop` are affected by this issue.\n\nCredits to @kmaork for discovering, reporting and fixing the bug.\nInstalled Version: \"0.7.3\", Update to Version: \"\u003e= 0.7.4, \u003c 0.8.0, \u003e= 0.8.1\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0093.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "ea87e3ba73ff9b95b84c622b8ce902f000eb593c80a5c718eb38c306989a5a1c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089048-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3ffa99f0-20b4-404d-8565-ed870c028552",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "futures-task",
          "details": "Affected versions of the crate did not properly implement a `'static` lifetime bound on the `waker` function.\nThis resulted in a use-after-free if `Waker::wake()` is called after original data had been dropped.\n\nThe flaw was corrected by adding `'static` lifetime bound to the data `waker` takes.\nInstalled Version: \"0.3.4\", Update to Version: \"\u003e= 0.3.6\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0060.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "813718852129ebc3b682fff898549dc42e9ffc556f367255afa1633fd14819eb"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089049-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e39179e1-0945-4430-9048-fdaaf11ed47a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "futures-task",
          "details": "Affected versions of the crate used a `UnsafeCell` in thread-local storage to return a noop waker reference,\nassuming that the reference would never be returned from another thread.\n\nThis resulted in a segmentation fault crash if `Waker::wake_by_ref()` was called on a waker returned from another thread due to \nit attempting to dereference a pointer that wasn't accessible from the main thread.\n\nReproduction Example (from issue):\nuse futures_task::noop_waker_ref;\nfn main() {\n    let waker = std::thread::spawn(|| noop_waker_ref()).join().unwrap();\n    waker.wake_by_ref();\n}\n\nThe flaw was corrected by using a `OnceCell::Lazy\u003c\u003e` wrapper around the noop waker instead of thread-local storage.\nInstalled Version: \"0.3.4\", Update to Version: \"\u003e= 0.3.5\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0061.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "a8e863519f8b3e969ecf4a2c59ded37dd21fdc2fb2981b14ada92f3d7494df55"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08905-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fe8e9ab6-da9b-4544-9f63-eafe0a3b5ea0",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "futures-util",
          "details": "Affected versions of the crate had a Send/Sync implementation for MappedMutexGuard that only considered variance on T, while MappedMutexGuard dereferenced to U.\n\nThis could of led to data races in safe Rust code when a closure used in MutexGuard::map() returns U that is unrelated to T.\n\nThe issue was fixed by fixing `Send` and `Sync` implementations, and by adding a `PhantomData\u003c\u0026'a mut U\u003e` marker to the `MappedMutexGuard` type to tell the compiler that the guard is over\nU too.\nInstalled Version: \"0.3.4\", Update to Version: \"\u003e= 0.3.7\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0059.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "cafeb159dcda7db6c63d7bc401f5baedcd1a400374b18d5c8b8d03e7b00732d7"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089052-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c2575198-60d5-438d-bcbd-01ef52dcfc73",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "lock_api",
          "details": "Affected versions of lock_api had unsound implementations of the `Send` or\n`Sync` traits for some guard objects, namely:\n\n* MappedMutexGuard\n* MappedRwLockReadGuard\n* MappedRwLockWriteGuard\n* RwLockReadGuard\n* RwLockWriteGuard\n\nThese guards could allow data races through types that are not safe to `Send`\nacross thread boundaries in safe Rust code.\n\nThis issue was fixed by changing the trait bounds on the `Mapped` guard types\nand removing the `Sync` trait for the `RwLock` guards.\nInstalled Version: \"0.3.4\", Update to Version: \"\u003e= 0.4.2\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0070.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "c078cc78dd5718d0faa797000c498dc206c943cd7fc3a1910c55fa4f25ad674a"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089053-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9e8307eb-9666-4977-abf6-8c7f9c15b066",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "miow",
          "details": "The [`miow`](https://crates.io/crates/miow) crate has assumed `std::net::SocketAddrV4`\nand `std::net::SocketAddrV6` have the same memory layout as the system C representation\n`sockaddr`. It has simply casted the pointers to convert the socket addresses to the\nsystem representation. The standard library does not say anything about the memory\nlayout, and this will cause invalid memory access if the standard library\nchanges the implementation. No warnings or errors will be emitted once the\nchange happens.\nInstalled Version: \"0.2.1\", Update to Version: \"^ 0.2.2, \u003e= 0.3.6\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0080.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "c918bfeb8632a2fc3d08b84277ec7fa6bf7e080449237d31ecc3a99da41c8654"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089054-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "08b28d9f-1764-4928-9cc5-7a77e97cf5a1",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "net2",
          "details": "The [`net2`](https://crates.io/crates/net2) crate has been deprecated\nand users are encouraged to considered [`socket2`](https://crates.io/crates/socket2) instead.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0016.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "1f32fe021c1af40826a1c552a88f40d7d433e44594aae80a8e5983fb9e7a6723"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089055-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ad83a46d-4c84-4ff1-95a6-633b6d7c91c8",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "net2",
          "details": "The [`net2`](https://crates.io/crates/net2) crate has assumed `std::net::SocketAddrV4`\nand `std::net::SocketAddrV6` have the same memory layout as the system C representation\n`sockaddr`. It has simply casted the pointers to convert the socket addresses to the\nsystem representation. The standard library does not say anything about the memory\nlayout, and this will cause invalid memory access if the standard library\nchanges the implementation. No warnings or errors will be emitted once the\nchange happens.\nInstalled Version: \"0.2.33\", Update to Version: \"\u003e= 0.2.36\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0078.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "4aefeb197f1f8d1564b18651322313838c59812cb7490f4561594a4d31ec1fca"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089056-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "831a1dd3-0e4c-4437-b61e-8397ff2b2ede",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "ordered-float",
          "details": "After using an assignment operators such as `NotNan::add_assign`, `NotNan::mul_assign`, etc., it was possible for the resulting `NotNan` value to contain a `NaN`.  This could cause undefined behavior in safe code, because the safe `NotNan::cmp` method contains internal unsafe code that assumes the value is never `NaN`.  (It could also cause undefined behavior in third-party unsafe code that makes the same assumption, as well as logic errors in safe code.)\n\nThis was mitigated starting in version 0.4.0, by panicking if the assigned value is NaN.  However, in affected versions from 0.4.0 onward, code that uses the `NotNan` value during unwinding, or that continues after catching the panic, could still observe the invalid value and trigger undefined behavior.\n\nThe flaw is fully corrected in versions 1.1.1 and 2.0.1, by ensuring that the assignment operators panic without modifying the operand, if the result would be `NaN`.\nInstalled Version: \"1.0.2\", Update to Version: \"^1.1.1, \u003e= 2.0.1\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0082.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "27858e98e819c04489b44feebaa04a3f945713c9f1f786c055b25c073bc5a979"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089058-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ec0e1c81-ed57-4067-bd39-fbd81cbef5a9",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "regex",
          "details": "The Rust Security Response WG was notified that the `regex` crate did not\nproperly limit the complexity of the regular expressions (regex) it parses. An\nattacker could use this security issue to perform a denial of service, by\nsending a specially crafted regex to a service accepting untrusted regexes. No\nknown vulnerability is present when parsing untrusted input with trusted\nregexes.\n\nThis issue has been assigned CVE-2022-24713. The severity of this vulnerability\nis \"high\" when the `regex` crate is used to parse untrusted regexes. Other uses\nof the `regex` crate are not affected by this vulnerability.\n\n\nThe `regex` crate features built-in mitigations to prevent denial of service\nattacks caused by untrusted regexes, or untrusted input matched by trusted\nregexes. Those (tunable) mitigations already provide sane defaults to prevent\nattacks. This guarantee is documented and it's considered part of the crate's\nAPI.\n\nUnfortunately a bug was discovered in the mitigations designed to prevent\nuntrusted regexes to take an arbitrary amount of time during parsing, and it's\npossible to craft regexes that bypass such mitigations. This makes it possible\nto perform denial of service attacks by sending specially crafted regexes to\nservices accepting user-controlled, untrusted regexes.\n\n\nAll versions of the `regex` crate before or equal to 1.5.4 are affected by this\nissue. The fix is include starting from  `regex` 1.5.5.\n\n\nWe recommend everyone accepting user-controlled regexes to upgrade immediately\nto the latest version of the `regex` crate.\n\nUnfortunately there is no fixed set of problematic regexes, as there are\npractically infinite regexes that could be crafted to exploit this\nvulnerability. Because of this, we do not recommend denying known problematic\nregexes.\n\n\nWe want to thank Addison Crump for responsibly disclosing this to us according\nto the [Rust security policy][1], and for helping review the fix.\n\nWe also want to thank Andrew Gallant for developing the fix, and Pietro Albini\nfor coordinating the disclosure and writing this advisory.\n\n[1]: https://www.rust-lang.org/policies/security\nInstalled Version: \"1.3.6\", Update to Version: \"\u003e= 1.5.5\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2022-0013.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "97a7c98b61ef2c93b3608062b71298dd044eed2fb0facdfccafdb397885342ff"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089059-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "63e73581-7e2f-475a-86b0-c0b6ff6e5b0f",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "smallvec",
          "details": "A bug in the `SmallVec::insert_many` method caused it to allocate a buffer that was smaller than needed.  It then wrote past the end of the buffer, causing a buffer overflow and memory corruption on the heap.\n\nThis bug was only triggered if the iterator passed to `insert_many` yielded more items than the lower bound returned from its `size_hint` method.\n \nThe flaw was corrected in smallvec 0.6.14 and 1.6.1, by ensuring that additional space is always reserved for each item inserted.  The fix also simplified the implementation of `insert_many` to use less unsafe code, so it is easier to verify its correctness.\n\nThank you to Yechan Bae (@Qwaz) and the Rust group at Georgia Tech’s SSLab for finding and reporting this bug.\nInstalled Version: \"1.3.0\", Update to Version: \"\u003e= 0.6.14, \u003c 1.0.0, \u003e= 1.6.1\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0003.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "486ef07da80b13c150146d9acdc62c25b39fb277c64044f49b3cbe6e283568df"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08906-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "592bc111-b928-4faa-8309-3c7d22c5e0b1",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "thread_local",
          "details": "In the affected version of this crate, `{Iter, IterMut}::next` used a weaker memory ordering when loading values than what was required, exposing a potential data race\nwhen iterating over a `ThreadLocal`'s values.\n\nCrates using `Iter::next`, or `IterMut::next` are affected by this issue.\nInstalled Version: \"1.0.1\", Update to Version: \"\u003e= 1.1.4\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2022-0006.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "fb707a01fc4c00d15cb85c6bafff8d30af867f1b396135399619ab283deaed74"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089061-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "16fc6547-169b-4ddc-8cf5-6bd15b58beb4",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/generate_traces/Cargo.lock",
          "code": "time",
          "details": "Unix-like operating systems may segfault due to dereferencing a dangling pointer in specific circumstances. This requires an environment variable to be set in a different thread than the affected functions. This may occur without the user's knowledge, notably in a third-party library.\n\nThe affected functions from time 0.2.7 through 0.2.22 are:\n\n- `time::UtcOffset::local_offset_at`\n- `time::UtcOffset::try_local_offset_at`\n- `time::UtcOffset::current_local_offset`\n- `time::UtcOffset::try_current_local_offset`\n- `time::OffsetDateTime::now_local`\n- `time::OffsetDateTime::try_now_local`\n\nThe affected functions in time 0.1 (all versions) are:\n\n- `at`\n- `at_utc`\n- `now`\n\nNon-Unix targets (including Windows and wasm) are unaffected.\n\n\nPending a proper fix, the internal method that determines the local offset has been modified to always return `None` on the affected operating systems. This has the effect of returning an `Err` on the `try_*` methods and `UTC` on the non-`try_*` methods.\n\nUsers and library authors with time in their dependency tree should perform `cargo update`, which will pull in the updated, unaffected code.\n\nUsers of time 0.1 do not have a patch and should upgrade to an unaffected version: time 0.2.23 or greater or the 0.3 series.\n\n\nNo workarounds are known.\n\n\ntime-rs/time#293\nInstalled Version: \"0.1.42\", Update to Version: \"\u003e= 0.2.23\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0071.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "2bf35dc2a06cebbc3beff2d40b703c423fe5fd09fae011bf5d4178736e6bec88"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089069-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0e92ca61-efc2-49d8-b24e-4ee9c4daa773",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "chrono",
          "details": "Unix-like operating systems may segfault due to dereferencing a dangling pointer in specific circumstances. This requires an environment variable to be set in a different thread than the affected functions. This may occur without the user's knowledge, notably in a third-party library.\n\n\nNo workarounds are known.\n\n\n- [time-rs/time#293](https://github.com/time-rs/time/issues/293)\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0159.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "7b3987dc3f44aa6e5531fe701f18f8d718adfb174f5f0503b175bceea99098ea"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08907-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "bea201ef-752c-4d5c-8bab-d4e40c179e8c",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "crossbeam-channel",
          "details": "Affected versions of this crate called `mem::zeroed()` to create values of a user-supplied type `T`.\nThis is unsound e.g. if `T` is a reference type (which must be non-null).\n \nThe flaw was corrected by avoiding the use of `mem::zeroed()`, using `MaybeUninit` instead.\nInstalled Version: \"0.4.2\", Update to Version: \"\u003e= 0.4.3\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2022-0019.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "7ec7780202b15912a9da23d83e6bf6866bd684ff20c8488ab014775f6de05f00"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089071-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "854b9db5-3b53-4fda-a992-89b7c562b0f4",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "crossbeam-deque",
          "details": "In the affected version of this crate, the result of the race condition is that one or more tasks in the worker queue can be popped twice instead of other tasks that are forgotten and never popped. If tasks are allocated on the heap, this can cause double free and a memory leak. If not, this still can cause a logical bug.\n\nCrates using `Stealer::steal`, `Stealer::steal_batch`, or `Stealer::steal_batch_and_pop` are affected by this issue.\n\nCredits to @kmaork for discovering, reporting and fixing the bug.\nInstalled Version: \"0.7.3\", Update to Version: \"\u003e= 0.7.4, \u003c 0.8.0, \u003e= 0.8.1\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0093.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "61ba1de9b59e1909f5b92a121ae4c06d223a6ac0e50129d8f3157dca37eb3b58"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089072-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "50cf2c58-ea46-4694-a020-9d2816ea1f25",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "crossbeam-queue",
          "details": "Affected versions of this crate called `mem::zeroed()` to create values of a user-supplied type `T`.\nThis is unsound e.g. if `T` is a reference type (which must be non-null).\n \nThe flaw was corrected by avoiding the use of `mem::zeroed()`, using `MaybeUninit` instead.\nInstalled Version: \"0.2.1\", Update to Version: \"\u003e= 0.2.3\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2022-0021.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "67617b23b9f400b41c841066f53c5a93f1bbfc6361beddfad2ed8f57d01cd116"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089074-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "e33dae2b-b268-4a9d-8386-97f465d6a05b",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "futures-task",
          "details": "Affected versions of the crate did not properly implement a `'static` lifetime bound on the `waker` function.\nThis resulted in a use-after-free if `Waker::wake()` is called after original data had been dropped.\n\nThe flaw was corrected by adding `'static` lifetime bound to the data `waker` takes.\nInstalled Version: \"0.3.4\", Update to Version: \"\u003e= 0.3.6\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0060.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "410211a2c7e5384f0f7279b5781e381b37b5b024b4e7432037b8c7152c3c66c9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089075-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2d42351d-1a20-4ddf-94bd-63a3469416e7",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "futures-task",
          "details": "Affected versions of the crate used a `UnsafeCell` in thread-local storage to return a noop waker reference,\nassuming that the reference would never be returned from another thread.\n\nThis resulted in a segmentation fault crash if `Waker::wake_by_ref()` was called on a waker returned from another thread due to \nit attempting to dereference a pointer that wasn't accessible from the main thread.\n\nReproduction Example (from issue):\nuse futures_task::noop_waker_ref;\nfn main() {\n    let waker = std::thread::spawn(|| noop_waker_ref()).join().unwrap();\n    waker.wake_by_ref();\n}\n\nThe flaw was corrected by using a `OnceCell::Lazy\u003c\u003e` wrapper around the noop waker instead of thread-local storage.\nInstalled Version: \"0.3.4\", Update to Version: \"\u003e= 0.3.5\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0061.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "71006174f7ba7d665297cc409fadbfc1068a62054362ee1d6c504c9b86e0e84b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089076-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ee2c37d1-8483-4841-b77d-95c8b2101ca5",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "futures-util",
          "details": "Affected versions of the crate had a Send/Sync implementation for MappedMutexGuard that only considered variance on T, while MappedMutexGuard dereferenced to U.\n\nThis could of led to data races in safe Rust code when a closure used in MutexGuard::map() returns U that is unrelated to T.\n\nThe issue was fixed by fixing `Send` and `Sync` implementations, and by adding a `PhantomData\u003c\u0026'a mut U\u003e` marker to the `MappedMutexGuard` type to tell the compiler that the guard is over\nU too.\nInstalled Version: \"0.3.4\", Update to Version: \"\u003e= 0.3.7\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0059.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8c4f7126dbcd5476c3941999ad93cc8b8580b579884e1b548c68f8fb86fecf6b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089077-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "19b20f55-cc2f-469c-bf3f-446e41d86214",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "hyper",
          "details": "hyper's HTTP server code had a flaw that incorrectly understands some requests\nwith multiple transfer-encoding headers to have a chunked payload, when it\nshould have been rejected as illegal. This combined with an upstream HTTP proxy\nthat understands the request payload boundary differently can result in\n\"request smuggling\" or \"desync attacks\".\nInstalled Version: \"0.12.35\", Update to Version: \"\u003e= 0.14.3, 0.13.10, 0.12.36\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0020.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "92f1963e67696c7390a92a4181e265ebdadcedb19cb4cd935476b65abf97a698"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089078-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ce861036-552b-49e9-9a2f-f99382933439",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "hyper",
          "details": "`hyper`'s HTTP header parser accepted, according to RFC 7230, illegal contents inside `Content-Length` headers.\nDue to this, upstream HTTP proxies that ignore the header may still forward them along if it chooses to ignore the error.\n\nTo be vulnerable, `hyper` must be used as an HTTP/1 server and using an HTTP proxy upstream that ignores the header's contents\nbut still forwards it. Due to all the factors that must line up, an attack exploiting this vulnerability is unlikely.\nInstalled Version: \"0.12.35\", Update to Version: \"\u003e= 0.14.10\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0078.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "2016f92c130c63994b70ce7224dea9bc62881c5bab0606febf92d2c01633cb27"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089079-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "42c56f16-c41f-4228-b036-88be1843d90e",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "hyper",
          "details": "When decoding chunk sizes that are too large, `hyper`'s code would encounter an integer overflow. Depending on the situation,\nthis could lead to data loss from an incorrect total size, or in rarer cases, a request smuggling attack.\n\nTo be vulnerable, you must be using `hyper` for any HTTP/1 purpose, including as a client or server, and consumers must send\nrequests or responses that specify a chunk size greater than 18 exabytes. For a possible request smuggling attack to be possible,\nany upstream proxies must accept a chunk size greater than 64 bits.\nInstalled Version: \"0.12.35\", Update to Version: \"\u003e= 0.14.10\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0079.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "4c80b7a77ef11620049005b27ed52fa3ee2d8b101b2e26eaa2a9f65272232f94"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08908-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "55745bb0-db27-4682-813b-6bdabca3470a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "hyper",
          "details": "Affected versions of this crate called `mem::uninitialized()` in the HTTP1 parser to create values of type `httparse::Header` (from the `httparse` crate).\nThis is unsound, since `Header` contains references and thus must be non-null.\n \nThe flaw was corrected by avoiding the use of `mem::uninitialized()`, using `MaybeUninit` instead.\nInstalled Version: \"0.12.35\", Update to Version: \"\u003e= 0.14.12\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2022-0022.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "0982bf6aa78d0407388a6f15d57db3fe580011dff2202c55c4209cf75eab5006"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089081-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "c25006e4-39f8-4ebf-a05f-3538e948aeb0",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "lock_api",
          "details": "Affected versions of lock_api had unsound implementations of the `Send` or\n`Sync` traits for some guard objects, namely:\n\n* MappedMutexGuard\n* MappedRwLockReadGuard\n* MappedRwLockWriteGuard\n* RwLockReadGuard\n* RwLockWriteGuard\n\nThese guards could allow data races through types that are not safe to `Send`\nacross thread boundaries in safe Rust code.\n\nThis issue was fixed by changing the trait bounds on the `Mapped` guard types\nand removing the `Sync` trait for the `RwLock` guards.\nInstalled Version: \"0.3.3\", Update to Version: \"\u003e= 0.4.2\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0070.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "b1d6c61387d79567f57c68242557c223832df5b43c1a16ddb8bbc89eb516964d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089082-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "b46e12c5-b2ea-4245-80ea-741077a91f1a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "miow",
          "details": "The [`miow`](https://crates.io/crates/miow) crate has assumed `std::net::SocketAddrV4`\nand `std::net::SocketAddrV6` have the same memory layout as the system C representation\n`sockaddr`. It has simply casted the pointers to convert the socket addresses to the\nsystem representation. The standard library does not say anything about the memory\nlayout, and this will cause invalid memory access if the standard library\nchanges the implementation. No warnings or errors will be emitted once the\nchange happens.\nInstalled Version: \"0.2.1\", Update to Version: \"^ 0.2.2, \u003e= 0.3.6\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0080.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "a9195ca695246618a0a037b7b480d1f39af919d5aa3a89d3c0b0d4e62d85fc63"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089083-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "414e561e-bc55-410a-aa82-1a2dd7d89f52",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "net2",
          "details": "The [`net2`](https://crates.io/crates/net2) crate has been deprecated\nand users are encouraged to considered [`socket2`](https://crates.io/crates/socket2) instead.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0016.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "c172af77b9fc82c46b8f0b678acce358de3ec826dd6ae3c2402171f3d88b0e99"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089085-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ac0a2fa3-81ff-45ff-aad4-44ea92d88838",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "net2",
          "details": "The [`net2`](https://crates.io/crates/net2) crate has assumed `std::net::SocketAddrV4`\nand `std::net::SocketAddrV6` have the same memory layout as the system C representation\n`sockaddr`. It has simply casted the pointers to convert the socket addresses to the\nsystem representation. The standard library does not say anything about the memory\nlayout, and this will cause invalid memory access if the standard library\nchanges the implementation. No warnings or errors will be emitted once the\nchange happens.\nInstalled Version: \"0.2.33\", Update to Version: \"\u003e= 0.2.36\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0078.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8970befa90a8f919e9cc140a33a3f4f1fa37db99eb109a7ca73efc1fe328e402"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089086-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "20330253-a43d-4e3b-9938-b60245b89ce1",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "ordered-float",
          "details": "After using an assignment operators such as `NotNan::add_assign`, `NotNan::mul_assign`, etc., it was possible for the resulting `NotNan` value to contain a `NaN`.  This could cause undefined behavior in safe code, because the safe `NotNan::cmp` method contains internal unsafe code that assumes the value is never `NaN`.  (It could also cause undefined behavior in third-party unsafe code that makes the same assumption, as well as logic errors in safe code.)\n\nThis was mitigated starting in version 0.4.0, by panicking if the assigned value is NaN.  However, in affected versions from 0.4.0 onward, code that uses the `NotNan` value during unwinding, or that continues after catching the panic, could still observe the invalid value and trigger undefined behavior.\n\nThe flaw is fully corrected in versions 1.1.1 and 2.0.1, by ensuring that the assignment operators panic without modifying the operand, if the result would be `NaN`.\nInstalled Version: \"1.0.2\", Update to Version: \"^1.1.1, \u003e= 2.0.1\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0082.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "0c36a8f5b7e5197ead6ff8ff768d56008d5a2554895db145d7d08e204b0c9078"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089087-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4f4fd3e9-c433-4c00-ad49-38ce61232e40",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "regex",
          "details": "The Rust Security Response WG was notified that the `regex` crate did not\nproperly limit the complexity of the regular expressions (regex) it parses. An\nattacker could use this security issue to perform a denial of service, by\nsending a specially crafted regex to a service accepting untrusted regexes. No\nknown vulnerability is present when parsing untrusted input with trusted\nregexes.\n\nThis issue has been assigned CVE-2022-24713. The severity of this vulnerability\nis \"high\" when the `regex` crate is used to parse untrusted regexes. Other uses\nof the `regex` crate are not affected by this vulnerability.\n\n\nThe `regex` crate features built-in mitigations to prevent denial of service\nattacks caused by untrusted regexes, or untrusted input matched by trusted\nregexes. Those (tunable) mitigations already provide sane defaults to prevent\nattacks. This guarantee is documented and it's considered part of the crate's\nAPI.\n\nUnfortunately a bug was discovered in the mitigations designed to prevent\nuntrusted regexes to take an arbitrary amount of time during parsing, and it's\npossible to craft regexes that bypass such mitigations. This makes it possible\nto perform denial of service attacks by sending specially crafted regexes to\nservices accepting user-controlled, untrusted regexes.\n\n\nAll versions of the `regex` crate before or equal to 1.5.4 are affected by this\nissue. The fix is include starting from  `regex` 1.5.5.\n\n\nWe recommend everyone accepting user-controlled regexes to upgrade immediately\nto the latest version of the `regex` crate.\n\nUnfortunately there is no fixed set of problematic regexes, as there are\npractically infinite regexes that could be crafted to exploit this\nvulnerability. Because of this, we do not recommend denying known problematic\nregexes.\n\n\nWe want to thank Addison Crump for responsibly disclosing this to us according\nto the [Rust security policy][1], and for helping review the fix.\n\nWe also want to thank Andrew Gallant for developing the fix, and Pietro Albini\nfor coordinating the disclosure and writing this advisory.\n\n[1]: https://www.rust-lang.org/policies/security\nInstalled Version: \"1.3.6\", Update to Version: \"\u003e= 1.5.5\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2022-0013.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "98fec01b92f3f391b363c733463a94003d579fdea24d90dd01eedee170c5872d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089088-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "d6421ddc-fe72-41ff-bb67-8ba1e89357a3",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "smallvec",
          "details": "A bug in the `SmallVec::insert_many` method caused it to allocate a buffer that was smaller than needed.  It then wrote past the end of the buffer, causing a buffer overflow and memory corruption on the heap.\n\nThis bug was only triggered if the iterator passed to `insert_many` yielded more items than the lower bound returned from its `size_hint` method.\n \nThe flaw was corrected in smallvec 0.6.14 and 1.6.1, by ensuring that additional space is always reserved for each item inserted.  The fix also simplified the implementation of `insert_many` to use less unsafe code, so it is easier to verify its correctness.\n\nThank you to Yechan Bae (@Qwaz) and the Rust group at Georgia Tech’s SSLab for finding and reporting this bug.\nInstalled Version: \"0.6.13\", Update to Version: \"\u003e= 0.6.14, \u003c 1.0.0, \u003e= 1.6.1\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0003.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8b697b599753523ef034d7337f752b63935852bd65e412a5f5d3f1278eab3c70"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08909-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1dfa1f21-2805-484d-b7a0-bbe093540551",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "smallvec",
          "details": "A bug in the `SmallVec::insert_many` method caused it to allocate a buffer that was smaller than needed.  It then wrote past the end of the buffer, causing a buffer overflow and memory corruption on the heap.\n\nThis bug was only triggered if the iterator passed to `insert_many` yielded more items than the lower bound returned from its `size_hint` method.\n \nThe flaw was corrected in smallvec 0.6.14 and 1.6.1, by ensuring that additional space is always reserved for each item inserted.  The fix also simplified the implementation of `insert_many` to use less unsafe code, so it is easier to verify its correctness.\n\nThank you to Yechan Bae (@Qwaz) and the Rust group at Georgia Tech’s SSLab for finding and reporting this bug.\nInstalled Version: \"1.2.0\", Update to Version: \"\u003e= 0.6.14, \u003c 1.0.0, \u003e= 1.6.1\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0003.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "f0772e2679b334e54b1f47d668628ebce3151c8682e6801c23b8682770ef9957"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089091-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "db98ab6a-bd2b-480e-ba84-b30e66956f71",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "thread_local",
          "details": "In the affected version of this crate, `{Iter, IterMut}::next` used a weaker memory ordering when loading values than what was required, exposing a potential data race\nwhen iterating over a `ThreadLocal`'s values.\n\nCrates using `Iter::next`, or `IterMut::next` are affected by this issue.\nInstalled Version: \"1.0.1\", Update to Version: \"\u003e= 1.1.4\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2022-0006.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "ad6bf7ab89b7de2eb5ad04eb43dbed11c7afa24ec915dccd3d940d9fa99a0261"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089092-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1e19d7eb-f073-4c28-8b01-4d5208fabe4b",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "time",
          "details": "Unix-like operating systems may segfault due to dereferencing a dangling pointer in specific circumstances. This requires an environment variable to be set in a different thread than the affected functions. This may occur without the user's knowledge, notably in a third-party library.\n\nThe affected functions from time 0.2.7 through 0.2.22 are:\n\n- `time::UtcOffset::local_offset_at`\n- `time::UtcOffset::try_local_offset_at`\n- `time::UtcOffset::current_local_offset`\n- `time::UtcOffset::try_current_local_offset`\n- `time::OffsetDateTime::now_local`\n- `time::OffsetDateTime::try_now_local`\n\nThe affected functions in time 0.1 (all versions) are:\n\n- `at`\n- `at_utc`\n- `now`\n\nNon-Unix targets (including Windows and wasm) are unaffected.\n\n\nPending a proper fix, the internal method that determines the local offset has been modified to always return `None` on the affected operating systems. This has the effect of returning an `Err` on the `try_*` methods and `UTC` on the non-`try_*` methods.\n\nUsers and library authors with time in their dependency tree should perform `cargo update`, which will pull in the updated, unaffected code.\n\nUsers of time 0.1 do not have a patch and should upgrade to an unaffected version: time 0.2.23 or greater or the 0.3 series.\n\n\nNo workarounds are known.\n\n\ntime-rs/time#293\nInstalled Version: \"0.1.42\", Update to Version: \"\u003e= 0.2.23\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0071.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "d89cf89bb5b7126730bdab32a401b7b2574d7891533d22ccff9f9d6b739f3ae0"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089093-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5140983c-fead-416e-afe1-ae822519bf84",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "bnpp-board/benjamin/monitoring-stack/rustsrv/Cargo.lock",
          "code": "tokio",
          "details": "If a `tokio::sync::oneshot` channel is closed (via the\n[`oneshot::Receiver::close`] method), a data race may occur if the\n`oneshot::Sender::send` method is called while the corresponding\n`oneshot::Receiver` is `await`ed or calling `try_recv`.\n\nWhen these methods are called concurrently on a closed channel, the two halves\nof the channel can concurrently access a shared memory location, resulting in a\ndata race. This has been observed to [cause memory corruption][corruption].\n\nNote that the race only occurs when **both** halves of the channel are used\nafter the `Receiver` half has called `close`. Code where `close` is not used, or where the\n`Receiver` is not `await`ed and `try_recv` is not called after calling `close`,\nis not affected.\n\nSee [tokio#4225][issue] for more details.\n\n[corruption]: https://github.com/tokio-rs/tokio/issues/4225#issuecomment-967434847\n[issue]: https://github.com/tokio-rs/tokio/issues/4225\n[`oneshot::Receiver::close`]: https://docs.rs/tokio/1.14.0/tokio/sync/oneshot/struct.Receiver.html#method.close\nInstalled Version: \"0.1.22\", Update to Version: \"\u003e= 1.8.4, \u003c 1.9.0, \u003e= 1.13.1\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0124.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "8c090e82c73c1a2ccf972bc0ee2b6ed038da0b82539ebd03520336e663590dee"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089094-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "2bb52847-95df-414b-86b9-8bedadb59b3a",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "cargo2nix/examples/2-bigger-project/Cargo.lock",
          "code": "hyper",
          "details": "`hyper`'s HTTP header parser accepted, according to RFC 7230, illegal contents inside `Content-Length` headers.\nDue to this, upstream HTTP proxies that ignore the header may still forward them along if it chooses to ignore the error.\n\nTo be vulnerable, `hyper` must be used as an HTTP/1 server and using an HTTP proxy upstream that ignores the header's contents\nbut still forwards it. Due to all the factors that must line up, an attack exploiting this vulnerability is unlikely.\nInstalled Version: \"0.13.10\", Update to Version: \"\u003e= 0.14.10\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0078.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "66e337867da3cd1e85fc8cc9e632ee29059f6925fc9805c7b94db9bb39b22d83"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089095-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "68da3f62-2f30-476d-98be-b6f5adafdeaa",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "cargo2nix/examples/2-bigger-project/Cargo.lock",
          "code": "hyper",
          "details": "When decoding chunk sizes that are too large, `hyper`'s code would encounter an integer overflow. Depending on the situation,\nthis could lead to data loss from an incorrect total size, or in rarer cases, a request smuggling attack.\n\nTo be vulnerable, you must be using `hyper` for any HTTP/1 purpose, including as a client or server, and consumers must send\nrequests or responses that specify a chunk size greater than 18 exabytes. For a possible request smuggling attack to be possible,\nany upstream proxies must accept a chunk size greater than 64 bits.\nInstalled Version: \"0.13.10\", Update to Version: \"\u003e= 0.14.10\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0079.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "ce59c95f4c3117f5164369f562d4637fd2c51bbf35fa0c2b613380746b81c126"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089096-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1e432470-5ae0-4fcd-9b41-1e2525f1d0a1",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "cargo2nix/examples/2-bigger-project/Cargo.lock",
          "code": "hyper",
          "details": "Affected versions of this crate called `mem::uninitialized()` in the HTTP1 parser to create values of type `httparse::Header` (from the `httparse` crate).\nThis is unsound, since `Header` contains references and thus must be non-null.\n \nThe flaw was corrected by avoiding the use of `mem::uninitialized()`, using `MaybeUninit` instead.\nInstalled Version: \"0.13.10\", Update to Version: \"\u003e= 0.14.12\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2022-0022.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "9039f02b46acb7fc52c4f59e5e73ff453ce0c535933d217350edaf92e9343c2c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089097-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3aec557e-d967-4074-9e89-844d11c0e72d",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "cargo2nix/examples/2-bigger-project/Cargo.lock",
          "code": "net2",
          "details": "The [`net2`](https://crates.io/crates/net2) crate has been deprecated\nand users are encouraged to considered [`socket2`](https://crates.io/crates/socket2) instead.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2020-0016.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "0b75c5dc5d464ce2779b1a5925d98386b85a82d69666420ab30b32a6dd07952d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089098-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "624e74d1-5679-4a65-b167-62e4b69c7538",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "cargo2nix/examples/2-bigger-project/Cargo.lock",
          "code": "tokio",
          "details": "If a `tokio::sync::oneshot` channel is closed (via the\n[`oneshot::Receiver::close`] method), a data race may occur if the\n`oneshot::Sender::send` method is called while the corresponding\n`oneshot::Receiver` is `await`ed or calling `try_recv`.\n\nWhen these methods are called concurrently on a closed channel, the two halves\nof the channel can concurrently access a shared memory location, resulting in a\ndata race. This has been observed to [cause memory corruption][corruption].\n\nNote that the race only occurs when **both** halves of the channel are used\nafter the `Receiver` half has called `close`. Code where `close` is not used, or where the\n`Receiver` is not `await`ed and `try_recv` is not called after calling `close`,\nis not affected.\n\nSee [tokio#4225][issue] for more details.\n\n[corruption]: https://github.com/tokio-rs/tokio/issues/4225#issuecomment-967434847\n[issue]: https://github.com/tokio-rs/tokio/issues/4225\n[`oneshot::Receiver::close`]: https://docs.rs/tokio/1.14.0/tokio/sync/oneshot/struct.Receiver.html#method.close\nInstalled Version: \"0.2.25\", Update to Version: \"\u003e= 1.8.4, \u003c 1.9.0, \u003e= 1.13.1\" for fix this issue.\nPrimaryURL: https://rustsec.org/advisories/RUSTSEC-2021-0124.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "5eda46fbdc6750b3f3a9c5c9b640b917c99e03fe0cc7706c1f07c800d3df07fa"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089158-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "718628fa-1a32-4882-bd72-536cea9fab33",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/controller/poetry.lock",
          "code": "click",
          "details": "Installed Version: \"7.1.2\", Update to Version: \"8.0.0\" for fix this issue.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "1d3b27986340ea4957297450bb67db808536bbd38bbcb6d0c18c98e93de5a452"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089163-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "f7998068-1972-43f5-bb16-7c357dac12c5",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/controller/poetry.lock",
          "code": "pylint",
          "details": "Installed Version: \"2.12.2\", Update to Version: \"2.13.0\" for fix this issue.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "27ed59411358a12bb9c358f9679da5b07feade2fb404933b0cfcafb3db9c6d52"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089168-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "71012b9b-356b-4493-a413-333f1e8e4fa4",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/mcmc_stats_server/poetry.lock",
          "code": "pylint",
          "details": "Installed Version: \"2.11.1\", Update to Version: \"2.13.0\" for fix this issue.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "602582f3b68465613c49453f16a9da72346dbc1b6c394ead1a916eab2e59f038"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08917-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "835af194-8ba1-4a74-98bf-a4160dbc6671",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/poetry.lock",
          "code": "celery",
          "details": "Installed Version: \"5.1.2\", Update to Version: \"5.2.0\" for fix this issue.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "30815f9b230925981b572e67c1c202dbc8adc5cb36d2d311682d8a9dd7d7d494"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089171-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "66cd086b-3558-46c0-a258-56c5a6fdc3df",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/scheduler/poetry.lock",
          "code": "click",
          "details": "Installed Version: \"7.1.2\", Update to Version: \"8.0.0\" for fix this issue.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "f4408d3537f62457e956b37616fd5f75c12c5e418362847bd0cfa8b2c598b671"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089173-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "34cdaafc-4b6c-4dbb-bf9c-7bb9a18e5ee1",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/user_code_server/poetry.lock",
          "code": "click",
          "details": "Installed Version: \"7.1.2\", Update to Version: \"8.0.0\" for fix this issue.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "f454f7d18c67d23dde78fe3823dbfe238b8faac185af927ac7a09f9af894f11d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089178-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "6d75b2d6-f521-4f5f-ae3b-d53d14bdcf93",
          "line": "0",
          "column": "0",
          "confidence": "MEDIUM",
          "file": "chainsail/app/user_code_server/poetry.lock",
          "code": "pylint",
          "details": "Installed Version: \"2.11.1\", Update to Version: \"2.13.0\" for fix this issue.",
          "securityTool": "Trivy",
          "language": "Generic",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "",
          "commitEmail": "",
          "commitHash": "",
          "commitMessage": "",
          "commitDate": "",
          "vulnHash": "4d7f42b94def8175997ad576b91496ac4f09cf9fa4d110beaca4e20d299f6223"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089211-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4a5d9ca9-36f0-4c60-890c-9e22d9daf222",
          "line": "1",
          "column": "",
          "confidence": "LOW",
          "file": "blog-resources/buildkite-for-nix-ci/nix_cache.tf",
          "code": "code beetween line 1 and 8.",
          "details": "CKV_GCP_62 -\u003e [Bucket should log access]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b303a74181a8e293780a25e67e84181b0375134620743e049ac0c7eaeda41eb4"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089212-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "806fd4ff-c9c2-41cd-a36b-d8b4a28c4935",
          "line": "1",
          "column": "",
          "confidence": "LOW",
          "file": "blog-resources/buildkite-for-nix-ci/nix_cache.tf",
          "code": "code beetween line 1 and 8.",
          "details": "CKV_GCP_29 -\u003e [Ensure that Cloud Storage buckets have uniform bucket-level access enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "81a3017cfb208a68983ee291de012425b5745643cf600493569f0dc658f183ff"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089213-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "526bafb4-3b3e-4d92-89b1-1ad42a230e0e",
          "line": "16",
          "column": "",
          "confidence": "LOW",
          "file": "blog-resources/buildkite-for-nix-ci/nix_cache.tf",
          "code": "code beetween line 16 and 20.",
          "details": "CKV_GCP_28 -\u003e [Ensure that Cloud Storage bucket is not anonymously or publicly accessible]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "4f997a257c6ff6927e24778c74d858bc6b5a0375abb7b05892e085ec2f6d7b47"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089214-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5e16ccb3-eb0d-42c2-8530-0960c9b6249c",
          "line": "1",
          "column": "",
          "confidence": "LOW",
          "file": "blog-resources/buildkite-for-nix-ci/nixos_image_custom.tf",
          "code": "code beetween line 1 and 4.",
          "details": "CKV_GCP_62 -\u003e [Bucket should log access]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "cf95de03f73e850825524b5958c8198f45b33c7fc6f50718ec108218d790a1fb"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089215-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "528e6543-6b15-485e-982f-bbbfc92bc27b",
          "line": "1",
          "column": "",
          "confidence": "LOW",
          "file": "blog-resources/buildkite-for-nix-ci/nixos_image_custom.tf",
          "code": "code beetween line 1 and 4.",
          "details": "CKV_GCP_29 -\u003e [Ensure that Cloud Storage buckets have uniform bucket-level access enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ea652ddcf52ed48696f84fb901dce31435d918a5d5c6358027105c252ae2ee69"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089217-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "aa7d5490-94e4-48d6-99cb-7d6a67cf788e",
          "line": "12",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 12 and 23.",
          "details": "CKV_GCP_62 -\u003e [Bucket should log access]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "fe946549525056551b10bfe47f017d14a22a6218819a3beb79312aadbe69da2f"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089218-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "55de83db-0ee3-4bb9-93a7-657c0b2af96e",
          "line": "12",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 12 and 23.",
          "details": "CKV_GCP_29 -\u003e [Ensure that Cloud Storage buckets have uniform bucket-level access enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "48096a8fd43acbe00a534713a00504d994b27541d9fba907e8faaadac4815d37"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089219-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "69eb5d20-674c-47be-97a3-23569c02109c",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_64 -\u003e [Ensure clusters are created with Private Nodes]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0447d74c1760b270504047fc5b828dd8513db87142ea874dc2b0e960e4be95cc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08922-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "75d1993c-c376-4ef1-83d9-6fcca30509d3",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_24 -\u003e [Ensure PodSecurityPolicy controller is enabled on the Kubernetes Engine Clusters]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e94ee63aa19326d9ac83fb5c73821960567a23570458c3612ba514046274193e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089221-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "3bbd7ecc-ff99-44c2-b829-7bc935608366",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_70 -\u003e [Ensure the GKE Release Channel is set]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9c9848a8b2d6ddd0fa8949abb5e1fc00f5ca777f82e719223ba7967ed7f9d733"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089223-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "9cfc9cd0-3a0f-4fa6-b19e-97843acfaa52",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_69 -\u003e [Ensure the GKE Metadata Server is Enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b85a7f26d6e17070df217e8bb05e6549a60ffd037568329b4afb771fa0289ead"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089224-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "7602a812-c3c4-40e0-a3d1-a69a662c9888",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_13 -\u003e [Ensure a client certificate is used by clients to authenticate to Kubernetes Engine Clusters]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "b7d8953aeb5d2a4ee06aaae3e9c4c2712400e6ac0ac08e11afaf58166a5f586e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089225-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "fc0f97f2-6ca6-434d-9e43-920e4914aa2b",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_25 -\u003e [Ensure Kubernetes Cluster is created with Private cluster enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "126abc39571c344e6d9e28eee44c874ddeaf7c0bd9c9576865851d6d5720e80d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089226-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "44a9dbd2-3c2d-4806-bca6-4033b117fabf",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_67 -\u003e [Ensure legacy Compute Engine instance metadata APIs are Disabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "467641994a182e9690caf4345cfc610b43d791584df3c43e61cdd3b17de387c8"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089227-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "088cce0a-2f6f-465a-b03a-c60e89be5cda",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_66 -\u003e [Ensure use of Binary Authorization]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "f730bd1d0fdd5d43ed942e04978fb74c4b6471473925ec7fe9c3bce281e5a6a5"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089228-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a600150d-7a22-4bdb-8d2c-76a93f5d16b4",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_23 -\u003e [Ensure Kubernetes Cluster is created with Alias IP ranges enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "9a87482e3ce0e2c2e8d899a4bd0ae546b3a54d801402ad113ceff6b095cecc9c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089229-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "a2d2e8be-1e64-4675-b51e-ca48aa2d30c1",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_19 -\u003e [Ensure GKE basic auth is disabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "eb81b9fd52a64119b13dbafcfdce32aa83d83ff8d2093e2bc45c34bb464e424e"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.08923-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ef8cf424-19c0-4c4f-a9b9-2e909d2bf35d",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_21 -\u003e [Ensure Kubernetes Clusters are configured with Labels]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "a591e3925a5297d8f310b29af102a08c5a0e0818dbe6d50afbc65846e2c46183"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089231-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "158e8b68-c069-4aa0-bf7d-372c7b413e43",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_20 -\u003e [Ensure master authorized networks is set to enabled in GKE clusters]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0839fe8288beaee5545ff9779a921dd41d236b163cdd221deac7e9ec3446e740"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089232-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "81213029-20aa-46d1-85db-62602afde3ec",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_12 -\u003e [Ensure Network Policy is enabled on Kubernetes Engine Clusters]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "5e2a3bd4018d2be13b09b11bece3d8e8ded9d13a77f66e0bf247c6c971aee90b"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089234-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "437710db-5f80-4aba-8d5a-7f5c0b054bd6",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_61 -\u003e [Enable VPC Flow Logs and Intranode Visibility]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0b67ae2f45e24908a9ed827e0991d177b2a51805dcf9879fd44e00cf92b83893"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089235-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4107928e-d2c9-4baa-96dc-33296ee17922",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_71 -\u003e [Ensure Shielded GKE Nodes are Enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "ddcb155c8a3a83400b5b4757975fd2dc32fe3a4e70f686c9f017379eb3e966dc"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089236-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "26ebe942-5a16-4ac1-aa58-743bc8cae4b9",
          "line": "42",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 42 and 52.",
          "details": "CKV_GCP_65 -\u003e [Manage Kubernetes RBAC users with Google Groups for GKE]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6bfc1ea72dd66a55f34f0990b804b235338ab44f6e6014098e69313769663384"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089237-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "202e2fbf-9b49-4ca6-8485-d844af51af4f",
          "line": "54",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 54 and 91.",
          "details": "CKV_GCP_69 -\u003e [Ensure the GKE Metadata Server is Enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "3729d376dd5d89262c811b99046e97e832861f7aef1540f3fb3becd85be31e8c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089238-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "0800fe44-e13e-45f7-bb60-9b1647201de2",
          "line": "54",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 54 and 91.",
          "details": "CKV_GCP_10 -\u003e [Ensure 'Automatic node upgrade' is enabled for Kubernetes Clusters]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "5d1928d4a369bfd3948a5a81e5a137361a54a906d419174e93dd14f907a8af3d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089239-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "da1fd589-01ae-4390-9c7d-69d83d324495",
          "line": "54",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 54 and 91.",
          "details": "CKV_GCP_22 -\u003e [Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6f283b6584ea7c6e3c0b0cccc1364faf3d28d0037d6b53f85783003c7a010f4d"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089241-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "8406b1a6-284b-4625-ac84-45dcdf3c35f3",
          "line": "54",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 54 and 91.",
          "details": "CKV_GCP_9 -\u003e [Ensure 'Automatic node repair' is enabled for Kubernetes Clusters]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "81d05943020307c62772127fe2195d2ba40cf507a729a8f6712a3c746075f3be"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089242-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "1e3df145-5a70-412b-86ea-430c2955672e",
          "line": "54",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 54 and 91.",
          "details": "CKV_GCP_68 -\u003e [Ensure Secure Boot for Shielded GKE Nodes is Enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "6322d992b957cbfecd13683318cce63a49042246b980d5bd181b33037f62c7f3"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089243-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "ab40e73d-6963-491a-87df-99fd3f059005",
          "line": "93",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 93 and 111.",
          "details": "CKV_GCP_69 -\u003e [Ensure the GKE Metadata Server is Enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0e247d638db712ee06da436eebc5a54a957a605ba0d48a2391fcb47d946db944"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089244-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "72728870-a0be-424b-bfa7-b752573d642f",
          "line": "93",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 93 and 111.",
          "details": "CKV_GCP_10 -\u003e [Ensure 'Automatic node upgrade' is enabled for Kubernetes Clusters]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "81ba61f2469316639eee9031575d934301078c1619b681356bec6dc9625fed38"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089245-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "5e924946-7ebf-4635-aae5-6bc456956546",
          "line": "93",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 93 and 111.",
          "details": "CKV_GCP_22 -\u003e [Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "0cae8d15df9ccaf56968083770a8d81f3e1db98b350ae2e3c6f5b7b09c0acb12"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089246-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "52e73477-7ea5-4f70-8b48-a075c5c7d895",
          "line": "93",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 93 and 111.",
          "details": "CKV_GCP_9 -\u003e [Ensure 'Automatic node repair' is enabled for Kubernetes Clusters]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "bfeaa05af2147f47715e5dc44a277c380dc17248eb03a6b7f0ed3ebcbc774ea9"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089247-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "4e020174-fb74-4c9a-b824-2e821e8d582c",
          "line": "93",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 93 and 111.",
          "details": "CKV_GCP_68 -\u003e [Ensure Secure Boot for Shielded GKE Nodes is Enabled]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "e422465cbd7f078b2387334056c5091a50bcb2706a98be74b979e1a10bdcc39c"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089248-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "57a3f382-b7ae-4377-9c61-ff689ecdb9bd",
          "line": "1",
          "column": "",
          "confidence": "LOW",
          "file": "blog-resources/buildkite-for-nix-ci/service_account.tf",
          "code": "code beetween line 1 and 4.",
          "details": "CKV2_GCP_3 -\u003e [Ensure that there are only GCP-managed service account keys for each service account]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "f546080da0e1f3c2564dbd3d43b87dad40489470c011e2d61d5a992920b22a06"
        }
      },
      {
        "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
        "analysisID": "b043b8b4-a98e-4ffa-8295-c121e6095c81",
        "createdAt": "2022-07-25T20:19:19.089249-04:00",
        "vulnerabilities": {
          "vulnerabilityID": "20835295-fbaf-4017-baad-ece21656036b",
          "line": "3",
          "column": "",
          "confidence": "LOW",
          "file": "chainsail/terraform/modules/chainsail-gcp/main.tf",
          "code": "code beetween line 3 and 6.",
          "details": "CKV2_GCP_3 -\u003e [Ensure that there are only GCP-managed service account keys for each service account]",
          "securityTool": "Checkov",
          "language": "HCL",
          "severity": "UNKNOWN",
          "type": "Vulnerability",
          "commitAuthor": "-",
          "commitEmail": "-",
          "commitHash": "-",
          "commitMessage": "-",
          "commitDate": "-",
          "vulnHash": "bad9f7cd6c4647feaf7e92f59d08c47c87191adbc42e7283afdc9b41dc6e03cd"
        }
      }
    ]
  }